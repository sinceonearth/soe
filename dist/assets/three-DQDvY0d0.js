/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const J4="181",ji={ROTATE:0,DOLLY:1,PAN:2},ma={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},V_=0,qf=1,G_=2,SM=0,Rp=1,TM=2,Li=3,Ui=0,Xt=1,jn=2,ci=0,Ii=1,Aa=2,wa=3,Ra=4,ya=5,Kn=100,Np=101,Cp=102,z_=103,k_=104,nr=200,Pp=201,Lp=202,Dp=203,rl=204,ol=205,Up=206,Ip=207,Fp=208,Bp=209,Op=210,MM=211,EM=212,AM=213,wM=214,al=0,cl=1,ll=2,Vr=3,ul=4,hl=5,dl=6,fl=7,Dl=0,H_=1,W_=2,oi=0,$_=1,X_=2,q_=3,Y_=4,RM=5,j_=6,K_=7,Vp=300,Gs=301,zs=302,Na=303,Ca=304,Eo=306,Ao=1e3,gi=1001,wo=1002,Qt=1003,Gp=1004,ar=1005,ln=1006,ba=1007,xi=1008,NM=1008,un=1009,_o=1010,yo=1011,us=1012,On=1013,Kt=1014,Sn=1015,hn=1016,Oh=1017,Vh=1018,Fi=1020,Gh=35902,zh=35899,zp=1021,Ul=1022,_n=1023,Bi=1026,Oi=1027,Il=1028,cc=1029,hs=1030,lc=1031,CM=1032,uc=1033,Dr=33776,Ur=33777,Ir=33778,Fr=33779,pl=35840,ml=35841,gl=35842,xl=35843,Pa=36196,La=37492,Da=37496,Ua=37808,Ia=37809,Fa=37810,Ba=37811,Oa=37812,Va=37813,Ga=37814,za=37815,ka=37816,Ha=37817,Wa=37818,$a=37819,Xa=37820,qa=37821,Ya=36492,Yf=36494,jf=36495,ja=36283,Ka=36284,Za=36285,Qa=36286,PM=0,LM=1,Zg=2,DM=3200,UM=3201,dr=0,Z_=1,mi="",di="srgb",Gr="srgb-linear",Ja="linear",Ue="srgb",IM=0,lo=7680,FM=7681,BM=7682,OM=7683,VM=34055,GM=34056,zM=5386,kM=512,HM=513,WM=514,$M=515,XM=516,qM=517,YM=518,Kf=519,kp=512,kh=513,Hp=514,Hh=515,Wp=516,$p=517,Xp=518,qp=519,_h=35044,ga=35048,Qg="300 es",ai=2e3,ks=2001,Ls={COMPUTE:"compute",RENDER:"render"};function Yp(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}function _l(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function Q_(){const s=_l("canvas");return s.style.display="block",s}const Jg={};function yl(...s){const e="THREE."+s.shift();console.log(e,...s)}function te(...s){const e="THREE."+s.shift();console.warn(e,...s)}function ge(...s){const e="THREE."+s.shift();console.error(e,...s)}function Wt(...s){const e=s.join(" ");e in Jg||(Jg[e]=!0,te(...s))}function jM(s,e,t){return new Promise(function(n,i){function r(){switch(s.clientWaitSync(e,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(r,t);break;default:n()}}setTimeout(r,t)})}class xs{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const i=n[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,e);e.target=null}}}const qn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let e0=1234567;const Yc=Math.PI/180,Ro=180/Math.PI;function Us(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(qn[s&255]+qn[s>>8&255]+qn[s>>16&255]+qn[s>>24&255]+"-"+qn[e&255]+qn[e>>8&255]+"-"+qn[e>>16&15|64]+qn[e>>24&255]+"-"+qn[t&63|128]+qn[t>>8&255]+"-"+qn[t>>16&255]+qn[t>>24&255]+qn[n&255]+qn[n>>8&255]+qn[n>>16&255]+qn[n>>24&255]).toLowerCase()}function ut(s,e,t){return Math.max(e,Math.min(t,s))}function jp(s,e){return(s%e+e)%e}function KM(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}function ZM(s,e,t){return s!==e?(t-s)/(e-s):0}function jc(s,e,t){return(1-t)*s+t*e}function QM(s,e,t,n){return jc(s,e,1-Math.exp(-t*n))}function JM(s,e=1){return e-Math.abs(jp(s,e*2)-e)}function e3(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function t3(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function n3(s,e){return s+Math.floor(Math.random()*(e-s+1))}function i3(s,e){return s+Math.random()*(e-s)}function s3(s){return s*(.5-Math.random())}function r3(s){s!==void 0&&(e0=s);let e=e0+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function o3(s){return s*Yc}function a3(s){return s*Ro}function c3(s){return(s&s-1)===0&&s!==0}function l3(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function u3(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function h3(s,e,t,n,i){const r=Math.cos,o=Math.sin,a=r(t/2),c=o(t/2),l=r((e+n)/2),u=o((e+n)/2),h=r((e-n)/2),d=o((e-n)/2),f=r((n-e)/2),p=o((n-e)/2);switch(i){case"XYX":s.set(a*u,c*h,c*d,a*l);break;case"YZY":s.set(c*d,a*u,c*h,a*l);break;case"ZXZ":s.set(c*h,c*d,a*u,a*l);break;case"XZX":s.set(a*u,c*p,c*f,a*l);break;case"YXY":s.set(c*f,a*u,c*p,a*l);break;case"ZYZ":s.set(c*p,c*f,a*u,a*l);break;default:te("MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function ri(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function vt(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const ec={DEG2RAD:Yc,RAD2DEG:Ro,generateUUID:Us,clamp:ut,euclideanModulo:jp,mapLinear:KM,inverseLerp:ZM,lerp:jc,damp:QM,pingpong:JM,smoothstep:e3,smootherstep:t3,randInt:n3,randFloat:i3,randFloatSpread:s3,seededRandom:r3,degToRad:o3,radToDeg:a3,isPowerOfTwo:c3,ceilPowerOfTwo:l3,floorPowerOfTwo:u3,setQuaternionFromProperEuler:h3,normalize:vt,denormalize:ri};class oe{constructor(e=0,t=0){oe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=ut(this.x,e.x,t.x),this.y=ut(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=ut(this.x,e,t),this.y=ut(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(ut(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(ut(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*n-o*i+e.x,this.y=r*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ds{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,o,a){let c=n[i+0],l=n[i+1],u=n[i+2],h=n[i+3],d=r[o+0],f=r[o+1],p=r[o+2],x=r[o+3];if(a<=0){e[t+0]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h;return}if(a>=1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=x;return}if(h!==x||c!==d||l!==f||u!==p){let g=c*d+l*f+u*p+h*x;g<0&&(d=-d,f=-f,p=-p,x=-x,g=-g);let m=1-a;if(g<.9995){const b=Math.acos(g),y=Math.sin(b);m=Math.sin(m*b)/y,a=Math.sin(a*b)/y,c=c*m+d*a,l=l*m+f*a,u=u*m+p*a,h=h*m+x*a}else{c=c*m+d*a,l=l*m+f*a,u=u*m+p*a,h=h*m+x*a;const b=1/Math.sqrt(c*c+l*l+u*u+h*h);c*=b,l*=b,u*=b,h*=b}}e[t]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,r,o){const a=n[i],c=n[i+1],l=n[i+2],u=n[i+3],h=r[o],d=r[o+1],f=r[o+2],p=r[o+3];return e[t]=a*p+u*h+c*f-l*d,e[t+1]=c*p+u*d+l*h-a*f,e[t+2]=l*p+u*f+a*d-c*h,e[t+3]=u*p-a*h-c*d-l*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,r=e._z,o=e._order,a=Math.cos,c=Math.sin,l=a(n/2),u=a(i/2),h=a(r/2),d=c(n/2),f=c(i/2),p=c(r/2);switch(o){case"XYZ":this._x=d*u*h+l*f*p,this._y=l*f*h-d*u*p,this._z=l*u*p+d*f*h,this._w=l*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+l*f*p,this._y=l*f*h-d*u*p,this._z=l*u*p-d*f*h,this._w=l*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-l*f*p,this._y=l*f*h+d*u*p,this._z=l*u*p+d*f*h,this._w=l*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-l*f*p,this._y=l*f*h+d*u*p,this._z=l*u*p-d*f*h,this._w=l*u*h+d*f*p;break;case"YZX":this._x=d*u*h+l*f*p,this._y=l*f*h+d*u*p,this._z=l*u*p-d*f*h,this._w=l*u*h-d*f*p;break;case"XZY":this._x=d*u*h-l*f*p,this._y=l*f*h-d*u*p,this._z=l*u*p+d*f*h,this._w=l*u*h+d*f*p;break;default:te("Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],o=t[1],a=t[5],c=t[9],l=t[2],u=t[6],h=t[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-c)*f,this._y=(r-l)*f,this._z=(o-i)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(u-c)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+l)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(r-l)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(c+u)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(o-i)/f,this._x=(r+l)/f,this._y=(c+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<1e-8?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(ut(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,o=e._w,a=t._x,c=t._y,l=t._z,u=t._w;return this._x=n*u+o*a+i*l-r*c,this._y=i*u+o*c+r*a-n*l,this._z=r*u+o*l+n*c-i*a,this._w=o*u-n*a-i*c-r*l,this._onChangeCallback(),this}slerp(e,t){if(t<=0)return this;if(t>=1)return this.copy(e);let n=e._x,i=e._y,r=e._z,o=e._w,a=this.dot(e);a<0&&(n=-n,i=-i,r=-r,o=-o,a=-a);let c=1-t;if(a<.9995){const l=Math.acos(a),u=Math.sin(l);c=Math.sin(c*l)/u,t=Math.sin(t*l)/u,this._x=this._x*c+n*t,this._y=this._y*c+i*t,this._z=this._z*c+r*t,this._w=this._w*c+o*t,this._onChangeCallback()}else this._x=this._x*c+n*t,this._y=this._y*c+i*t,this._z=this._z*c+r*t,this._w=this._w*c+o*t,this.normalize();return this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class P{constructor(e=0,t=0,n=0){P.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(t0.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(t0.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,o=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,o=e.y,a=e.z,c=e.w,l=2*(o*i-a*n),u=2*(a*t-r*i),h=2*(r*n-o*t);return this.x=t+c*l+o*h-a*u,this.y=n+c*u+a*l-r*h,this.z=i+c*h+r*u-o*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=ut(this.x,e.x,t.x),this.y=ut(this.y,e.y,t.y),this.z=ut(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=ut(this.x,e,t),this.y=ut(this.y,e,t),this.z=ut(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(ut(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,o=t.x,a=t.y,c=t.z;return this.x=i*c-r*a,this.y=r*o-n*c,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Rd.copy(this).projectOnVector(e),this.sub(Rd)}reflect(e){return this.sub(Rd.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(ut(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Rd=new P,t0=new ds;class gt{constructor(e,t,n,i,r,o,a,c,l){gt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,o,a,c,l)}set(e,t,n,i,r,o,a,c,l){const u=this.elements;return u[0]=e,u[1]=i,u[2]=a,u[3]=t,u[4]=r,u[5]=c,u[6]=n,u[7]=o,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],a=n[3],c=n[6],l=n[1],u=n[4],h=n[7],d=n[2],f=n[5],p=n[8],x=i[0],g=i[3],m=i[6],b=i[1],y=i[4],v=i[7],w=i[2],S=i[5],E=i[8];return r[0]=o*x+a*b+c*w,r[3]=o*g+a*y+c*S,r[6]=o*m+a*v+c*E,r[1]=l*x+u*b+h*w,r[4]=l*g+u*y+h*S,r[7]=l*m+u*v+h*E,r[2]=d*x+f*b+p*w,r[5]=d*g+f*y+p*S,r[8]=d*m+f*v+p*E,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8];return t*o*u-t*a*l-n*r*u+n*a*c+i*r*l-i*o*c}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8],h=u*o-a*l,d=a*c-u*r,f=l*r-o*c,p=t*h+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const x=1/p;return e[0]=h*x,e[1]=(i*l-u*n)*x,e[2]=(a*n-i*o)*x,e[3]=d*x,e[4]=(u*t-i*c)*x,e[5]=(i*r-a*t)*x,e[6]=f*x,e[7]=(n*c-l*t)*x,e[8]=(o*t-n*r)*x,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,o,a){const c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*o+l*a)+o+e,-i*l,i*c,-i*(-l*o+c*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(Nd.makeScale(e,t)),this}rotate(e){return this.premultiply(Nd.makeRotation(-e)),this}translate(e,t){return this.premultiply(Nd.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Nd=new gt,n0=new gt().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),i0=new gt().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function d3(){const s={enabled:!0,workingColorSpace:Gr,spaces:{},convert:function(i,r,o){return this.enabled===!1||r===o||!r||!o||(this.spaces[r].transfer===Ue&&(i.r=cr(i.r),i.g=cr(i.g),i.b=cr(i.b)),this.spaces[r].primaries!==this.spaces[o].primaries&&(i.applyMatrix3(this.spaces[r].toXYZ),i.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===Ue&&(i.r=va(i.r),i.g=va(i.g),i.b=va(i.b))),i},workingToColorSpace:function(i,r){return this.convert(i,this.workingColorSpace,r)},colorSpaceToWorking:function(i,r){return this.convert(i,r,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===mi?Ja:this.spaces[i].transfer},getToneMappingMode:function(i){return this.spaces[i].outputColorSpaceConfig.toneMappingMode||"standard"},getLuminanceCoefficients:function(i,r=this.workingColorSpace){return i.fromArray(this.spaces[r].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,r,o){return i.copy(this.spaces[r].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(i,r){return Wt("ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),s.workingToColorSpace(i,r)},toWorkingColorSpace:function(i,r){return Wt("ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),s.colorSpaceToWorking(i,r)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[Gr]:{primaries:e,whitePoint:n,transfer:Ja,toXYZ:n0,fromXYZ:i0,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:di},outputColorSpaceConfig:{drawingBufferColorSpace:di}},[di]:{primaries:e,whitePoint:n,transfer:Ue,toXYZ:n0,fromXYZ:i0,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:di}}}),s}const et=d3();function cr(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function va(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let Go;class f3{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{Go===void 0&&(Go=_l("canvas")),Go.width=e.width,Go.height=e.height;const i=Go.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=Go}return n.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=_l("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=cr(r[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(cr(t[n]/255)*255):t[n]=cr(t[n]);return{data:t,width:e.width,height:e.height}}else return te("ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let p3=0;class Kp{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:p3++}),this.uuid=Us(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return typeof HTMLVideoElement<"u"&&t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight,0):t instanceof VideoFrame?e.set(t.displayHeight,t.displayWidth,0):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(Cd(i[o].image)):r.push(Cd(i[o]))}else r=Cd(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function Cd(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?f3.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(te("Texture: Unable to serialize Texture."),{})}let m3=0;const Pd=new P;class Rn extends xs{constructor(e=Rn.DEFAULT_IMAGE,t=Rn.DEFAULT_MAPPING,n=gi,i=gi,r=ln,o=xi,a=_n,c=un,l=Rn.DEFAULT_ANISOTROPY,u=mi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:m3++}),this.uuid=Us(),this.name="",this.source=new Kp(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=c,this.offset=new oe(0,0),this.repeat=new oe(1,1),this.center=new oe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new gt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(Pd).x}get height(){return this.source.getSize(Pd).y}get depth(){return this.source.getSize(Pd).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const n=e[t];if(n===void 0){te(`Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){te(`Texture.setValues(): property '${t}' does not exist.`);continue}i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Vp)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Ao:e.x=e.x-Math.floor(e.x);break;case gi:e.x=e.x<0?0:1;break;case wo:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Ao:e.y=e.y-Math.floor(e.y);break;case gi:e.y=e.y<0?0:1;break;case wo:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Rn.DEFAULT_IMAGE=null;Rn.DEFAULT_MAPPING=Vp;Rn.DEFAULT_ANISOTROPY=1;class Ke{constructor(e=0,t=0,n=0,i=1){Ke.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const c=e.elements,l=c[0],u=c[4],h=c[8],d=c[1],f=c[5],p=c[9],x=c[2],g=c[6],m=c[10];if(Math.abs(u-d)<.01&&Math.abs(h-x)<.01&&Math.abs(p-g)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+x)<.1&&Math.abs(p+g)<.1&&Math.abs(l+f+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(l+1)/2,v=(f+1)/2,w=(m+1)/2,S=(u+d)/4,E=(h+x)/4,C=(p+g)/4;return y>v&&y>w?y<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(y),i=S/n,r=E/n):v>w?v<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(v),n=S/i,r=C/i):w<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(w),n=E/r,i=C/r),this.set(n,i,r,t),this}let b=Math.sqrt((g-p)*(g-p)+(h-x)*(h-x)+(d-u)*(d-u));return Math.abs(b)<.001&&(b=1),this.x=(g-p)/b,this.y=(h-x)/b,this.z=(d-u)/b,this.w=Math.acos((l+f+m-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=ut(this.x,e.x,t.x),this.y=ut(this.y,e.y,t.y),this.z=ut(this.z,e.z,t.z),this.w=ut(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=ut(this.x,e,t),this.y=ut(this.y,e,t),this.z=ut(this.z,e,t),this.w=ut(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(ut(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class mr extends xs{constructor(e=1,t=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:ln,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=n.depth,this.scissor=new Ke(0,0,e,t),this.scissorTest=!1,this.viewport=new Ke(0,0,e,t);const i={width:e,height:t,depth:n.depth},r=new Rn(i);this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(e={}){const t={minFilter:ln,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n,this.textures[i].isData3DTexture!==!0&&(this.textures[i].isArrayTexture=this.textures[i].image.depth>1);this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const i=Object.assign({},e.textures[t].image);this.textures[t].source=new Kp(i)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class zr extends mr{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class Zp extends Rn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Qt,this.minFilter=Qt,this.wrapR=gi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class g3 extends Rn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Qt,this.minFilter=Qt,this.wrapR=gi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Hr{constructor(e=new P(1/0,1/0,1/0),t=new P(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(ss.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(ss.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=ss.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const r=n.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=r.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,ss):ss.fromBufferAttribute(r,o),ss.applyMatrix4(e.matrixWorld),this.expandByPoint(ss);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),iu.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),iu.copy(n.boundingBox)),iu.applyMatrix4(e.matrixWorld),this.union(iu)}const i=e.children;for(let r=0,o=i.length;r<o;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,ss),ss.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(bc),su.subVectors(this.max,bc),zo.subVectors(e.a,bc),ko.subVectors(e.b,bc),Ho.subVectors(e.c,bc),xr.subVectors(ko,zo),_r.subVectors(Ho,ko),Zr.subVectors(zo,Ho);let t=[0,-xr.z,xr.y,0,-_r.z,_r.y,0,-Zr.z,Zr.y,xr.z,0,-xr.x,_r.z,0,-_r.x,Zr.z,0,-Zr.x,-xr.y,xr.x,0,-_r.y,_r.x,0,-Zr.y,Zr.x,0];return!Ld(t,zo,ko,Ho,su)||(t=[1,0,0,0,1,0,0,0,1],!Ld(t,zo,ko,Ho,su))?!1:(ru.crossVectors(xr,_r),t=[ru.x,ru.y,ru.z],Ld(t,zo,ko,Ho,su))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,ss).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(ss).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Ys[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ys[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ys[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ys[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ys[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ys[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ys[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ys[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ys),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const Ys=[new P,new P,new P,new P,new P,new P,new P,new P],ss=new P,iu=new Hr,zo=new P,ko=new P,Ho=new P,xr=new P,_r=new P,Zr=new P,bc=new P,su=new P,ru=new P,Qr=new P;function Ld(s,e,t,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){Qr.fromArray(s,r);const a=i.x*Math.abs(Qr.x)+i.y*Math.abs(Qr.y)+i.z*Math.abs(Qr.z),c=e.dot(Qr),l=t.dot(Qr),u=n.dot(Qr);if(Math.max(-Math.max(c,l,u),Math.min(c,l,u))>a)return!1}return!0}const x3=new Hr,vc=new P,Dd=new P;class Wr{constructor(e=new P,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):x3.setFromPoints(e).getCenter(n);let i=0;for(let r=0,o=e.length;r<o;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;vc.subVectors(e,this.center);const t=vc.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(vc,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Dd.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(vc.copy(e.center).add(Dd)),this.expandByPoint(vc.copy(e.center).sub(Dd))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const js=new P,Ud=new P,ou=new P,yr=new P,Id=new P,au=new P,Fd=new P;class Fl{constructor(e=new P,t=new P(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,js)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=js.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(js.copy(this.origin).addScaledVector(this.direction,t),js.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Ud.copy(e).add(t).multiplyScalar(.5),ou.copy(t).sub(e).normalize(),yr.copy(this.origin).sub(Ud);const r=e.distanceTo(t)*.5,o=-this.direction.dot(ou),a=yr.dot(this.direction),c=-yr.dot(ou),l=yr.lengthSq(),u=Math.abs(1-o*o);let h,d,f,p;if(u>0)if(h=o*c-a,d=o*a-c,p=r*u,h>=0)if(d>=-p)if(d<=p){const x=1/u;h*=x,d*=x,f=h*(h+o*d+2*a)+d*(o*h+d+2*c)+l}else d=r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*c)+l;else d=-r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*c)+l;else d<=-p?(h=Math.max(0,-(-o*r+a)),d=h>0?-r:Math.min(Math.max(-r,-c),r),f=-h*h+d*(d+2*c)+l):d<=p?(h=0,d=Math.min(Math.max(-r,-c),r),f=d*(d+2*c)+l):(h=Math.max(0,-(o*r+a)),d=h>0?r:Math.min(Math.max(-r,-c),r),f=-h*h+d*(d+2*c)+l);else d=o>0?-r:r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,h),i&&i.copy(Ud).addScaledVector(ou,d),f}intersectSphere(e,t){js.subVectors(e.center,this.origin);const n=js.dot(this.direction),i=js.dot(js)-n*n,r=e.radius*e.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=n-o,c=n+o;return c<0?null:a<0?this.at(c,t):this.at(a,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,o,a,c;const l=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return l>=0?(n=(e.min.x-d.x)*l,i=(e.max.x-d.x)*l):(n=(e.max.x-d.x)*l,i=(e.min.x-d.x)*l),u>=0?(r=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(r=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),h>=0?(a=(e.min.z-d.z)*h,c=(e.max.z-d.z)*h):(a=(e.max.z-d.z)*h,c=(e.min.z-d.z)*h),n>c||a>i)||((a>n||n!==n)&&(n=a),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,js)!==null}intersectTriangle(e,t,n,i,r){Id.subVectors(t,e),au.subVectors(n,e),Fd.crossVectors(Id,au);let o=this.direction.dot(Fd),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;yr.subVectors(this.origin,e);const c=a*this.direction.dot(au.crossVectors(yr,au));if(c<0)return null;const l=a*this.direction.dot(Id.cross(yr));if(l<0||c+l>o)return null;const u=-a*yr.dot(Fd);return u<0?null:this.at(u/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ht{constructor(e,t,n,i,r,o,a,c,l,u,h,d,f,p,x,g){ht.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,o,a,c,l,u,h,d,f,p,x,g)}set(e,t,n,i,r,o,a,c,l,u,h,d,f,p,x,g){const m=this.elements;return m[0]=e,m[4]=t,m[8]=n,m[12]=i,m[1]=r,m[5]=o,m[9]=a,m[13]=c,m[2]=l,m[6]=u,m[10]=h,m[14]=d,m[3]=f,m[7]=p,m[11]=x,m[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ht().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Wo.setFromMatrixColumn(e,0).length(),r=1/Wo.setFromMatrixColumn(e,1).length(),o=1/Wo.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,o=Math.cos(n),a=Math.sin(n),c=Math.cos(i),l=Math.sin(i),u=Math.cos(r),h=Math.sin(r);if(e.order==="XYZ"){const d=o*u,f=o*h,p=a*u,x=a*h;t[0]=c*u,t[4]=-c*h,t[8]=l,t[1]=f+p*l,t[5]=d-x*l,t[9]=-a*c,t[2]=x-d*l,t[6]=p+f*l,t[10]=o*c}else if(e.order==="YXZ"){const d=c*u,f=c*h,p=l*u,x=l*h;t[0]=d+x*a,t[4]=p*a-f,t[8]=o*l,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=f*a-p,t[6]=x+d*a,t[10]=o*c}else if(e.order==="ZXY"){const d=c*u,f=c*h,p=l*u,x=l*h;t[0]=d-x*a,t[4]=-o*h,t[8]=p+f*a,t[1]=f+p*a,t[5]=o*u,t[9]=x-d*a,t[2]=-o*l,t[6]=a,t[10]=o*c}else if(e.order==="ZYX"){const d=o*u,f=o*h,p=a*u,x=a*h;t[0]=c*u,t[4]=p*l-f,t[8]=d*l+x,t[1]=c*h,t[5]=x*l+d,t[9]=f*l-p,t[2]=-l,t[6]=a*c,t[10]=o*c}else if(e.order==="YZX"){const d=o*c,f=o*l,p=a*c,x=a*l;t[0]=c*u,t[4]=x-d*h,t[8]=p*h+f,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-l*u,t[6]=f*h+p,t[10]=d-x*h}else if(e.order==="XZY"){const d=o*c,f=o*l,p=a*c,x=a*l;t[0]=c*u,t[4]=-h,t[8]=l*u,t[1]=d*h+x,t[5]=o*u,t[9]=f*h-p,t[2]=p*h-f,t[6]=a*u,t[10]=x*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(_3,e,y3)}lookAt(e,t,n){const i=this.elements;return Ri.subVectors(e,t),Ri.lengthSq()===0&&(Ri.z=1),Ri.normalize(),br.crossVectors(n,Ri),br.lengthSq()===0&&(Math.abs(n.z)===1?Ri.x+=1e-4:Ri.z+=1e-4,Ri.normalize(),br.crossVectors(n,Ri)),br.normalize(),cu.crossVectors(Ri,br),i[0]=br.x,i[4]=cu.x,i[8]=Ri.x,i[1]=br.y,i[5]=cu.y,i[9]=Ri.y,i[2]=br.z,i[6]=cu.z,i[10]=Ri.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],a=n[4],c=n[8],l=n[12],u=n[1],h=n[5],d=n[9],f=n[13],p=n[2],x=n[6],g=n[10],m=n[14],b=n[3],y=n[7],v=n[11],w=n[15],S=i[0],E=i[4],C=i[8],T=i[12],M=i[1],I=i[5],G=i[9],z=i[13],$=i[2],Y=i[6],q=i[10],he=i[14],K=i[3],ue=i[7],ye=i[11],Ie=i[15];return r[0]=o*S+a*M+c*$+l*K,r[4]=o*E+a*I+c*Y+l*ue,r[8]=o*C+a*G+c*q+l*ye,r[12]=o*T+a*z+c*he+l*Ie,r[1]=u*S+h*M+d*$+f*K,r[5]=u*E+h*I+d*Y+f*ue,r[9]=u*C+h*G+d*q+f*ye,r[13]=u*T+h*z+d*he+f*Ie,r[2]=p*S+x*M+g*$+m*K,r[6]=p*E+x*I+g*Y+m*ue,r[10]=p*C+x*G+g*q+m*ye,r[14]=p*T+x*z+g*he+m*Ie,r[3]=b*S+y*M+v*$+w*K,r[7]=b*E+y*I+v*Y+w*ue,r[11]=b*C+y*G+v*q+w*ye,r[15]=b*T+y*z+v*he+w*Ie,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],o=e[1],a=e[5],c=e[9],l=e[13],u=e[2],h=e[6],d=e[10],f=e[14],p=e[3],x=e[7],g=e[11],m=e[15];return p*(+r*c*h-i*l*h-r*a*d+n*l*d+i*a*f-n*c*f)+x*(+t*c*f-t*l*d+r*o*d-i*o*f+i*l*u-r*c*u)+g*(+t*l*h-t*a*f-r*o*h+n*o*f+r*a*u-n*l*u)+m*(-i*a*u-t*c*h+t*a*d+i*o*h-n*o*d+n*c*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8],h=e[9],d=e[10],f=e[11],p=e[12],x=e[13],g=e[14],m=e[15],b=h*g*l-x*d*l+x*c*f-a*g*f-h*c*m+a*d*m,y=p*d*l-u*g*l-p*c*f+o*g*f+u*c*m-o*d*m,v=u*x*l-p*h*l+p*a*f-o*x*f-u*a*m+o*h*m,w=p*h*c-u*x*c-p*a*d+o*x*d+u*a*g-o*h*g,S=t*b+n*y+i*v+r*w;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/S;return e[0]=b*E,e[1]=(x*d*r-h*g*r-x*i*f+n*g*f+h*i*m-n*d*m)*E,e[2]=(a*g*r-x*c*r+x*i*l-n*g*l-a*i*m+n*c*m)*E,e[3]=(h*c*r-a*d*r-h*i*l+n*d*l+a*i*f-n*c*f)*E,e[4]=y*E,e[5]=(u*g*r-p*d*r+p*i*f-t*g*f-u*i*m+t*d*m)*E,e[6]=(p*c*r-o*g*r-p*i*l+t*g*l+o*i*m-t*c*m)*E,e[7]=(o*d*r-u*c*r+u*i*l-t*d*l-o*i*f+t*c*f)*E,e[8]=v*E,e[9]=(p*h*r-u*x*r-p*n*f+t*x*f+u*n*m-t*h*m)*E,e[10]=(o*x*r-p*a*r+p*n*l-t*x*l-o*n*m+t*a*m)*E,e[11]=(u*a*r-o*h*r-u*n*l+t*h*l+o*n*f-t*a*f)*E,e[12]=w*E,e[13]=(u*x*i-p*h*i+p*n*d-t*x*d-u*n*g+t*h*g)*E,e[14]=(p*a*i-o*x*i-p*n*c+t*x*c+o*n*g-t*a*g)*E,e[15]=(o*h*i-u*a*i+u*n*c-t*h*c-o*n*d+t*a*d)*E,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,o=e.x,a=e.y,c=e.z,l=r*o,u=r*a;return this.set(l*o+n,l*a-i*c,l*c+i*a,0,l*a+i*c,u*a+n,u*c-i*o,0,l*c-i*a,u*c+i*o,r*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,o){return this.set(1,n,r,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,o=t._y,a=t._z,c=t._w,l=r+r,u=o+o,h=a+a,d=r*l,f=r*u,p=r*h,x=o*u,g=o*h,m=a*h,b=c*l,y=c*u,v=c*h,w=n.x,S=n.y,E=n.z;return i[0]=(1-(x+m))*w,i[1]=(f+v)*w,i[2]=(p-y)*w,i[3]=0,i[4]=(f-v)*S,i[5]=(1-(d+m))*S,i[6]=(g+b)*S,i[7]=0,i[8]=(p+y)*E,i[9]=(g-b)*E,i[10]=(1-(d+x))*E,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=Wo.set(i[0],i[1],i[2]).length();const o=Wo.set(i[4],i[5],i[6]).length(),a=Wo.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],rs.copy(this);const l=1/r,u=1/o,h=1/a;return rs.elements[0]*=l,rs.elements[1]*=l,rs.elements[2]*=l,rs.elements[4]*=u,rs.elements[5]*=u,rs.elements[6]*=u,rs.elements[8]*=h,rs.elements[9]*=h,rs.elements[10]*=h,t.setFromRotationMatrix(rs),n.x=r,n.y=o,n.z=a,this}makePerspective(e,t,n,i,r,o,a=ai,c=!1){const l=this.elements,u=2*r/(t-e),h=2*r/(n-i),d=(t+e)/(t-e),f=(n+i)/(n-i);let p,x;if(c)p=r/(o-r),x=o*r/(o-r);else if(a===ai)p=-(o+r)/(o-r),x=-2*o*r/(o-r);else if(a===ks)p=-o/(o-r),x=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=u,l[4]=0,l[8]=d,l[12]=0,l[1]=0,l[5]=h,l[9]=f,l[13]=0,l[2]=0,l[6]=0,l[10]=p,l[14]=x,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,i,r,o,a=ai,c=!1){const l=this.elements,u=2/(t-e),h=2/(n-i),d=-(t+e)/(t-e),f=-(n+i)/(n-i);let p,x;if(c)p=1/(o-r),x=o/(o-r);else if(a===ai)p=-2/(o-r),x=-(o+r)/(o-r);else if(a===ks)p=-1/(o-r),x=-r/(o-r);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=u,l[4]=0,l[8]=0,l[12]=d,l[1]=0,l[5]=h,l[9]=0,l[13]=f,l[2]=0,l[6]=0,l[10]=p,l[14]=x,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Wo=new P,rs=new ht,_3=new P(0,0,0),y3=new P(1,1,1),br=new P,cu=new P,Ri=new P,s0=new ht,r0=new ds;class Ti{constructor(e=0,t=0,n=0,i=Ti.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],o=i[4],a=i[8],c=i[1],l=i[5],u=i[9],h=i[2],d=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(ut(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-ut(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(ut(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-ut(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(ut(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-ut(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-u,f),this._y=0);break;default:te("Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return s0.makeRotationFromQuaternion(e),this.setFromRotationMatrix(s0,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return r0.setFromEuler(this),this.setFromQuaternion(r0,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ti.DEFAULT_ORDER="XYZ";class Qp{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let b3=0;const o0=new P,$o=new ds,Ks=new ht,lu=new P,Sc=new P,v3=new P,S3=new ds,a0=new P(1,0,0),c0=new P(0,1,0),l0=new P(0,0,1),u0={type:"added"},T3={type:"removed"},Xo={type:"childadded",child:null},Bd={type:"childremoved",child:null};class dn extends xs{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:b3++}),this.uuid=Us(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=dn.DEFAULT_UP.clone();const e=new P,t=new Ti,n=new ds,i=new P(1,1,1);function r(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ht},normalMatrix:{value:new gt}}),this.matrix=new ht,this.matrixWorld=new ht,this.matrixAutoUpdate=dn.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=dn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Qp,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return $o.setFromAxisAngle(e,t),this.quaternion.multiply($o),this}rotateOnWorldAxis(e,t){return $o.setFromAxisAngle(e,t),this.quaternion.premultiply($o),this}rotateX(e){return this.rotateOnAxis(a0,e)}rotateY(e){return this.rotateOnAxis(c0,e)}rotateZ(e){return this.rotateOnAxis(l0,e)}translateOnAxis(e,t){return o0.copy(e).applyQuaternion(this.quaternion),this.position.add(o0.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(a0,e)}translateY(e){return this.translateOnAxis(c0,e)}translateZ(e){return this.translateOnAxis(l0,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Ks.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?lu.copy(e):lu.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Sc.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ks.lookAt(Sc,lu,this.up):Ks.lookAt(lu,Sc,this.up),this.quaternion.setFromRotationMatrix(Ks),i&&(Ks.extractRotation(i.matrixWorld),$o.setFromRotationMatrix(Ks),this.quaternion.premultiply($o.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(ge("Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(u0),Xo.child=e,this.dispatchEvent(Xo),Xo.child=null):ge("Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(T3),Bd.child=e,this.dispatchEvent(Bd),Bd.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Ks.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ks.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ks),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(u0),Xo.child=e,this.dispatchEvent(Xo),Xo.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Sc,e,v3),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Sc,S3,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(a=>({...a,boundingBox:a.boundingBox?a.boundingBox.toJSON():void 0,boundingSphere:a.boundingSphere?a.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(a=>({...a})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(e),i.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(i.boundingBox=this.boundingBox.toJSON()));function r(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const c=a.shapes;if(Array.isArray(c))for(let l=0,u=c.length;l<u;l++){const h=c[l];r(e.shapes,h)}else r(e.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let c=0,l=this.material.length;c<l;c++)a.push(r(e.materials,this.material[c]));i.material=a}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const c=this.animations[a];i.animations.push(r(e.animations,c))}}if(t){const a=o(e.geometries),c=o(e.materials),l=o(e.textures),u=o(e.images),h=o(e.shapes),d=o(e.skeletons),f=o(e.animations),p=o(e.nodes);a.length>0&&(n.geometries=a),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const c=[];for(const l in a){const u=a[l];delete u.metadata,c.push(u)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}dn.DEFAULT_UP=new P(0,1,0);dn.DEFAULT_MATRIX_AUTO_UPDATE=!0;dn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const os=new P,Zs=new P,Od=new P,Qs=new P,qo=new P,Yo=new P,h0=new P,Vd=new P,Gd=new P,zd=new P,kd=new Ke,Hd=new Ke,Wd=new Ke;class ls{constructor(e=new P,t=new P,n=new P){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),os.subVectors(e,t),i.cross(os);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){os.subVectors(i,t),Zs.subVectors(n,t),Od.subVectors(e,t);const o=os.dot(os),a=os.dot(Zs),c=os.dot(Od),l=Zs.dot(Zs),u=Zs.dot(Od),h=o*l-a*a;if(h===0)return r.set(0,0,0),null;const d=1/h,f=(l*c-a*u)*d,p=(o*u-a*c)*d;return r.set(1-f-p,p,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Qs)===null?!1:Qs.x>=0&&Qs.y>=0&&Qs.x+Qs.y<=1}static getInterpolation(e,t,n,i,r,o,a,c){return this.getBarycoord(e,t,n,i,Qs)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(r,Qs.x),c.addScaledVector(o,Qs.y),c.addScaledVector(a,Qs.z),c)}static getInterpolatedAttribute(e,t,n,i,r,o){return kd.setScalar(0),Hd.setScalar(0),Wd.setScalar(0),kd.fromBufferAttribute(e,t),Hd.fromBufferAttribute(e,n),Wd.fromBufferAttribute(e,i),o.setScalar(0),o.addScaledVector(kd,r.x),o.addScaledVector(Hd,r.y),o.addScaledVector(Wd,r.z),o}static isFrontFacing(e,t,n,i){return os.subVectors(n,t),Zs.subVectors(e,t),os.cross(Zs).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return os.subVectors(this.c,this.b),Zs.subVectors(this.a,this.b),os.cross(Zs).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ls.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ls.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,r){return ls.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return ls.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ls.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let o,a;qo.subVectors(i,n),Yo.subVectors(r,n),Vd.subVectors(e,n);const c=qo.dot(Vd),l=Yo.dot(Vd);if(c<=0&&l<=0)return t.copy(n);Gd.subVectors(e,i);const u=qo.dot(Gd),h=Yo.dot(Gd);if(u>=0&&h<=u)return t.copy(i);const d=c*h-u*l;if(d<=0&&c>=0&&u<=0)return o=c/(c-u),t.copy(n).addScaledVector(qo,o);zd.subVectors(e,r);const f=qo.dot(zd),p=Yo.dot(zd);if(p>=0&&f<=p)return t.copy(r);const x=f*l-c*p;if(x<=0&&l>=0&&p<=0)return a=l/(l-p),t.copy(n).addScaledVector(Yo,a);const g=u*p-f*h;if(g<=0&&h-u>=0&&f-p>=0)return h0.subVectors(r,i),a=(h-u)/(h-u+(f-p)),t.copy(i).addScaledVector(h0,a);const m=1/(g+x+d);return o=x*m,a=d*m,t.copy(n).addScaledVector(qo,o).addScaledVector(Yo,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const J_={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},vr={h:0,s:0,l:0},uu={h:0,s:0,l:0};function $d(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class Ze{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=di){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,et.colorSpaceToWorking(this,t),this}setRGB(e,t,n,i=et.workingColorSpace){return this.r=e,this.g=t,this.b=n,et.colorSpaceToWorking(this,i),this}setHSL(e,t,n,i=et.workingColorSpace){if(e=jp(e,1),t=ut(t,0,1),n=ut(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,o=2*n-r;this.r=$d(o,r,e+1/3),this.g=$d(o,r,e),this.b=$d(o,r,e-1/3)}return et.colorSpaceToWorking(this,i),this}setStyle(e,t=di){function n(r){r!==void 0&&parseFloat(r)<1&&te("Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:te("Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(r,16),t);te("Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=di){const n=J_[e.toLowerCase()];return n!==void 0?this.setHex(n,t):te("Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=cr(e.r),this.g=cr(e.g),this.b=cr(e.b),this}copyLinearToSRGB(e){return this.r=va(e.r),this.g=va(e.g),this.b=va(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=di){return et.workingToColorSpace(Yn.copy(this),e),Math.round(ut(Yn.r*255,0,255))*65536+Math.round(ut(Yn.g*255,0,255))*256+Math.round(ut(Yn.b*255,0,255))}getHexString(e=di){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=et.workingColorSpace){et.workingToColorSpace(Yn.copy(this),t);const n=Yn.r,i=Yn.g,r=Yn.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let c,l;const u=(a+o)/2;if(a===o)c=0,l=0;else{const h=o-a;switch(l=u<=.5?h/(o+a):h/(2-o-a),o){case n:c=(i-r)/h+(i<r?6:0);break;case i:c=(r-n)/h+2;break;case r:c=(n-i)/h+4;break}c/=6}return e.h=c,e.s=l,e.l=u,e}getRGB(e,t=et.workingColorSpace){return et.workingToColorSpace(Yn.copy(this),t),e.r=Yn.r,e.g=Yn.g,e.b=Yn.b,e}getStyle(e=di){et.workingToColorSpace(Yn.copy(this),e);const t=Yn.r,n=Yn.g,i=Yn.b;return e!==di?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(vr),this.setHSL(vr.h+e,vr.s+t,vr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(vr),e.getHSL(uu);const n=jc(vr.h,uu.h,t),i=jc(vr.s,uu.s,t),r=jc(vr.l,uu.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Yn=new Ze;Ze.NAMES=J_;let M3=0;class Jn extends xs{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:M3++}),this.uuid=Us(),this.name="",this.type="Material",this.blending=Ii,this.side=Ui,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=rl,this.blendDst=ol,this.blendEquation=Kn,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ze(0,0,0),this.blendAlpha=0,this.depthFunc=Vr,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Kf,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=lo,this.stencilZFail=lo,this.stencilZPass=lo,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){te(`Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){te(`Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.sheenColorMap&&this.sheenColorMap.isTexture&&(n.sheenColorMap=this.sheenColorMap.toJSON(e).uuid),this.sheenRoughnessMap&&this.sheenRoughnessMap.isTexture&&(n.sheenRoughnessMap=this.sheenRoughnessMap.toJSON(e).uuid),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Ii&&(n.blending=this.blending),this.side!==Ui&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==rl&&(n.blendSrc=this.blendSrc),this.blendDst!==ol&&(n.blendDst=this.blendDst),this.blendEquation!==Kn&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Vr&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Kf&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==lo&&(n.stencilFail=this.stencilFail),this.stencilZFail!==lo&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==lo&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const o=[];for(const a in r){const c=r[a];delete c.metadata,o.push(c)}return o}if(t){const r=i(e.textures),o=i(e.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class sr extends Jn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ze(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ti,this.combine=Dl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const rr=E3();function E3(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let c=0;c<256;++c){const l=c-127;l<-27?(n[c]=0,n[c|256]=32768,i[c]=24,i[c|256]=24):l<-14?(n[c]=1024>>-l-14,n[c|256]=1024>>-l-14|32768,i[c]=-l-1,i[c|256]=-l-1):l<=15?(n[c]=l+15<<10,n[c|256]=l+15<<10|32768,i[c]=13,i[c|256]=13):l<128?(n[c]=31744,n[c|256]=64512,i[c]=24,i[c|256]=24):(n[c]=31744,n[c|256]=64512,i[c]=13,i[c|256]=13)}const r=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let c=1;c<1024;++c){let l=c<<13,u=0;for(;(l&8388608)===0;)l<<=1,u-=8388608;l&=-8388609,u+=947912704,r[c]=l|u}for(let c=1024;c<2048;++c)r[c]=939524096+(c-1024<<13);for(let c=1;c<31;++c)o[c]=c<<23;o[31]=1199570944,o[32]=2147483648;for(let c=33;c<63;++c)o[c]=2147483648+(c-32<<23);o[63]=3347054592;for(let c=1;c<64;++c)c!==32&&(a[c]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:o,offsetTable:a}}function Ni(s){Math.abs(s)>65504&&te("DataUtils.toHalfFloat(): Value out of range."),s=ut(s,-65504,65504),rr.floatView[0]=s;const e=rr.uint32View[0],t=e>>23&511;return rr.baseTable[t]+((e&8388607)>>rr.shiftTable[t])}function hu(s){const e=s>>10;return rr.uint32View[0]=rr.mantissaTable[rr.offsetTable[e]+(s&1023)]+rr.exponentTable[e],rr.floatView[0]}const En=new P,du=new oe;let A3=0;class yn{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:A3++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=_h,this.updateRanges=[],this.gpuType=Sn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)du.fromBufferAttribute(this,t),du.applyMatrix3(e),this.setXY(t,du.x,du.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)En.fromBufferAttribute(this,t),En.applyMatrix3(e),this.setXYZ(t,En.x,En.y,En.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)En.fromBufferAttribute(this,t),En.applyMatrix4(e),this.setXYZ(t,En.x,En.y,En.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)En.fromBufferAttribute(this,t),En.applyNormalMatrix(e),this.setXYZ(t,En.x,En.y,En.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)En.fromBufferAttribute(this,t),En.transformDirection(e),this.setXYZ(t,En.x,En.y,En.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=ri(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=vt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=ri(t,this.array)),t}setX(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=ri(t,this.array)),t}setY(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=ri(t,this.array)),t}setZ(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=ri(t,this.array)),t}setW(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array),i=vt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array),i=vt(i,this.array),r=vt(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==_h&&(e.usage=this.usage),e}}class Jp extends yn{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class em extends yn{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class ey extends yn{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=hu(this.array[e*this.itemSize]);return this.normalized&&(t=ri(t,this.array)),t}setX(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize]=Ni(t),this}getY(e){let t=hu(this.array[e*this.itemSize+1]);return this.normalized&&(t=ri(t,this.array)),t}setY(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize+1]=Ni(t),this}getZ(e){let t=hu(this.array[e*this.itemSize+2]);return this.normalized&&(t=ri(t,this.array)),t}setZ(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize+2]=Ni(t),this}getW(e){let t=hu(this.array[e*this.itemSize+3]);return this.normalized&&(t=ri(t,this.array)),t}setW(e,t){return this.normalized&&(t=vt(t,this.array)),this.array[e*this.itemSize+3]=Ni(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array)),this.array[e+0]=Ni(t),this.array[e+1]=Ni(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array),i=vt(i,this.array)),this.array[e+0]=Ni(t),this.array[e+1]=Ni(n),this.array[e+2]=Ni(i),this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array),i=vt(i,this.array),r=vt(r,this.array)),this.array[e+0]=Ni(t),this.array[e+1]=Ni(n),this.array[e+2]=Ni(i),this.array[e+3]=Ni(r),this}}class Dt extends yn{constructor(e,t,n){super(new Float32Array(e),t,n)}}let w3=0;const ki=new ht,Xd=new dn,jo=new P,Ci=new Hr,Tc=new Hr,In=new P;class bn extends xs{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:w3++}),this.uuid=Us(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Yp(e)?em:Jp)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new gt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return ki.makeRotationFromQuaternion(e),this.applyMatrix4(ki),this}rotateX(e){return ki.makeRotationX(e),this.applyMatrix4(ki),this}rotateY(e){return ki.makeRotationY(e),this.applyMatrix4(ki),this}rotateZ(e){return ki.makeRotationZ(e),this.applyMatrix4(ki),this}translate(e,t,n){return ki.makeTranslation(e,t,n),this.applyMatrix4(ki),this}scale(e,t,n){return ki.makeScale(e,t,n),this.applyMatrix4(ki),this}lookAt(e){return Xd.lookAt(e),Xd.updateMatrix(),this.applyMatrix4(Xd.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(jo).negate(),this.translate(jo.x,jo.y,jo.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,r=e.length;i<r;i++){const o=e[i];n.push(o.x,o.y,o.z||0)}this.setAttribute("position",new Dt(n,3))}else{const n=Math.min(e.length,t.count);for(let i=0;i<n;i++){const r=e[i];t.setXYZ(i,r.x,r.y,r.z||0)}e.length>t.count&&te("BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Hr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){ge("BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new P(-1/0,-1/0,-1/0),new P(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Ci.setFromBufferAttribute(r),this.morphTargetsRelative?(In.addVectors(this.boundingBox.min,Ci.min),this.boundingBox.expandByPoint(In),In.addVectors(this.boundingBox.max,Ci.max),this.boundingBox.expandByPoint(In)):(this.boundingBox.expandByPoint(Ci.min),this.boundingBox.expandByPoint(Ci.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&ge('BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Wr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){ge("BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new P,1/0);return}if(e){const n=this.boundingSphere.center;if(Ci.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const a=t[r];Tc.setFromBufferAttribute(a),this.morphTargetsRelative?(In.addVectors(Ci.min,Tc.min),Ci.expandByPoint(In),In.addVectors(Ci.max,Tc.max),Ci.expandByPoint(In)):(Ci.expandByPoint(Tc.min),Ci.expandByPoint(Tc.max))}Ci.getCenter(n);let i=0;for(let r=0,o=e.count;r<o;r++)In.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(In));if(t)for(let r=0,o=t.length;r<o;r++){const a=t[r],c=this.morphTargetsRelative;for(let l=0,u=a.count;l<u;l++)In.fromBufferAttribute(a,l),c&&(jo.fromBufferAttribute(e,l),In.add(jo)),i=Math.max(i,n.distanceToSquared(In))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&ge('BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){ge("BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new yn(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),a=[],c=[];for(let C=0;C<n.count;C++)a[C]=new P,c[C]=new P;const l=new P,u=new P,h=new P,d=new oe,f=new oe,p=new oe,x=new P,g=new P;function m(C,T,M){l.fromBufferAttribute(n,C),u.fromBufferAttribute(n,T),h.fromBufferAttribute(n,M),d.fromBufferAttribute(r,C),f.fromBufferAttribute(r,T),p.fromBufferAttribute(r,M),u.sub(l),h.sub(l),f.sub(d),p.sub(d);const I=1/(f.x*p.y-p.x*f.y);isFinite(I)&&(x.copy(u).multiplyScalar(p.y).addScaledVector(h,-f.y).multiplyScalar(I),g.copy(h).multiplyScalar(f.x).addScaledVector(u,-p.x).multiplyScalar(I),a[C].add(x),a[T].add(x),a[M].add(x),c[C].add(g),c[T].add(g),c[M].add(g))}let b=this.groups;b.length===0&&(b=[{start:0,count:e.count}]);for(let C=0,T=b.length;C<T;++C){const M=b[C],I=M.start,G=M.count;for(let z=I,$=I+G;z<$;z+=3)m(e.getX(z+0),e.getX(z+1),e.getX(z+2))}const y=new P,v=new P,w=new P,S=new P;function E(C){w.fromBufferAttribute(i,C),S.copy(w);const T=a[C];y.copy(T),y.sub(w.multiplyScalar(w.dot(T))).normalize(),v.crossVectors(S,T);const I=v.dot(c[C])<0?-1:1;o.setXYZW(C,y.x,y.y,y.z,I)}for(let C=0,T=b.length;C<T;++C){const M=b[C],I=M.start,G=M.count;for(let z=I,$=I+G;z<$;z+=3)E(e.getX(z+0)),E(e.getX(z+1)),E(e.getX(z+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new yn(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new P,r=new P,o=new P,a=new P,c=new P,l=new P,u=new P,h=new P;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),x=e.getX(d+1),g=e.getX(d+2);i.fromBufferAttribute(t,p),r.fromBufferAttribute(t,x),o.fromBufferAttribute(t,g),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),a.fromBufferAttribute(n,p),c.fromBufferAttribute(n,x),l.fromBufferAttribute(n,g),a.add(u),c.add(u),l.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(x,c.x,c.y,c.z),n.setXYZ(g,l.x,l.y,l.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)In.fromBufferAttribute(e,t),In.normalize(),e.setXYZ(t,In.x,In.y,In.z)}toNonIndexed(){function e(a,c){const l=a.array,u=a.itemSize,h=a.normalized,d=new l.constructor(c.length*u);let f=0,p=0;for(let x=0,g=c.length;x<g;x++){a.isInterleavedBufferAttribute?f=c[x]*a.data.stride+a.offset:f=c[x]*u;for(let m=0;m<u;m++)d[p++]=l[f++]}return new yn(d,u,h)}if(this.index===null)return te("BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new bn,n=this.index.array,i=this.attributes;for(const a in i){const c=i[a],l=e(c,n);t.setAttribute(a,l)}const r=this.morphAttributes;for(const a in r){const c=[],l=r[a];for(let u=0,h=l.length;u<h;u++){const d=l[u],f=e(d,n);c.push(f)}t.morphAttributes[a]=c}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,c=o.length;a<c;a++){const l=o[a];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const l=n[c];e.data.attributes[c]=l.toJSON(e.data)}const i={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],u=[];for(let h=0,d=l.length;h<d;h++){const f=l[h];u.push(f.toJSON(e.data))}u.length>0&&(i[c]=u,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere=a.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone());const i=e.attributes;for(const l in i){const u=i[l];this.setAttribute(l,u.clone(t))}const r=e.morphAttributes;for(const l in r){const u=[],h=r[l];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(t));this.morphAttributes[l]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let l=0,u=o.length;l<u;l++){const h=o[l];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const d0=new ht,Jr=new Fl,fu=new Wr,f0=new P,pu=new P,mu=new P,gu=new P,qd=new P,xu=new P,p0=new P,_u=new P;class Vn extends dn{constructor(e=new bn,t=new sr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const a=this.morphTargetInfluences;if(r&&a){xu.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const u=a[c],h=r[c];u!==0&&(qd.fromBufferAttribute(h,e),o?xu.addScaledVector(qd,u):xu.addScaledVector(qd.sub(t),u))}t.add(xu)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),fu.copy(n.boundingSphere),fu.applyMatrix4(r),Jr.copy(e.ray).recast(e.near),!(fu.containsPoint(Jr.origin)===!1&&(Jr.intersectSphere(fu,f0)===null||Jr.origin.distanceToSquared(f0)>(e.far-e.near)**2))&&(d0.copy(r).invert(),Jr.copy(e.ray).applyMatrix4(d0),!(n.boundingBox!==null&&Jr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Jr)))}_computeIntersections(e,t,n){let i;const r=this.geometry,o=this.material,a=r.index,c=r.attributes.position,l=r.attributes.uv,u=r.attributes.uv1,h=r.attributes.normal,d=r.groups,f=r.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,x=d.length;p<x;p++){const g=d[p],m=o[g.materialIndex],b=Math.max(g.start,f.start),y=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let v=b,w=y;v<w;v+=3){const S=a.getX(v),E=a.getX(v+1),C=a.getX(v+2);i=yu(this,m,e,n,l,u,h,S,E,C),i&&(i.faceIndex=Math.floor(v/3),i.face.materialIndex=g.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),x=Math.min(a.count,f.start+f.count);for(let g=p,m=x;g<m;g+=3){const b=a.getX(g),y=a.getX(g+1),v=a.getX(g+2);i=yu(this,o,e,n,l,u,h,b,y,v),i&&(i.faceIndex=Math.floor(g/3),t.push(i))}}else if(c!==void 0)if(Array.isArray(o))for(let p=0,x=d.length;p<x;p++){const g=d[p],m=o[g.materialIndex],b=Math.max(g.start,f.start),y=Math.min(c.count,Math.min(g.start+g.count,f.start+f.count));for(let v=b,w=y;v<w;v+=3){const S=v,E=v+1,C=v+2;i=yu(this,m,e,n,l,u,h,S,E,C),i&&(i.faceIndex=Math.floor(v/3),i.face.materialIndex=g.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),x=Math.min(c.count,f.start+f.count);for(let g=p,m=x;g<m;g+=3){const b=g,y=g+1,v=g+2;i=yu(this,o,e,n,l,u,h,b,y,v),i&&(i.faceIndex=Math.floor(g/3),t.push(i))}}}}function R3(s,e,t,n,i,r,o,a){let c;if(e.side===Xt?c=n.intersectTriangle(o,r,i,!0,a):c=n.intersectTriangle(i,r,o,e.side===Ui,a),c===null)return null;_u.copy(a),_u.applyMatrix4(s.matrixWorld);const l=t.ray.origin.distanceTo(_u);return l<t.near||l>t.far?null:{distance:l,point:_u.clone(),object:s}}function yu(s,e,t,n,i,r,o,a,c,l){s.getVertexPosition(a,pu),s.getVertexPosition(c,mu),s.getVertexPosition(l,gu);const u=R3(s,e,t,n,pu,mu,gu,p0);if(u){const h=new P;ls.getBarycoord(p0,pu,mu,gu,h),i&&(u.uv=ls.getInterpolatedAttribute(i,a,c,l,h,new oe)),r&&(u.uv1=ls.getInterpolatedAttribute(r,a,c,l,h,new oe)),o&&(u.normal=ls.getInterpolatedAttribute(o,a,c,l,h,new P),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const d={a,b:c,c:l,normal:new P,materialIndex:0};ls.getNormal(pu,mu,gu,d.normal),u.face=d,u.barycoord=h}return u}class Do extends bn{constructor(e=1,t=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const c=[],l=[],u=[],h=[];let d=0,f=0;p("z","y","x",-1,-1,n,t,e,o,r,0),p("z","y","x",1,-1,n,t,-e,o,r,1),p("x","z","y",1,1,e,n,t,i,o,2),p("x","z","y",1,-1,e,n,-t,i,o,3),p("x","y","z",1,-1,e,t,n,i,r,4),p("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(c),this.setAttribute("position",new Dt(l,3)),this.setAttribute("normal",new Dt(u,3)),this.setAttribute("uv",new Dt(h,2));function p(x,g,m,b,y,v,w,S,E,C,T){const M=v/E,I=w/C,G=v/2,z=w/2,$=S/2,Y=E+1,q=C+1;let he=0,K=0;const ue=new P;for(let ye=0;ye<q;ye++){const Ie=ye*I-z;for(let yt=0;yt<Y;yt++){const pt=yt*M-G;ue[x]=pt*b,ue[g]=Ie*y,ue[m]=$,l.push(ue.x,ue.y,ue.z),ue[x]=0,ue[g]=0,ue[m]=S>0?1:-1,u.push(ue.x,ue.y,ue.z),h.push(yt/E),h.push(1-ye/C),he+=1}}for(let ye=0;ye<C;ye++)for(let Ie=0;Ie<E;Ie++){const yt=d+Ie+Y*ye,pt=d+Ie+Y*(ye+1),Mt=d+(Ie+1)+Y*(ye+1),wt=d+(Ie+1)+Y*ye;c.push(yt,pt,wt),c.push(pt,Mt,wt),K+=6}a.addGroup(f,K,T),f+=K,d+=he}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Do(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function tc(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(te("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function ii(s){const e={};for(let t=0;t<s.length;t++){const n=tc(s[t]);for(const i in n)e[i]=n[i]}return e}function N3(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function ty(s){const e=s.getRenderTarget();return e===null?s.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:et.workingColorSpace}const Wh={clone:tc,merge:ii};var C3=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,P3=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Zi extends Jn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=C3,this.fragmentShader=P3,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=tc(e.uniforms),this.uniformsGroups=N3(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class tm extends dn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ht,this.projectionMatrix=new ht,this.projectionMatrixInverse=new ht,this.coordinateSystem=ai,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Sr=new P,m0=new oe,g0=new oe;class Wn extends tm{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Ro*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Yc*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Ro*2*Math.atan(Math.tan(Yc*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Sr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Sr.x,Sr.y).multiplyScalar(-e/Sr.z),Sr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Sr.x,Sr.y).multiplyScalar(-e/Sr.z)}getViewSize(e,t){return this.getViewBounds(e,m0,g0),t.subVectors(g0,m0)}setViewOffset(e,t,n,i,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Yc*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const c=o.fullWidth,l=o.fullHeight;r+=o.offsetX*i/c,t-=o.offsetY*n/l,i*=o.width/c,n*=o.height/l}const a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Ko=-90,Zo=1;class ny extends dn{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new Wn(Ko,Zo,e,t);i.layers=this.layers,this.add(i);const r=new Wn(Ko,Zo,e,t);r.layers=this.layers,this.add(r);const o=new Wn(Ko,Zo,e,t);o.layers=this.layers,this.add(o);const a=new Wn(Ko,Zo,e,t);a.layers=this.layers,this.add(a);const c=new Wn(Ko,Zo,e,t);c.layers=this.layers,this.add(c);const l=new Wn(Ko,Zo,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,o,a,c]=t;for(const l of t)this.remove(l);if(e===ai)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(e===ks)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const l of t)this.add(l),l.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,o,a,c,l,u]=this.children,h=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const x=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,r),e.setRenderTarget(n,1,i),e.render(t,o),e.setRenderTarget(n,2,i),e.render(t,a),e.setRenderTarget(n,3,i),e.render(t,c),e.setRenderTarget(n,4,i),e.render(t,l),n.texture.generateMipmaps=x,e.setRenderTarget(n,5,i),e.render(t,u),e.setRenderTarget(h,d,f),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Bl extends Rn{constructor(e=[],t=Gs,n,i,r,o,a,c,l,u){super(e,t,n,i,r,o,a,c,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class iy extends zr{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Bl(i),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Do(5,5,5),r=new Zi({name:"CubemapFromEquirect",uniforms:tc(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Xt,blending:ci});r.uniforms.tEquirect.value=t;const o=new Vn(i,r),a=t.minFilter;return t.minFilter===xi&&(t.minFilter=ln),new ny(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t=!0,n=!0,i=!0){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(r)}}class bu extends dn{constructor(){super(),this.isGroup=!0,this.type="Group"}}const L3={type:"move"};class ah{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new bu,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new bu,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new P,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new P),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new bu,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new P,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new P),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,o=null;const a=this._targetRay,c=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(l&&e.hand){o=!0;for(const x of e.hand.values()){const g=t.getJointPose(x,n),m=this._getHandJoint(l,x);g!==null&&(m.matrix.fromArray(g.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.matrixWorldNeedsUpdate=!0,m.jointRadius=g.radius),m.visible=g!==null}const u=l.joints["index-finger-tip"],h=l.joints["thumb-tip"],d=u.position.distanceTo(h.position),f=.02,p=.005;l.inputState.pinching&&d>f+p?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&d<=f-p&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1));a!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(L3)))}return a!==null&&(a.visible=i!==null),c!==null&&(c.visible=r!==null),l!==null&&(l.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new bu;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class nm extends dn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ti,this.environmentIntensity=1,this.environmentRotation=new Ti,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class im{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=_h,this.updateRanges=[],this.version=0,this.uuid=Us()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Us()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Us()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const ni=new P;class Ds{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)ni.fromBufferAttribute(this,t),ni.applyMatrix4(e),this.setXYZ(t,ni.x,ni.y,ni.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)ni.fromBufferAttribute(this,t),ni.applyNormalMatrix(e),this.setXYZ(t,ni.x,ni.y,ni.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)ni.fromBufferAttribute(this,t),ni.transformDirection(e),this.setXYZ(t,ni.x,ni.y,ni.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=ri(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=vt(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=vt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=vt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=vt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=vt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=ri(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=ri(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=ri(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=ri(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array),i=vt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=vt(t,this.array),n=vt(n,this.array),i=vt(i,this.array),r=vt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){yl("InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new yn(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ds(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){yl("InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class D3 extends Jn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ze(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}class sm extends Rn{constructor(e=null,t=1,n=1,i,r,o,a,c,l=Qt,u=Qt,h,d){super(null,o,a,c,l,u,i,r,h,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Br extends yn{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Yd=new P,U3=new P,I3=new gt;class Rs{constructor(e=new P(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Yd.subVectors(n,t).cross(U3.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Yd),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||I3.getNormalMatrix(e),i=this.coplanarPoint(Yd).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const eo=new Wr,F3=new oe(.5,.5),vu=new P;class Ol{constructor(e=new Rs,t=new Rs,n=new Rs,i=new Rs,r=new Rs,o=new Rs){this.planes=[e,t,n,i,r,o]}set(e,t,n,i,r,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=ai,n=!1){const i=this.planes,r=e.elements,o=r[0],a=r[1],c=r[2],l=r[3],u=r[4],h=r[5],d=r[6],f=r[7],p=r[8],x=r[9],g=r[10],m=r[11],b=r[12],y=r[13],v=r[14],w=r[15];if(i[0].setComponents(l-o,f-u,m-p,w-b).normalize(),i[1].setComponents(l+o,f+u,m+p,w+b).normalize(),i[2].setComponents(l+a,f+h,m+x,w+y).normalize(),i[3].setComponents(l-a,f-h,m-x,w-y).normalize(),n)i[4].setComponents(c,d,g,v).normalize(),i[5].setComponents(l-c,f-d,m-g,w-v).normalize();else if(i[4].setComponents(l-c,f-d,m-g,w-v).normalize(),t===ai)i[5].setComponents(l+c,f+d,m+g,w+v).normalize();else if(t===ks)i[5].setComponents(c,d,g,v).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),eo.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),eo.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(eo)}intersectsSprite(e){eo.center.set(0,0,0);const t=F3.distanceTo(e.center);return eo.radius=.7071067811865476+t,eo.applyMatrix4(e.matrixWorld),this.intersectsSphere(eo)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(vu.x=i.normal.x>0?e.max.x:e.min.x,vu.y=i.normal.y>0?e.max.y:e.min.y,vu.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(vu)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const ys=new ht,bs=new Ol;class rm{constructor(){this.coordinateSystem=ai}intersectsObject(e,t){if(!t.isArrayCamera||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(ys.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),bs.setFromProjectionMatrix(ys,i.coordinateSystem,i.reversedDepth),bs.intersectsObject(e))return!0}return!1}intersectsSprite(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(ys.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),bs.setFromProjectionMatrix(ys,i.coordinateSystem,i.reversedDepth),bs.intersectsSprite(e))return!0}return!1}intersectsSphere(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(ys.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),bs.setFromProjectionMatrix(ys,i.coordinateSystem,i.reversedDepth),bs.intersectsSphere(e))return!0}return!1}intersectsBox(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(ys.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),bs.setFromProjectionMatrix(ys,i.coordinateSystem,i.reversedDepth),bs.intersectsBox(e))return!0}return!1}containsPoint(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(ys.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),bs.setFromProjectionMatrix(ys,i.coordinateSystem,i.reversedDepth),bs.containsPoint(e))return!0}return!1}clone(){return new rm}}class om extends Jn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ze(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const yh=new P,bh=new P,x0=new ht,Mc=new Fl,Su=new Wr,jd=new P,_0=new P;class B3 extends dn{constructor(e=new bn,t=new om){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)yh.fromBufferAttribute(t,i-1),bh.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=yh.distanceTo(bh);e.setAttribute("lineDistance",new Dt(n,1))}else te("Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Su.copy(n.boundingSphere),Su.applyMatrix4(i),Su.radius+=r,e.ray.intersectsSphere(Su)===!1)return;x0.copy(i).invert(),Mc.copy(e.ray).applyMatrix4(x0);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a,l=this.isLineSegments?2:1,u=n.index,d=n.attributes.position;if(u!==null){const f=Math.max(0,o.start),p=Math.min(u.count,o.start+o.count);for(let x=f,g=p-1;x<g;x+=l){const m=u.getX(x),b=u.getX(x+1),y=Tu(this,e,Mc,c,m,b,x);y&&t.push(y)}if(this.isLineLoop){const x=u.getX(p-1),g=u.getX(f),m=Tu(this,e,Mc,c,x,g,p-1);m&&t.push(m)}}else{const f=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let x=f,g=p-1;x<g;x+=l){const m=Tu(this,e,Mc,c,x,x+1,x);m&&t.push(m)}if(this.isLineLoop){const x=Tu(this,e,Mc,c,p-1,f,p-1);x&&t.push(x)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function Tu(s,e,t,n,i,r,o){const a=s.geometry.attributes.position;if(yh.fromBufferAttribute(a,i),bh.fromBufferAttribute(a,r),t.distanceSqToSegment(yh,bh,jd,_0)>n)return;jd.applyMatrix4(s.matrixWorld);const l=e.ray.origin.distanceTo(jd);if(!(l<e.near||l>e.far))return{distance:l,point:_0.clone().applyMatrix4(s.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:s}}const y0=new P,b0=new P;class eG extends B3{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)y0.fromBufferAttribute(t,i),b0.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+y0.distanceTo(b0);e.setAttribute("lineDistance",new Dt(n,1))}else te("LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class sy extends Jn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ze(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const v0=new ht,Zf=new Fl,Mu=new Wr,Eu=new P;class tG extends dn{constructor(e=new bn,t=new sy){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Mu.copy(n.boundingSphere),Mu.applyMatrix4(i),Mu.radius+=r,e.ray.intersectsSphere(Mu)===!1)return;v0.copy(i).invert(),Zf.copy(e.ray).applyMatrix4(v0);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a,l=n.index,h=n.attributes.position;if(l!==null){const d=Math.max(0,o.start),f=Math.min(l.count,o.start+o.count);for(let p=d,x=f;p<x;p++){const g=l.getX(p);Eu.fromBufferAttribute(h,g),S0(Eu,g,c,i,e,t,this)}}else{const d=Math.max(0,o.start),f=Math.min(h.count,o.start+o.count);for(let p=d,x=f;p<x;p++)Eu.fromBufferAttribute(h,p),S0(Eu,p,c,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function S0(s,e,t,n,i,r,o){const a=Zf.distanceSqToPoint(s);if(a<t){const c=new P;Zf.closestPointToPoint(s,c),c.applyMatrix4(n);const l=i.ray.origin.distanceTo(c);if(l<i.near||l>i.far)return;r.push({distance:l,distanceToRay:Math.sqrt(a),point:c,index:e,face:null,faceIndex:null,barycoord:null,object:o})}}class am extends Rn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Qt,this.minFilter=Qt,this.generateMipmaps=!1,this.needsUpdate=!0}}class Vi extends Rn{constructor(e,t,n=Kt,i,r,o,a=Qt,c=Qt,l,u=Bi,h=1){if(u!==Bi&&u!==Oi)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const d={width:e,height:t,depth:h};super(d,i,r,o,a,c,u,n,l),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Kp(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class ry extends Rn{constructor(e=null){super(),this.sourceTexture=e,this.isExternalTexture=!0}copy(e){return super.copy(e),this.sourceTexture=e.sourceTexture,this}}class oy extends bn{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],o=[],a=[],c=[],l=new P,u=new oe;o.push(0,0,0),a.push(0,0,1),c.push(.5,.5);for(let h=0,d=3;h<=t;h++,d+=3){const f=n+h/t*i;l.x=e*Math.cos(f),l.y=e*Math.sin(f),o.push(l.x,l.y,l.z),a.push(0,0,1),u.x=(o[d]/e+1)/2,u.y=(o[d+1]/e+1)/2,c.push(u.x,u.y)}for(let h=1;h<=t;h++)r.push(h,h+1,0);this.setIndex(r),this.setAttribute("position",new Dt(o,3)),this.setAttribute("normal",new Dt(a,3)),this.setAttribute("uv",new Dt(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new oy(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class cm extends bn{constructor(e=1,t=1,n=1,i=32,r=1,o=!1,a=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:c};const l=this;i=Math.floor(i),r=Math.floor(r);const u=[],h=[],d=[],f=[];let p=0;const x=[],g=n/2;let m=0;b(),o===!1&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(u),this.setAttribute("position",new Dt(h,3)),this.setAttribute("normal",new Dt(d,3)),this.setAttribute("uv",new Dt(f,2));function b(){const v=new P,w=new P;let S=0;const E=(t-e)/n;for(let C=0;C<=r;C++){const T=[],M=C/r,I=M*(t-e)+e;for(let G=0;G<=i;G++){const z=G/i,$=z*c+a,Y=Math.sin($),q=Math.cos($);w.x=I*Y,w.y=-M*n+g,w.z=I*q,h.push(w.x,w.y,w.z),v.set(Y,E,q).normalize(),d.push(v.x,v.y,v.z),f.push(z,1-M),T.push(p++)}x.push(T)}for(let C=0;C<i;C++)for(let T=0;T<r;T++){const M=x[T][C],I=x[T+1][C],G=x[T+1][C+1],z=x[T][C+1];(e>0||T!==0)&&(u.push(M,I,z),S+=3),(t>0||T!==r-1)&&(u.push(I,G,z),S+=3)}l.addGroup(m,S,0),m+=S}function y(v){const w=p,S=new oe,E=new P;let C=0;const T=v===!0?e:t,M=v===!0?1:-1;for(let G=1;G<=i;G++)h.push(0,g*M,0),d.push(0,M,0),f.push(.5,.5),p++;const I=p;for(let G=0;G<=i;G++){const $=G/i*c+a,Y=Math.cos($),q=Math.sin($);E.x=T*q,E.y=g*M,E.z=T*Y,h.push(E.x,E.y,E.z),d.push(0,M,0),S.x=Y*.5+.5,S.y=q*.5*M+.5,f.push(S.x,S.y),p++}for(let G=0;G<i;G++){const z=w+G,$=I+G;v===!0?u.push($,$+1,z):u.push($+1,$,z),C+=3}l.addGroup(m,C,v===!0?1:2),m+=C}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new cm(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class $s{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){te("Curve: .getPoint() not implemented.")}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const n=this.getLengths();let i=0;const r=n.length;let o;t?o=t:o=e*n[r-1];let a=0,c=r-1,l;for(;a<=c;)if(i=Math.floor(a+(c-a)/2),l=n[i]-o,l<0)a=i+1;else if(l>0)c=i-1;else{c=i;break}if(i=c,n[i]===o)return i/(r-1);const u=n[i],d=n[i+1]-u,f=(o-u)/d;return(i+f)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),a=this.getPoint(r),c=t||(o.isVector2?new oe:new P);return c.copy(a).sub(o).normalize(),c}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t=!1){const n=new P,i=[],r=[],o=[],a=new P,c=new ht;for(let f=0;f<=e;f++){const p=f/e;i[f]=this.getTangentAt(p,new P)}r[0]=new P,o[0]=new P;let l=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),d=Math.abs(i[0].z);u<=l&&(l=u,n.set(1,0,0)),h<=l&&(l=h,n.set(0,1,0)),d<=l&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),o[0].crossVectors(i[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(ut(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(c.makeRotationAxis(a,p))}o[f].crossVectors(i[f],r[f])}if(t===!0){let f=Math.acos(ut(r[0].dot(r[e]),-1,1));f/=e,i[0].dot(a.crossVectors(r[0],r[e]))>0&&(f=-f);for(let p=1;p<=e;p++)r[p].applyMatrix4(c.makeRotationAxis(i[p],f*p)),o[p].crossVectors(i[p],r[p])}return{tangents:i,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class lm extends $s{constructor(e=0,t=0,n=1,i=1,r=0,o=Math.PI*2,a=!1,c=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=c}getPoint(e,t=new oe){const n=t,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const a=this.aStartAngle+e*r;let c=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=c-this.aX,f=l-this.aY;c=d*u-f*h+this.aX,l=d*h+f*u+this.aY}return n.set(c,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class O3 extends lm{constructor(e,t,n,i,r,o){super(e,t,n,n,i,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function um(){let s=0,e=0,t=0,n=0;function i(r,o,a,c){s=r,e=a,t=-3*r+3*o-2*a-c,n=2*r-2*o+a+c}return{initCatmullRom:function(r,o,a,c,l){i(o,a,l*(a-r),l*(c-o))},initNonuniformCatmullRom:function(r,o,a,c,l,u,h){let d=(o-r)/l-(a-r)/(l+u)+(a-o)/u,f=(a-o)/u-(c-o)/(u+h)+(c-a)/h;d*=u,f*=u,i(o,a,d,f)},calc:function(r){const o=r*r,a=o*r;return s+e*r+t*o+n*a}}}const Au=new P,Kd=new um,Zd=new um,Qd=new um;class V3 extends $s{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new P){const n=t,i=this.points,r=i.length,o=(r-(this.closed?0:1))*e;let a=Math.floor(o),c=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:c===0&&a===r-1&&(a=r-2,c=1);let l,u;this.closed||a>0?l=i[(a-1)%r]:(Au.subVectors(i[0],i[1]).add(i[0]),l=Au);const h=i[a%r],d=i[(a+1)%r];if(this.closed||a+2<r?u=i[(a+2)%r]:(Au.subVectors(i[r-1],i[r-2]).add(i[r-1]),u=Au),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(l.distanceToSquared(h),f),x=Math.pow(h.distanceToSquared(d),f),g=Math.pow(d.distanceToSquared(u),f);x<1e-4&&(x=1),p<1e-4&&(p=x),g<1e-4&&(g=x),Kd.initNonuniformCatmullRom(l.x,h.x,d.x,u.x,p,x,g),Zd.initNonuniformCatmullRom(l.y,h.y,d.y,u.y,p,x,g),Qd.initNonuniformCatmullRom(l.z,h.z,d.z,u.z,p,x,g)}else this.curveType==="catmullrom"&&(Kd.initCatmullRom(l.x,h.x,d.x,u.x,this.tension),Zd.initCatmullRom(l.y,h.y,d.y,u.y,this.tension),Qd.initCatmullRom(l.z,h.z,d.z,u.z,this.tension));return n.set(Kd.calc(c),Zd.calc(c),Qd.calc(c)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new P().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function T0(s,e,t,n,i){const r=(n-e)*.5,o=(i-t)*.5,a=s*s,c=s*a;return(2*t-2*n+r+o)*c+(-3*t+3*n-2*r-o)*a+r*s+t}function G3(s,e){const t=1-s;return t*t*e}function z3(s,e){return 2*(1-s)*s*e}function k3(s,e){return s*s*e}function Kc(s,e,t,n){return G3(s,e)+z3(s,t)+k3(s,n)}function H3(s,e){const t=1-s;return t*t*t*e}function W3(s,e){const t=1-s;return 3*t*t*s*e}function $3(s,e){return 3*(1-s)*s*s*e}function X3(s,e){return s*s*s*e}function Zc(s,e,t,n,i){return H3(s,e)+W3(s,t)+$3(s,n)+X3(s,i)}class ay extends $s{constructor(e=new oe,t=new oe,n=new oe,i=new oe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new oe){const n=t,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(Zc(e,i.x,r.x,o.x,a.x),Zc(e,i.y,r.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class q3 extends $s{constructor(e=new P,t=new P,n=new P,i=new P){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new P){const n=t,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(Zc(e,i.x,r.x,o.x,a.x),Zc(e,i.y,r.y,o.y,a.y),Zc(e,i.z,r.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class cy extends $s{constructor(e=new oe,t=new oe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new oe){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new oe){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Y3 extends $s{constructor(e=new P,t=new P){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new P){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new P){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ly extends $s{constructor(e=new oe,t=new oe,n=new oe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new oe){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(Kc(e,i.x,r.x,o.x),Kc(e,i.y,r.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class uy extends $s{constructor(e=new P,t=new P,n=new P){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new P){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(Kc(e,i.x,r.x,o.x),Kc(e,i.y,r.y,o.y),Kc(e,i.z,r.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class hy extends $s{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new oe){const n=t,i=this.points,r=(i.length-1)*e,o=Math.floor(r),a=r-o,c=i[o===0?o:o-1],l=i[o],u=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(T0(a,c.x,l.x,u.x,h.x),T0(a,c.y,l.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new oe().fromArray(i))}return this}}var vh=Object.freeze({__proto__:null,ArcCurve:O3,CatmullRomCurve3:V3,CubicBezierCurve:ay,CubicBezierCurve3:q3,EllipseCurve:lm,LineCurve:cy,LineCurve3:Y3,QuadraticBezierCurve:ly,QuadraticBezierCurve3:uy,SplineCurve:hy});class j3 extends $s{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new vh[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const o=i[r]-n,a=this.curves[r],c=a.getLength(),l=c===0?0:1-o/c;return a.getPointAt(l,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,c=o.getPoints(a);for(let l=0;l<c.length;l++){const u=c[l];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new vh[i.type]().fromJSON(i))}return this}}class Qf extends j3{constructor(e){super(),this.type="Path",this.currentPoint=new oe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new cy(this.currentPoint.clone(),new oe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new ly(this.currentPoint.clone(),new oe(e,t),new oe(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,o){const a=new ay(this.currentPoint.clone(),new oe(e,t),new oe(n,i),new oe(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new hy(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,o){const a=this.currentPoint.x,c=this.currentPoint.y;return this.absarc(e+a,t+c,n,i,r,o),this}absarc(e,t,n,i,r,o){return this.absellipse(e,t,n,n,i,r,o),this}ellipse(e,t,n,i,r,o,a,c){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+l,t+u,n,i,r,o,a,c),this}absellipse(e,t,n,i,r,o,a,c){const l=new lm(e,t,n,i,r,o,a,c);if(this.curves.length>0){const h=l.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(l);const u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class ch extends Qf{constructor(e){super(e),this.uuid=Us(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Qf().fromJSON(i))}return this}}function K3(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=dy(s,0,i,t,!0);const o=[];if(!r||r.next===r.prev)return o;let a,c,l;if(n&&(r=tE(s,e,r,t)),s.length>80*t){a=s[0],c=s[1];let u=a,h=c;for(let d=t;d<i;d+=t){const f=s[d],p=s[d+1];f<a&&(a=f),p<c&&(c=p),f>u&&(u=f),p>h&&(h=p)}l=Math.max(u-a,h-c),l=l!==0?32767/l:0}return bl(r,o,t,a,c,l,0),o}function dy(s,e,t,n,i){let r;if(i===dE(s,e,t,n)>0)for(let o=e;o<t;o+=n)r=M0(o/n|0,s[o],s[o+1],r);else for(let o=t-n;o>=e;o-=n)r=M0(o/n|0,s[o],s[o+1],r);return r&&nc(r,r.next)&&(Sl(r),r=r.next),r}function No(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(nc(t,t.next)||cn(t.prev,t,t.next)===0)){if(Sl(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function bl(s,e,t,n,i,r,o){if(!s)return;!o&&r&&oE(s,n,i,r);let a=s;for(;s.prev!==s.next;){const c=s.prev,l=s.next;if(r?Q3(s,n,i,r):Z3(s)){e.push(c.i,s.i,l.i),Sl(s),s=l.next,a=l.next;continue}if(s=l,s===a){o?o===1?(s=J3(No(s),e),bl(s,e,t,n,i,r,2)):o===2&&eE(s,e,t,n,i,r):bl(No(s),e,t,n,i,r,1);break}}}function Z3(s){const e=s.prev,t=s,n=s.next;if(cn(e,t,n)>=0)return!1;const i=e.x,r=t.x,o=n.x,a=e.y,c=t.y,l=n.y,u=Math.min(i,r,o),h=Math.min(a,c,l),d=Math.max(i,r,o),f=Math.max(a,c,l);let p=n.next;for(;p!==e;){if(p.x>=u&&p.x<=d&&p.y>=h&&p.y<=f&&Hc(i,a,r,c,o,l,p.x,p.y)&&cn(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function Q3(s,e,t,n){const i=s.prev,r=s,o=s.next;if(cn(i,r,o)>=0)return!1;const a=i.x,c=r.x,l=o.x,u=i.y,h=r.y,d=o.y,f=Math.min(a,c,l),p=Math.min(u,h,d),x=Math.max(a,c,l),g=Math.max(u,h,d),m=Jf(f,p,e,t,n),b=Jf(x,g,e,t,n);let y=s.prevZ,v=s.nextZ;for(;y&&y.z>=m&&v&&v.z<=b;){if(y.x>=f&&y.x<=x&&y.y>=p&&y.y<=g&&y!==i&&y!==o&&Hc(a,u,c,h,l,d,y.x,y.y)&&cn(y.prev,y,y.next)>=0||(y=y.prevZ,v.x>=f&&v.x<=x&&v.y>=p&&v.y<=g&&v!==i&&v!==o&&Hc(a,u,c,h,l,d,v.x,v.y)&&cn(v.prev,v,v.next)>=0))return!1;v=v.nextZ}for(;y&&y.z>=m;){if(y.x>=f&&y.x<=x&&y.y>=p&&y.y<=g&&y!==i&&y!==o&&Hc(a,u,c,h,l,d,y.x,y.y)&&cn(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;v&&v.z<=b;){if(v.x>=f&&v.x<=x&&v.y>=p&&v.y<=g&&v!==i&&v!==o&&Hc(a,u,c,h,l,d,v.x,v.y)&&cn(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}function J3(s,e){let t=s;do{const n=t.prev,i=t.next.next;!nc(n,i)&&py(n,t,t.next,i)&&vl(n,i)&&vl(i,n)&&(e.push(n.i,t.i,i.i),Sl(t),Sl(t.next),t=s=i),t=t.next}while(t!==s);return No(t)}function eE(s,e,t,n,i,r){let o=s;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&lE(o,a)){let c=my(o,a);o=No(o,o.next),c=No(c,c.next),bl(o,e,t,n,i,r,0),bl(c,e,t,n,i,r,0);return}a=a.next}o=o.next}while(o!==s)}function tE(s,e,t,n){const i=[];for(let r=0,o=e.length;r<o;r++){const a=e[r]*n,c=r<o-1?e[r+1]*n:s.length,l=dy(s,a,c,n,!1);l===l.next&&(l.steiner=!0),i.push(cE(l))}i.sort(nE);for(let r=0;r<i.length;r++)t=iE(i[r],t);return t}function nE(s,e){let t=s.x-e.x;if(t===0&&(t=s.y-e.y,t===0)){const n=(s.next.y-s.y)/(s.next.x-s.x),i=(e.next.y-e.y)/(e.next.x-e.x);t=n-i}return t}function iE(s,e){const t=sE(s,e);if(!t)return e;const n=my(t,s);return No(n,n.next),No(t,t.next)}function sE(s,e){let t=e;const n=s.x,i=s.y;let r=-1/0,o;if(nc(s,t))return t;do{if(nc(s,t.next))return t.next;if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const h=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(h<=n&&h>r&&(r=h,o=t.x<t.next.x?t:t.next,h===n))return o}t=t.next}while(t!==e);if(!o)return null;const a=o,c=o.x,l=o.y;let u=1/0;t=o;do{if(n>=t.x&&t.x>=c&&n!==t.x&&fy(i<l?n:r,i,c,l,i<l?r:n,i,t.x,t.y)){const h=Math.abs(i-t.y)/(n-t.x);vl(t,s)&&(h<u||h===u&&(t.x>o.x||t.x===o.x&&rE(o,t)))&&(o=t,u=h)}t=t.next}while(t!==a);return o}function rE(s,e){return cn(s.prev,s,e.prev)<0&&cn(e.next,s,s.next)<0}function oE(s,e,t,n){let i=s;do i.z===0&&(i.z=Jf(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,aE(i)}function aE(s){let e,t=1;do{let n=s,i;s=null;let r=null;for(e=0;n;){e++;let o=n,a=0;for(let l=0;l<t&&(a++,o=o.nextZ,!!o);l++);let c=t;for(;a>0||c>0&&o;)a!==0&&(c===0||!o||n.z<=o.z)?(i=n,n=n.nextZ,a--):(i=o,o=o.nextZ,c--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;n=o}r.nextZ=null,t*=2}while(e>1);return s}function Jf(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function cE(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function fy(s,e,t,n,i,r,o,a){return(i-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(n-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(i-o)*(n-a)}function Hc(s,e,t,n,i,r,o,a){return!(s===o&&e===a)&&fy(s,e,t,n,i,r,o,a)}function lE(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!uE(s,e)&&(vl(s,e)&&vl(e,s)&&hE(s,e)&&(cn(s.prev,s,e.prev)||cn(s,e.prev,e))||nc(s,e)&&cn(s.prev,s,s.next)>0&&cn(e.prev,e,e.next)>0)}function cn(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function nc(s,e){return s.x===e.x&&s.y===e.y}function py(s,e,t,n){const i=Ru(cn(s,e,t)),r=Ru(cn(s,e,n)),o=Ru(cn(t,n,s)),a=Ru(cn(t,n,e));return!!(i!==r&&o!==a||i===0&&wu(s,t,e)||r===0&&wu(s,n,e)||o===0&&wu(t,s,n)||a===0&&wu(t,e,n))}function wu(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function Ru(s){return s>0?1:s<0?-1:0}function uE(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&py(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function vl(s,e){return cn(s.prev,s,s.next)<0?cn(s,e,s.next)>=0&&cn(s,s.prev,e)>=0:cn(s,e,s.prev)<0||cn(s,s.next,e)<0}function hE(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function my(s,e){const t=ep(s.i,s.x,s.y),n=ep(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function M0(s,e,t,n){const i=ep(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Sl(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function ep(s,e,t){return{i:s,x:e,y:t,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function dE(s,e,t,n){let i=0;for(let r=e,o=t-n;r<t;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}class fE{static triangulate(e,t,n=2){return K3(e,t,n)}}class po{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return po.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];E0(e),A0(n,e);let o=e.length;t.forEach(E0);for(let c=0;c<t.length;c++)i.push(o),o+=t[c].length,A0(n,t[c]);const a=fE.triangulate(n,i);for(let c=0;c<a.length;c+=3)r.push(a.slice(c,c+3));return r}}function E0(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function A0(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class hm extends bn{constructor(e=new ch([new oe(.5,.5),new oe(-.5,.5),new oe(-.5,-.5),new oe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let a=0,c=e.length;a<c;a++){const l=e[a];o(l)}this.setAttribute("position",new Dt(i,3)),this.setAttribute("uv",new Dt(r,2)),this.computeVertexNormals();function o(a){const c=[],l=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1,h=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:f-.1,x=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const m=t.extrudePath,b=t.UVGenerator!==void 0?t.UVGenerator:pE;let y,v=!1,w,S,E,C;m&&(y=m.getSpacedPoints(u),v=!0,d=!1,w=m.computeFrenetFrames(u,!1),S=new P,E=new P,C=new P),d||(g=0,f=0,p=0,x=0);const T=a.extractPoints(l);let M=T.shape;const I=T.holes;if(!po.isClockWise(M)){M=M.reverse();for(let fe=0,D=I.length;fe<D;fe++){const de=I[fe];po.isClockWise(de)&&(I[fe]=de.reverse())}}function z(fe){const de=10000000000000001e-36;let ve=fe[0];for(let Ee=1;Ee<=fe.length;Ee++){const _e=Ee%fe.length,We=fe[_e],Ce=We.x-ve.x,Ve=We.y-ve.y,L=Ce*Ce+Ve*Ve,A=Math.max(Math.abs(We.x),Math.abs(We.y),Math.abs(ve.x),Math.abs(ve.y)),X=de*A*A;if(L<=X){fe.splice(_e,1),Ee--;continue}ve=We}}z(M),I.forEach(z);const $=I.length,Y=M;for(let fe=0;fe<$;fe++){const D=I[fe];M=M.concat(D)}function q(fe,D,de){return D||ge("ExtrudeGeometry: vec does not exist"),fe.clone().addScaledVector(D,de)}const he=M.length;function K(fe,D,de){let ve,Ee,_e;const We=fe.x-D.x,Ce=fe.y-D.y,Ve=de.x-fe.x,L=de.y-fe.y,A=We*We+Ce*Ce,X=We*L-Ce*Ve;if(Math.abs(X)>Number.EPSILON){const se=Math.sqrt(A),le=Math.sqrt(Ve*Ve+L*L),ne=D.x-Ce/se,Qe=D.y+We/se,Pe=de.x-L/le,tt=de.y+Ve/le,Ye=((Pe-ne)*L-(tt-Qe)*Ve)/(We*L-Ce*Ve);ve=ne+We*Ye-fe.x,Ee=Qe+Ce*Ye-fe.y;const pe=ve*ve+Ee*Ee;if(pe<=2)return new oe(ve,Ee);_e=Math.sqrt(pe/2)}else{let se=!1;We>Number.EPSILON?Ve>Number.EPSILON&&(se=!0):We<-Number.EPSILON?Ve<-Number.EPSILON&&(se=!0):Math.sign(Ce)===Math.sign(L)&&(se=!0),se?(ve=-Ce,Ee=We,_e=Math.sqrt(A)):(ve=We,Ee=Ce,_e=Math.sqrt(A/2))}return new oe(ve/_e,Ee/_e)}const ue=[];for(let fe=0,D=Y.length,de=D-1,ve=fe+1;fe<D;fe++,de++,ve++)de===D&&(de=0),ve===D&&(ve=0),ue[fe]=K(Y[fe],Y[de],Y[ve]);const ye=[];let Ie,yt=ue.concat();for(let fe=0,D=$;fe<D;fe++){const de=I[fe];Ie=[];for(let ve=0,Ee=de.length,_e=Ee-1,We=ve+1;ve<Ee;ve++,_e++,We++)_e===Ee&&(_e=0),We===Ee&&(We=0),Ie[ve]=K(de[ve],de[_e],de[We]);ye.push(Ie),yt=yt.concat(Ie)}let pt;if(g===0)pt=po.triangulateShape(Y,I);else{const fe=[],D=[];for(let de=0;de<g;de++){const ve=de/g,Ee=f*Math.cos(ve*Math.PI/2),_e=p*Math.sin(ve*Math.PI/2)+x;for(let We=0,Ce=Y.length;We<Ce;We++){const Ve=q(Y[We],ue[We],_e);Je(Ve.x,Ve.y,-Ee),ve===0&&fe.push(Ve)}for(let We=0,Ce=$;We<Ce;We++){const Ve=I[We];Ie=ye[We];const L=[];for(let A=0,X=Ve.length;A<X;A++){const se=q(Ve[A],Ie[A],_e);Je(se.x,se.y,-Ee),ve===0&&L.push(se)}ve===0&&D.push(L)}}pt=po.triangulateShape(fe,D)}const Mt=pt.length,wt=p+x;for(let fe=0;fe<he;fe++){const D=d?q(M[fe],yt[fe],wt):M[fe];v?(E.copy(w.normals[0]).multiplyScalar(D.x),S.copy(w.binormals[0]).multiplyScalar(D.y),C.copy(y[0]).add(E).add(S),Je(C.x,C.y,C.z)):Je(D.x,D.y,0)}for(let fe=1;fe<=u;fe++)for(let D=0;D<he;D++){const de=d?q(M[D],yt[D],wt):M[D];v?(E.copy(w.normals[fe]).multiplyScalar(de.x),S.copy(w.binormals[fe]).multiplyScalar(de.y),C.copy(y[fe]).add(E).add(S),Je(C.x,C.y,C.z)):Je(de.x,de.y,h/u*fe)}for(let fe=g-1;fe>=0;fe--){const D=fe/g,de=f*Math.cos(D*Math.PI/2),ve=p*Math.sin(D*Math.PI/2)+x;for(let Ee=0,_e=Y.length;Ee<_e;Ee++){const We=q(Y[Ee],ue[Ee],ve);Je(We.x,We.y,h+de)}for(let Ee=0,_e=I.length;Ee<_e;Ee++){const We=I[Ee];Ie=ye[Ee];for(let Ce=0,Ve=We.length;Ce<Ve;Ce++){const L=q(We[Ce],Ie[Ce],ve);v?Je(L.x,L.y+y[u-1].y,y[u-1].x+de):Je(L.x,L.y,h+de)}}}re(),ce();function re(){const fe=i.length/3;if(d){let D=0,de=he*D;for(let ve=0;ve<Mt;ve++){const Ee=pt[ve];ze(Ee[2]+de,Ee[1]+de,Ee[0]+de)}D=u+g*2,de=he*D;for(let ve=0;ve<Mt;ve++){const Ee=pt[ve];ze(Ee[0]+de,Ee[1]+de,Ee[2]+de)}}else{for(let D=0;D<Mt;D++){const de=pt[D];ze(de[2],de[1],de[0])}for(let D=0;D<Mt;D++){const de=pt[D];ze(de[0]+he*u,de[1]+he*u,de[2]+he*u)}}n.addGroup(fe,i.length/3-fe,0)}function ce(){const fe=i.length/3;let D=0;Fe(Y,D),D+=Y.length;for(let de=0,ve=I.length;de<ve;de++){const Ee=I[de];Fe(Ee,D),D+=Ee.length}n.addGroup(fe,i.length/3-fe,1)}function Fe(fe,D){let de=fe.length;for(;--de>=0;){const ve=de;let Ee=de-1;Ee<0&&(Ee=fe.length-1);for(let _e=0,We=u+g*2;_e<We;_e++){const Ce=he*_e,Ve=he*(_e+1),L=D+ve+Ce,A=D+Ee+Ce,X=D+Ee+Ve,se=D+ve+Ve;bt(L,A,X,se)}}}function Je(fe,D,de){c.push(fe),c.push(D),c.push(de)}function ze(fe,D,de){qt(fe),qt(D),qt(de);const ve=i.length/3,Ee=b.generateTopUV(n,i,ve-3,ve-2,ve-1);dt(Ee[0]),dt(Ee[1]),dt(Ee[2])}function bt(fe,D,de,ve){qt(fe),qt(D),qt(ve),qt(D),qt(de),qt(ve);const Ee=i.length/3,_e=b.generateSideWallUV(n,i,Ee-6,Ee-3,Ee-2,Ee-1);dt(_e[0]),dt(_e[1]),dt(_e[3]),dt(_e[1]),dt(_e[2]),dt(_e[3])}function qt(fe){i.push(c[fe*3+0]),i.push(c[fe*3+1]),i.push(c[fe*3+2])}function dt(fe){r.push(fe.x),r.push(fe.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return mE(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,o=e.shapes.length;r<o;r++){const a=t[e.shapes[r]];n.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new vh[i.type]().fromJSON(i)),new hm(n,e.options)}}const pE={generateTopUV:function(s,e,t,n,i){const r=e[t*3],o=e[t*3+1],a=e[n*3],c=e[n*3+1],l=e[i*3],u=e[i*3+1];return[new oe(r,o),new oe(a,c),new oe(l,u)]},generateSideWallUV:function(s,e,t,n,i,r){const o=e[t*3],a=e[t*3+1],c=e[t*3+2],l=e[n*3],u=e[n*3+1],h=e[n*3+2],d=e[i*3],f=e[i*3+1],p=e[i*3+2],x=e[r*3],g=e[r*3+1],m=e[r*3+2];return Math.abs(a-u)<Math.abs(o-l)?[new oe(o,1-c),new oe(l,1-h),new oe(d,1-p),new oe(x,1-m)]:[new oe(a,1-c),new oe(u,1-h),new oe(f,1-p),new oe(g,1-m)]}};function mE(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Vl extends bn{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,o=t/2,a=Math.floor(n),c=Math.floor(i),l=a+1,u=c+1,h=e/a,d=t/c,f=[],p=[],x=[],g=[];for(let m=0;m<u;m++){const b=m*d-o;for(let y=0;y<l;y++){const v=y*h-r;p.push(v,-b,0),x.push(0,0,1),g.push(y/a),g.push(1-m/c)}}for(let m=0;m<c;m++)for(let b=0;b<a;b++){const y=b+l*m,v=b+l*(m+1),w=b+1+l*(m+1),S=b+1+l*m;f.push(y,v,S),f.push(v,w,S)}this.setIndex(f),this.setAttribute("position",new Dt(p,3)),this.setAttribute("normal",new Dt(x,3)),this.setAttribute("uv",new Dt(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Vl(e.width,e.height,e.widthSegments,e.heightSegments)}}class dm extends bn{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(o+a,Math.PI);let l=0;const u=[],h=new P,d=new P,f=[],p=[],x=[],g=[];for(let m=0;m<=n;m++){const b=[],y=m/n;let v=0;m===0&&o===0?v=.5/t:m===n&&c===Math.PI&&(v=-.5/t);for(let w=0;w<=t;w++){const S=w/t;h.x=-e*Math.cos(i+S*r)*Math.sin(o+y*a),h.y=e*Math.cos(o+y*a),h.z=e*Math.sin(i+S*r)*Math.sin(o+y*a),p.push(h.x,h.y,h.z),d.copy(h).normalize(),x.push(d.x,d.y,d.z),g.push(S+v,1-y),b.push(l++)}u.push(b)}for(let m=0;m<n;m++)for(let b=0;b<t;b++){const y=u[m][b+1],v=u[m][b],w=u[m+1][b],S=u[m+1][b+1];(m!==0||o>0)&&f.push(y,v,S),(m!==n-1||c<Math.PI)&&f.push(v,w,S)}this.setIndex(f),this.setAttribute("position",new Dt(p,3)),this.setAttribute("normal",new Dt(x,3)),this.setAttribute("uv",new Dt(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new dm(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class gy extends bn{constructor(e=new uy(new P(-1,-1,0),new P(-1,1,0),new P(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const o=e.computeFrenetFrames(t,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new P,c=new P,l=new oe;let u=new P;const h=[],d=[],f=[],p=[];x(),this.setIndex(p),this.setAttribute("position",new Dt(h,3)),this.setAttribute("normal",new Dt(d,3)),this.setAttribute("uv",new Dt(f,2));function x(){for(let y=0;y<t;y++)g(y);g(r===!1?t:0),b(),m()}function g(y){u=e.getPointAt(y/t,u);const v=o.normals[y],w=o.binormals[y];for(let S=0;S<=i;S++){const E=S/i*Math.PI*2,C=Math.sin(E),T=-Math.cos(E);c.x=T*v.x+C*w.x,c.y=T*v.y+C*w.y,c.z=T*v.z+C*w.z,c.normalize(),d.push(c.x,c.y,c.z),a.x=u.x+n*c.x,a.y=u.y+n*c.y,a.z=u.z+n*c.z,h.push(a.x,a.y,a.z)}}function m(){for(let y=1;y<=t;y++)for(let v=1;v<=i;v++){const w=(i+1)*(y-1)+(v-1),S=(i+1)*y+(v-1),E=(i+1)*y+v,C=(i+1)*(y-1)+v;p.push(w,S,C),p.push(S,E,C)}}function b(){for(let y=0;y<=t;y++)for(let v=0;v<=i;v++)l.x=y/t,l.y=v/i,f.push(l.x,l.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new gy(new vh[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class gE extends bn{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new P,r=new P;if(e.index!==null){const o=e.attributes.position,a=e.index;let c=e.groups;c.length===0&&(c=[{start:0,count:a.count,materialIndex:0}]);for(let l=0,u=c.length;l<u;++l){const h=c[l],d=h.start,f=h.count;for(let p=d,x=d+f;p<x;p+=3)for(let g=0;g<3;g++){const m=a.getX(p+g),b=a.getX(p+(g+1)%3);i.fromBufferAttribute(o,m),r.fromBufferAttribute(o,b),w0(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const o=e.attributes.position;for(let a=0,c=o.count/3;a<c;a++)for(let l=0;l<3;l++){const u=3*a+l,h=3*a+(l+1)%3;i.fromBufferAttribute(o,u),r.fromBufferAttribute(o,h),w0(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new Dt(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function w0(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}class xE extends Jn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ze(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class xy extends Jn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Ze(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ze(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=dr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ti,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class _E extends xy{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new oe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return ut(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ze(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ze(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ze(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class yE extends Jn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ze(16777215),this.specular=new Ze(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ze(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=dr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ti,this.combine=Dl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class bE extends Jn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ze(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ze(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=dr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class vE extends Jn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=dr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class SE extends Jn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ze(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ze(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=dr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ti,this.combine=Dl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class TE extends Jn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=DM,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class ME extends Jn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class EE extends Jn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ze(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=dr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this.fog=e.fog,this}}class AE extends om{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}const Jd={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class wE{constructor(e,t,n){const i=this;let r=!1,o=0,a=0,c;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this._abortController=null,this.itemStart=function(u){a++,r===!1&&i.onStart!==void 0&&i.onStart(u,o,a),r=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,a),o===a&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return c?c(u):u},this.setURLModifier=function(u){return c=u,this},this.addHandler=function(u,h){return l.push(u,h),this},this.removeHandler=function(u){const h=l.indexOf(u);return h!==-1&&l.splice(h,2),this},this.getHandler=function(u){for(let h=0,d=l.length;h<d;h+=2){const f=l[h],p=l[h+1];if(f.global&&(f.lastIndex=0),f.test(u))return p}return null},this.abort=function(){return this.abortController.abort(),this._abortController=null,this}}get abortController(){return this._abortController||(this._abortController=new AbortController),this._abortController}}const RE=new wE;class fm{constructor(e){this.manager=e!==void 0?e:RE,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}abort(){return this}}fm.DEFAULT_MATERIAL_NAME="__DEFAULT";const Qo=new WeakMap;class NE extends fm{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Jd.get(`image:${e}`);if(o!==void 0){if(o.complete===!0)r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0);else{let h=Qo.get(o);h===void 0&&(h=[],Qo.set(o,h)),h.push({onLoad:t,onError:i})}return o}const a=_l("img");function c(){u(),t&&t(this);const h=Qo.get(this)||[];for(let d=0;d<h.length;d++){const f=h[d];f.onLoad&&f.onLoad(this)}Qo.delete(this),r.manager.itemEnd(e)}function l(h){u(),i&&i(h),Jd.remove(`image:${e}`);const d=Qo.get(this)||[];for(let f=0;f<d.length;f++){const p=d[f];p.onError&&p.onError(h)}Qo.delete(this),r.manager.itemError(e),r.manager.itemEnd(e)}function u(){a.removeEventListener("load",c,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",c,!1),a.addEventListener("error",l,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),Jd.add(`image:${e}`,a),r.manager.itemStart(e),a.src=e,a}}class nG extends fm{constructor(e){super(e)}load(e,t,n,i){const r=new Rn,o=new NE(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){r.image=a,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class Uo extends dn{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ze(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class CE extends Uo{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(dn.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ze(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const ef=new ht,R0=new P,N0=new P;class pm{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new oe(512,512),this.mapType=un,this.map=null,this.mapPass=null,this.matrix=new ht,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ol,this._frameExtents=new oe(1,1),this._viewportCount=1,this._viewports=[new Ke(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;R0.setFromMatrixPosition(e.matrixWorld),t.position.copy(R0),N0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(N0),t.updateMatrixWorld(),ef.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ef,t.coordinateSystem,t.reversedDepth),t.reversedDepth?n.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(ef)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class PE extends pm{constructor(){super(new Wn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(e){const t=this.camera,n=Ro*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height*this.aspect,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class mm extends Uo{constructor(e,t,n=0,i=Math.PI/3,r=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(dn.DEFAULT_UP),this.updateMatrix(),this.target=new dn,this.distance=n,this.angle=i,this.penumbra=r,this.decay=o,this.map=null,this.shadow=new PE}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const C0=new ht,Ec=new P,tf=new P;class LE extends pm{constructor(){super(new Wn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new oe(4,2),this._viewportCount=6,this._viewports=[new Ke(2,1,1,1),new Ke(0,1,1,1),new Ke(3,1,1,1),new Ke(1,1,1,1),new Ke(3,0,1,1),new Ke(1,0,1,1)],this._cubeDirections=[new P(1,0,0),new P(-1,0,0),new P(0,0,1),new P(0,0,-1),new P(0,1,0),new P(0,-1,0)],this._cubeUps=[new P(0,1,0),new P(0,1,0),new P(0,1,0),new P(0,1,0),new P(0,0,1),new P(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Ec.setFromMatrixPosition(e.matrixWorld),n.position.copy(Ec),tf.copy(n.position),tf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(tf),n.updateMatrixWorld(),i.makeTranslation(-Ec.x,-Ec.y,-Ec.z),C0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(C0,n.coordinateSystem,n.reversedDepth)}}class DE extends Uo{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new LE}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Gl extends tm{constructor(e=-1,t=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,o=n+e,a=i+t,c=i-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,o=r+l*this.view.width,a-=u*this.view.offsetY,c=a-u*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,c,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class UE extends pm{constructor(){super(new Gl(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class IE extends Uo{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(dn.DEFAULT_UP),this.updateMatrix(),this.target=new dn,this.shadow=new UE}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class FE extends Uo{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class BE extends Uo{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class OE{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new P)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*r),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*r)),t.addScaledVector(o[6],.315392*(3*r*r-1)),t.addScaledVector(o[7],1.092548*(n*r)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*r),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*r),t.addScaledVector(o[6],.743125*r*r-.247708),t.addScaledVector(o[7],2*.429043*n*r),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class VE extends Uo{constructor(e=new OE,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class GE extends bn{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class _y extends Wn{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class zE{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=performance.now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}class Sh extends im{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}const P0=new ht;class iG{constructor(e,t,n=0,i=1/0){this.ray=new Fl(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Qp,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):ge("Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return P0.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(P0),this}intersectObject(e,t=!0,n=[]){return tp(e,this,n,t),n.sort(L0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)tp(e[i],this,n,t);return n.sort(L0),n}}function L0(s,e){return s.distance-e.distance}function tp(s,e,t,n){let i=!0;if(s.layers.test(e.layers)&&s.raycast(e,t)===!1&&(i=!1),i===!0&&n===!0){const r=s.children;for(let o=0,a=r.length;o<a;o++)tp(r[o],e,t,!0)}}class D0{constructor(e=1,t=0,n=0){this.radius=e,this.phi=t,this.theta=n}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=ut(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(ut(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class $h{constructor(e,t,n,i){$h.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,i){const r=this.elements;return r[0]=e,r[2]=t,r[1]=n,r[3]=i,this}}const U0=new P,Nu=new P,Jo=new P,ea=new P,nf=new P,kE=new P,HE=new P;class WE{constructor(e=new P,t=new P){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){U0.subVectors(e,this.start),Nu.subVectors(this.end,this.start);const n=Nu.dot(Nu);let r=Nu.dot(U0)/n;return t&&(r=ut(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}distanceSqToLine3(e,t=kE,n=HE){const i=10000000000000001e-32;let r,o;const a=this.start,c=e.start,l=this.end,u=e.end;Jo.subVectors(l,a),ea.subVectors(u,c),nf.subVectors(a,c);const h=Jo.dot(Jo),d=ea.dot(ea),f=ea.dot(nf);if(h<=i&&d<=i)return t.copy(a),n.copy(c),t.sub(n),t.dot(t);if(h<=i)r=0,o=f/d,o=ut(o,0,1);else{const p=Jo.dot(nf);if(d<=i)o=0,r=ut(-p/h,0,1);else{const x=Jo.dot(ea),g=h*d-x*x;g!==0?r=ut((x*f-p*d)/g,0,1):r=0,o=(x*r+f)/d,o<0?(o=0,r=ut(-p/h,0,1)):o>1&&(o=1,r=ut((x-p)/h,0,1))}}return t.copy(a).add(Jo.multiplyScalar(r)),n.copy(c).add(ea.multiplyScalar(o)),t.sub(n),t.dot(t)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}class $E{constructor(){this.type="ShapePath",this.color=new Ze,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Qf,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,o){return this.currentPath.bezierCurveTo(e,t,n,i,r,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(m){const b=[];for(let y=0,v=m.length;y<v;y++){const w=m[y],S=new ch;S.curves=w.curves,b.push(S)}return b}function n(m,b){const y=b.length;let v=!1;for(let w=y-1,S=0;S<y;w=S++){let E=b[w],C=b[S],T=C.x-E.x,M=C.y-E.y;if(Math.abs(M)>Number.EPSILON){if(M<0&&(E=b[S],T=-T,C=b[w],M=-M),m.y<E.y||m.y>C.y)continue;if(m.y===E.y){if(m.x===E.x)return!0}else{const I=M*(m.x-E.x)-T*(m.y-E.y);if(I===0)return!0;if(I<0)continue;v=!v}}else{if(m.y!==E.y)continue;if(C.x<=m.x&&m.x<=E.x||E.x<=m.x&&m.x<=C.x)return!0}}return v}const i=po.isClockWise,r=this.subPaths;if(r.length===0)return[];let o,a,c;const l=[];if(r.length===1)return a=r[0],c=new ch,c.curves=a.curves,l.push(c),l;let u=!i(r[0].getPoints());u=e?!u:u;const h=[],d=[];let f=[],p=0,x;d[p]=void 0,f[p]=[];for(let m=0,b=r.length;m<b;m++)a=r[m],x=a.getPoints(),o=i(x),o=e?!o:o,o?(!u&&d[p]&&p++,d[p]={s:new ch,p:x},d[p].s.curves=a.curves,u&&p++,f[p]=[]):f[p].push({h:a,p:x[0]});if(!d[0])return t(r);if(d.length>1){let m=!1,b=0;for(let y=0,v=d.length;y<v;y++)h[y]=[];for(let y=0,v=d.length;y<v;y++){const w=f[y];for(let S=0;S<w.length;S++){const E=w[S];let C=!0;for(let T=0;T<d.length;T++)n(E.p,d[T].p)&&(y!==T&&b++,C?(C=!1,h[T].push(E)):m=!0);C&&h[y].push(E)}}b>0&&m===!1&&(f=h)}let g;for(let m=0,b=d.length;m<b;m++){c=d[m].s,l.push(c),g=f[m];for(let y=0,v=g.length;y<v;y++)c.holes.push(g[y].h)}return l}}class gm extends xs{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){te("Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function np(s,e,t,n){const i=XE(n);switch(t){case zp:return s*e;case Il:return s*e/i.components*i.byteLength;case cc:return s*e/i.components*i.byteLength;case hs:return s*e*2/i.components*i.byteLength;case lc:return s*e*2/i.components*i.byteLength;case Ul:return s*e*3/i.components*i.byteLength;case _n:return s*e*4/i.components*i.byteLength;case uc:return s*e*4/i.components*i.byteLength;case Dr:case Ur:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case Ir:case Fr:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case ml:case xl:return Math.max(s,16)*Math.max(e,8)/4;case pl:case gl:return Math.max(s,8)*Math.max(e,8)/2;case Pa:case La:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case Da:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Ua:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Ia:return Math.floor((s+4)/5)*Math.floor((e+3)/4)*16;case Fa:return Math.floor((s+4)/5)*Math.floor((e+4)/5)*16;case Ba:return Math.floor((s+5)/6)*Math.floor((e+4)/5)*16;case Oa:return Math.floor((s+5)/6)*Math.floor((e+5)/6)*16;case Va:return Math.floor((s+7)/8)*Math.floor((e+4)/5)*16;case Ga:return Math.floor((s+7)/8)*Math.floor((e+5)/6)*16;case za:return Math.floor((s+7)/8)*Math.floor((e+7)/8)*16;case ka:return Math.floor((s+9)/10)*Math.floor((e+4)/5)*16;case Ha:return Math.floor((s+9)/10)*Math.floor((e+5)/6)*16;case Wa:return Math.floor((s+9)/10)*Math.floor((e+7)/8)*16;case $a:return Math.floor((s+9)/10)*Math.floor((e+9)/10)*16;case Xa:return Math.floor((s+11)/12)*Math.floor((e+9)/10)*16;case qa:return Math.floor((s+11)/12)*Math.floor((e+11)/12)*16;case Ya:case Yf:case jf:return Math.ceil(s/4)*Math.ceil(e/4)*16;case ja:case Ka:return Math.ceil(s/4)*Math.ceil(e/4)*8;case Za:case Qa:return Math.ceil(s/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function XE(s){switch(s){case un:case _o:return{byteLength:1,components:1};case us:case yo:case hn:return{byteLength:2,components:1};case Oh:case Vh:return{byteLength:2,components:4};case Kt:case On:case Sn:return{byteLength:4,components:1};case Gh:case zh:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"181"}}));typeof window<"u"&&(window.__THREE__?te("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="181");/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function yy(){let s=null,e=!1,t=null,n=null;function i(r,o){t(r,o),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function qE(s){const e=new WeakMap;function t(a,c){const l=a.array,u=a.usage,h=l.byteLength,d=s.createBuffer();s.bindBuffer(c,d),s.bufferData(c,l,u),a.onUploadCallback();let f;if(l instanceof Float32Array)f=s.FLOAT;else if(typeof Float16Array<"u"&&l instanceof Float16Array)f=s.HALF_FLOAT;else if(l instanceof Uint16Array)a.isFloat16BufferAttribute?f=s.HALF_FLOAT:f=s.UNSIGNED_SHORT;else if(l instanceof Int16Array)f=s.SHORT;else if(l instanceof Uint32Array)f=s.UNSIGNED_INT;else if(l instanceof Int32Array)f=s.INT;else if(l instanceof Int8Array)f=s.BYTE;else if(l instanceof Uint8Array)f=s.UNSIGNED_BYTE;else if(l instanceof Uint8ClampedArray)f=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+l);return{buffer:d,type:f,bytesPerElement:l.BYTES_PER_ELEMENT,version:a.version,size:h}}function n(a,c,l){const u=c.array,h=c.updateRanges;if(s.bindBuffer(l,a),h.length===0)s.bufferSubData(l,0,u);else{h.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<h.length;f++){const p=h[d],x=h[f];x.start<=p.start+p.count+1?p.count=Math.max(p.count,x.start+x.count-p.start):(++d,h[d]=x)}h.length=d+1;for(let f=0,p=h.length;f<p;f++){const x=h[f];s.bufferSubData(l,x.start*u.BYTES_PER_ELEMENT,u,x.start,x.count)}c.clearUpdateRanges()}c.onUploadCallback()}function i(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function r(a){a.isInterleavedBufferAttribute&&(a=a.data);const c=e.get(a);c&&(s.deleteBuffer(c.buffer),e.delete(a))}function o(a,c){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const u=e.get(a);(!u||u.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const l=e.get(a);if(l===void 0)e.set(a,t(a,c));else if(l.version<a.version){if(l.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(l.buffer,a,c),l.version=a.version}}return{get:i,remove:r,update:o}}var YE=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,jE=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,KE=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,ZE=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,QE=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,JE=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,eA=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,tA=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,nA=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,iA=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,sA=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,rA=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,oA=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,aA=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,cA=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,lA=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,uA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,hA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,dA=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,fA=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,pA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,mA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,gA=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,xA=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,_A=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,yA=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,bA=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,vA=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,SA=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,TA=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,MA="gl_FragColor = linearToOutputTexel( gl_FragColor );",EA=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,AA=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,wA=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
#endif`,RA=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,NA=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,CA=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,PA=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,LA=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,DA=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,UA=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,IA=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,FA=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,BA=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,OA=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,VA=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,GA=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, pow4( roughness ) ) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,zA=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,kA=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,HA=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,WA=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,$A=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,XA=`uniform sampler2D dfgLUT;
struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transpose( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 uv = vec2( roughness, dotNV );
	return texture2D( dfgLUT, uv ).rg;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
vec3 BRDF_GGX_Multiscatter( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 singleScatter = BRDF_GGX( lightDir, viewDir, normal, material );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 dfgV = DFGApprox( vec3(0.0, 0.0, 1.0), vec3(sqrt(1.0 - dotNV * dotNV), 0.0, dotNV), material.roughness );
	vec2 dfgL = DFGApprox( vec3(0.0, 0.0, 1.0), vec3(sqrt(1.0 - dotNL * dotNL), 0.0, dotNL), material.roughness );
	vec3 FssEss_V = material.specularColor * dfgV.x + material.specularF90 * dfgV.y;
	vec3 FssEss_L = material.specularColor * dfgL.x + material.specularF90 * dfgL.y;
	float Ess_V = dfgV.x + dfgV.y;
	float Ess_L = dfgL.x + dfgL.y;
	float Ems_V = 1.0 - Ess_V;
	float Ems_L = 1.0 - Ess_L;
	vec3 Favg = material.specularColor + ( 1.0 - material.specularColor ) * 0.047619;
	vec3 Fms = FssEss_V * FssEss_L * Favg / ( 1.0 - Ems_V * Ems_L * Favg * Favg + EPSILON );
	float compensationFactor = Ems_V * Ems_L;
	vec3 multiScatter = Fms * compensationFactor;
	return singleScatter + multiScatter;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX_Multiscatter( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,qA=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,YA=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,jA=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,KA=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,ZA=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,QA=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,JA=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,e1=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,t1=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,n1=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,i1=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,s1=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,r1=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,o1=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,a1=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,c1=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,l1=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,u1=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,h1=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,d1=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,f1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,p1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,m1=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,g1=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,x1=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,_1=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,y1=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,b1=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,v1=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,S1=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,T1=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,M1=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,E1=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,A1=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,w1=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,R1=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,N1=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			return step( depth, compare );
		#else
			return step( compare, depth );
		#endif
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow( sampler2D shadow, vec2 uv, float compare ) {
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			float hard_shadow = step( distribution.x, compare );
		#else
			float hard_shadow = step( compare, distribution.x );
		#endif
		if ( hard_shadow != 1.0 ) {
			float distance = compare - distribution.x;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,C1=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,P1=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,L1=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,D1=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,U1=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,I1=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,F1=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,B1=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,O1=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,V1=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,G1=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,z1=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,k1=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,H1=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,W1=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,$1=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,X1=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const q1=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Y1=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,j1=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,K1=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Z1=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Q1=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,J1=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,ew=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	#ifdef USE_REVERSED_DEPTH_BUFFER
		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];
	#else
		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;
	#endif
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,tw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,nw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,iw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,sw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,rw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,ow=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,aw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,cw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,uw=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,hw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,dw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,fw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,pw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,mw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,gw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,_w=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,yw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,bw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Sw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Tw=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Mw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Ew=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Aw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,St={alphahash_fragment:YE,alphahash_pars_fragment:jE,alphamap_fragment:KE,alphamap_pars_fragment:ZE,alphatest_fragment:QE,alphatest_pars_fragment:JE,aomap_fragment:eA,aomap_pars_fragment:tA,batching_pars_vertex:nA,batching_vertex:iA,begin_vertex:sA,beginnormal_vertex:rA,bsdfs:oA,iridescence_fragment:aA,bumpmap_pars_fragment:cA,clipping_planes_fragment:lA,clipping_planes_pars_fragment:uA,clipping_planes_pars_vertex:hA,clipping_planes_vertex:dA,color_fragment:fA,color_pars_fragment:pA,color_pars_vertex:mA,color_vertex:gA,common:xA,cube_uv_reflection_fragment:_A,defaultnormal_vertex:yA,displacementmap_pars_vertex:bA,displacementmap_vertex:vA,emissivemap_fragment:SA,emissivemap_pars_fragment:TA,colorspace_fragment:MA,colorspace_pars_fragment:EA,envmap_fragment:AA,envmap_common_pars_fragment:wA,envmap_pars_fragment:RA,envmap_pars_vertex:NA,envmap_physical_pars_fragment:GA,envmap_vertex:CA,fog_vertex:PA,fog_pars_vertex:LA,fog_fragment:DA,fog_pars_fragment:UA,gradientmap_pars_fragment:IA,lightmap_pars_fragment:FA,lights_lambert_fragment:BA,lights_lambert_pars_fragment:OA,lights_pars_begin:VA,lights_toon_fragment:zA,lights_toon_pars_fragment:kA,lights_phong_fragment:HA,lights_phong_pars_fragment:WA,lights_physical_fragment:$A,lights_physical_pars_fragment:XA,lights_fragment_begin:qA,lights_fragment_maps:YA,lights_fragment_end:jA,logdepthbuf_fragment:KA,logdepthbuf_pars_fragment:ZA,logdepthbuf_pars_vertex:QA,logdepthbuf_vertex:JA,map_fragment:e1,map_pars_fragment:t1,map_particle_fragment:n1,map_particle_pars_fragment:i1,metalnessmap_fragment:s1,metalnessmap_pars_fragment:r1,morphinstance_vertex:o1,morphcolor_vertex:a1,morphnormal_vertex:c1,morphtarget_pars_vertex:l1,morphtarget_vertex:u1,normal_fragment_begin:h1,normal_fragment_maps:d1,normal_pars_fragment:f1,normal_pars_vertex:p1,normal_vertex:m1,normalmap_pars_fragment:g1,clearcoat_normal_fragment_begin:x1,clearcoat_normal_fragment_maps:_1,clearcoat_pars_fragment:y1,iridescence_pars_fragment:b1,opaque_fragment:v1,packing:S1,premultiplied_alpha_fragment:T1,project_vertex:M1,dithering_fragment:E1,dithering_pars_fragment:A1,roughnessmap_fragment:w1,roughnessmap_pars_fragment:R1,shadowmap_pars_fragment:N1,shadowmap_pars_vertex:C1,shadowmap_vertex:P1,shadowmask_pars_fragment:L1,skinbase_vertex:D1,skinning_pars_vertex:U1,skinning_vertex:I1,skinnormal_vertex:F1,specularmap_fragment:B1,specularmap_pars_fragment:O1,tonemapping_fragment:V1,tonemapping_pars_fragment:G1,transmission_fragment:z1,transmission_pars_fragment:k1,uv_pars_fragment:H1,uv_pars_vertex:W1,uv_vertex:$1,worldpos_vertex:X1,background_vert:q1,background_frag:Y1,backgroundCube_vert:j1,backgroundCube_frag:K1,cube_vert:Z1,cube_frag:Q1,depth_vert:J1,depth_frag:ew,distanceRGBA_vert:tw,distanceRGBA_frag:nw,equirect_vert:iw,equirect_frag:sw,linedashed_vert:rw,linedashed_frag:ow,meshbasic_vert:aw,meshbasic_frag:cw,meshlambert_vert:lw,meshlambert_frag:uw,meshmatcap_vert:hw,meshmatcap_frag:dw,meshnormal_vert:fw,meshnormal_frag:pw,meshphong_vert:mw,meshphong_frag:gw,meshphysical_vert:xw,meshphysical_frag:_w,meshtoon_vert:yw,meshtoon_frag:bw,points_vert:vw,points_frag:Sw,shadow_vert:Tw,shadow_frag:Mw,sprite_vert:Ew,sprite_frag:Aw},Ne={common:{diffuse:{value:new Ze(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new gt},alphaMap:{value:null},alphaMapTransform:{value:new gt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new gt}},envmap:{envMap:{value:null},envMapRotation:{value:new gt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98},dfgLUT:{value:null}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new gt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new gt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new gt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new gt},normalScale:{value:new oe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new gt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new gt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new gt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new gt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ze(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ze(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new gt},alphaTest:{value:0},uvTransform:{value:new gt}},sprite:{diffuse:{value:new Ze(16777215)},opacity:{value:1},center:{value:new oe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new gt},alphaMap:{value:null},alphaMapTransform:{value:new gt},alphaTest:{value:0}}},fi={basic:{uniforms:ii([Ne.common,Ne.specularmap,Ne.envmap,Ne.aomap,Ne.lightmap,Ne.fog]),vertexShader:St.meshbasic_vert,fragmentShader:St.meshbasic_frag},lambert:{uniforms:ii([Ne.common,Ne.specularmap,Ne.envmap,Ne.aomap,Ne.lightmap,Ne.emissivemap,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.fog,Ne.lights,{emissive:{value:new Ze(0)}}]),vertexShader:St.meshlambert_vert,fragmentShader:St.meshlambert_frag},phong:{uniforms:ii([Ne.common,Ne.specularmap,Ne.envmap,Ne.aomap,Ne.lightmap,Ne.emissivemap,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.fog,Ne.lights,{emissive:{value:new Ze(0)},specular:{value:new Ze(1118481)},shininess:{value:30}}]),vertexShader:St.meshphong_vert,fragmentShader:St.meshphong_frag},standard:{uniforms:ii([Ne.common,Ne.envmap,Ne.aomap,Ne.lightmap,Ne.emissivemap,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.roughnessmap,Ne.metalnessmap,Ne.fog,Ne.lights,{emissive:{value:new Ze(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:St.meshphysical_vert,fragmentShader:St.meshphysical_frag},toon:{uniforms:ii([Ne.common,Ne.aomap,Ne.lightmap,Ne.emissivemap,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.gradientmap,Ne.fog,Ne.lights,{emissive:{value:new Ze(0)}}]),vertexShader:St.meshtoon_vert,fragmentShader:St.meshtoon_frag},matcap:{uniforms:ii([Ne.common,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.fog,{matcap:{value:null}}]),vertexShader:St.meshmatcap_vert,fragmentShader:St.meshmatcap_frag},points:{uniforms:ii([Ne.points,Ne.fog]),vertexShader:St.points_vert,fragmentShader:St.points_frag},dashed:{uniforms:ii([Ne.common,Ne.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:St.linedashed_vert,fragmentShader:St.linedashed_frag},depth:{uniforms:ii([Ne.common,Ne.displacementmap]),vertexShader:St.depth_vert,fragmentShader:St.depth_frag},normal:{uniforms:ii([Ne.common,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,{opacity:{value:1}}]),vertexShader:St.meshnormal_vert,fragmentShader:St.meshnormal_frag},sprite:{uniforms:ii([Ne.sprite,Ne.fog]),vertexShader:St.sprite_vert,fragmentShader:St.sprite_frag},background:{uniforms:{uvTransform:{value:new gt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:St.background_vert,fragmentShader:St.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new gt}},vertexShader:St.backgroundCube_vert,fragmentShader:St.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:St.cube_vert,fragmentShader:St.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:St.equirect_vert,fragmentShader:St.equirect_frag},distanceRGBA:{uniforms:ii([Ne.common,Ne.displacementmap,{referencePosition:{value:new P},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:St.distanceRGBA_vert,fragmentShader:St.distanceRGBA_frag},shadow:{uniforms:ii([Ne.lights,Ne.fog,{color:{value:new Ze(0)},opacity:{value:1}}]),vertexShader:St.shadow_vert,fragmentShader:St.shadow_frag}};fi.physical={uniforms:ii([fi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new gt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new gt},clearcoatNormalScale:{value:new oe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new gt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new gt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new gt},sheen:{value:0},sheenColor:{value:new Ze(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new gt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new gt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new gt},transmissionSamplerSize:{value:new oe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new gt},attenuationDistance:{value:0},attenuationColor:{value:new Ze(0)},specularColor:{value:new Ze(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new gt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new gt},anisotropyVector:{value:new oe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new gt}}]),vertexShader:St.meshphysical_vert,fragmentShader:St.meshphysical_frag};const Cu={r:0,b:0,g:0},to=new Ti,ww=new ht;function Rw(s,e,t,n,i,r,o){const a=new Ze(0);let c=r===!0?0:1,l,u,h=null,d=0,f=null;function p(y){let v=y.isScene===!0?y.background:null;return v&&v.isTexture&&(v=(y.backgroundBlurriness>0?t:e).get(v)),v}function x(y){let v=!1;const w=p(y);w===null?m(a,c):w&&w.isColor&&(m(w,1),v=!0);const S=s.xr.getEnvironmentBlendMode();S==="additive"?n.buffers.color.setClear(0,0,0,1,o):S==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(s.autoClear||v)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function g(y,v){const w=p(v);w&&(w.isCubeTexture||w.mapping===Eo)?(u===void 0&&(u=new Vn(new Do(1,1,1),new Zi({name:"BackgroundCubeMaterial",uniforms:tc(fi.backgroundCube.uniforms),vertexShader:fi.backgroundCube.vertexShader,fragmentShader:fi.backgroundCube.fragmentShader,side:Xt,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(S,E,C){this.matrixWorld.copyPosition(C.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),to.copy(v.backgroundRotation),to.x*=-1,to.y*=-1,to.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(to.y*=-1,to.z*=-1),u.material.uniforms.envMap.value=w,u.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=v.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,u.material.uniforms.backgroundRotation.value.setFromMatrix4(ww.makeRotationFromEuler(to)),u.material.toneMapped=et.getTransfer(w.colorSpace)!==Ue,(h!==w||d!==w.version||f!==s.toneMapping)&&(u.material.needsUpdate=!0,h=w,d=w.version,f=s.toneMapping),u.layers.enableAll(),y.unshift(u,u.geometry,u.material,0,0,null)):w&&w.isTexture&&(l===void 0&&(l=new Vn(new Vl(2,2),new Zi({name:"BackgroundMaterial",uniforms:tc(fi.background.uniforms),vertexShader:fi.background.vertexShader,fragmentShader:fi.background.fragmentShader,side:Ui,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=w,l.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,l.material.toneMapped=et.getTransfer(w.colorSpace)!==Ue,w.matrixAutoUpdate===!0&&w.updateMatrix(),l.material.uniforms.uvTransform.value.copy(w.matrix),(h!==w||d!==w.version||f!==s.toneMapping)&&(l.material.needsUpdate=!0,h=w,d=w.version,f=s.toneMapping),l.layers.enableAll(),y.unshift(l,l.geometry,l.material,0,0,null))}function m(y,v){y.getRGB(Cu,ty(s)),n.buffers.color.setClear(Cu.r,Cu.g,Cu.b,v,o)}function b(){u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0),l!==void 0&&(l.geometry.dispose(),l.material.dispose(),l=void 0)}return{getClearColor:function(){return a},setClearColor:function(y,v=1){a.set(y),c=v,m(a,c)},getClearAlpha:function(){return c},setClearAlpha:function(y){c=y,m(a,c)},render:x,addToRenderList:g,dispose:b}}function Nw(s,e){const t=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=d(null);let r=i,o=!1;function a(M,I,G,z,$){let Y=!1;const q=h(z,G,I);r!==q&&(r=q,l(r.object)),Y=f(M,z,G,$),Y&&p(M,z,G,$),$!==null&&e.update($,s.ELEMENT_ARRAY_BUFFER),(Y||o)&&(o=!1,v(M,I,G,z),$!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e.get($).buffer))}function c(){return s.createVertexArray()}function l(M){return s.bindVertexArray(M)}function u(M){return s.deleteVertexArray(M)}function h(M,I,G){const z=G.wireframe===!0;let $=n[M.id];$===void 0&&($={},n[M.id]=$);let Y=$[I.id];Y===void 0&&(Y={},$[I.id]=Y);let q=Y[z];return q===void 0&&(q=d(c()),Y[z]=q),q}function d(M){const I=[],G=[],z=[];for(let $=0;$<t;$++)I[$]=0,G[$]=0,z[$]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:I,enabledAttributes:G,attributeDivisors:z,object:M,attributes:{},index:null}}function f(M,I,G,z){const $=r.attributes,Y=I.attributes;let q=0;const he=G.getAttributes();for(const K in he)if(he[K].location>=0){const ye=$[K];let Ie=Y[K];if(Ie===void 0&&(K==="instanceMatrix"&&M.instanceMatrix&&(Ie=M.instanceMatrix),K==="instanceColor"&&M.instanceColor&&(Ie=M.instanceColor)),ye===void 0||ye.attribute!==Ie||Ie&&ye.data!==Ie.data)return!0;q++}return r.attributesNum!==q||r.index!==z}function p(M,I,G,z){const $={},Y=I.attributes;let q=0;const he=G.getAttributes();for(const K in he)if(he[K].location>=0){let ye=Y[K];ye===void 0&&(K==="instanceMatrix"&&M.instanceMatrix&&(ye=M.instanceMatrix),K==="instanceColor"&&M.instanceColor&&(ye=M.instanceColor));const Ie={};Ie.attribute=ye,ye&&ye.data&&(Ie.data=ye.data),$[K]=Ie,q++}r.attributes=$,r.attributesNum=q,r.index=z}function x(){const M=r.newAttributes;for(let I=0,G=M.length;I<G;I++)M[I]=0}function g(M){m(M,0)}function m(M,I){const G=r.newAttributes,z=r.enabledAttributes,$=r.attributeDivisors;G[M]=1,z[M]===0&&(s.enableVertexAttribArray(M),z[M]=1),$[M]!==I&&(s.vertexAttribDivisor(M,I),$[M]=I)}function b(){const M=r.newAttributes,I=r.enabledAttributes;for(let G=0,z=I.length;G<z;G++)I[G]!==M[G]&&(s.disableVertexAttribArray(G),I[G]=0)}function y(M,I,G,z,$,Y,q){q===!0?s.vertexAttribIPointer(M,I,G,$,Y):s.vertexAttribPointer(M,I,G,z,$,Y)}function v(M,I,G,z){x();const $=z.attributes,Y=G.getAttributes(),q=I.defaultAttributeValues;for(const he in Y){const K=Y[he];if(K.location>=0){let ue=$[he];if(ue===void 0&&(he==="instanceMatrix"&&M.instanceMatrix&&(ue=M.instanceMatrix),he==="instanceColor"&&M.instanceColor&&(ue=M.instanceColor)),ue!==void 0){const ye=ue.normalized,Ie=ue.itemSize,yt=e.get(ue);if(yt===void 0)continue;const pt=yt.buffer,Mt=yt.type,wt=yt.bytesPerElement,re=Mt===s.INT||Mt===s.UNSIGNED_INT||ue.gpuType===On;if(ue.isInterleavedBufferAttribute){const ce=ue.data,Fe=ce.stride,Je=ue.offset;if(ce.isInstancedInterleavedBuffer){for(let ze=0;ze<K.locationSize;ze++)m(K.location+ze,ce.meshPerAttribute);M.isInstancedMesh!==!0&&z._maxInstanceCount===void 0&&(z._maxInstanceCount=ce.meshPerAttribute*ce.count)}else for(let ze=0;ze<K.locationSize;ze++)g(K.location+ze);s.bindBuffer(s.ARRAY_BUFFER,pt);for(let ze=0;ze<K.locationSize;ze++)y(K.location+ze,Ie/K.locationSize,Mt,ye,Fe*wt,(Je+Ie/K.locationSize*ze)*wt,re)}else{if(ue.isInstancedBufferAttribute){for(let ce=0;ce<K.locationSize;ce++)m(K.location+ce,ue.meshPerAttribute);M.isInstancedMesh!==!0&&z._maxInstanceCount===void 0&&(z._maxInstanceCount=ue.meshPerAttribute*ue.count)}else for(let ce=0;ce<K.locationSize;ce++)g(K.location+ce);s.bindBuffer(s.ARRAY_BUFFER,pt);for(let ce=0;ce<K.locationSize;ce++)y(K.location+ce,Ie/K.locationSize,Mt,ye,Ie*wt,Ie/K.locationSize*ce*wt,re)}}else if(q!==void 0){const ye=q[he];if(ye!==void 0)switch(ye.length){case 2:s.vertexAttrib2fv(K.location,ye);break;case 3:s.vertexAttrib3fv(K.location,ye);break;case 4:s.vertexAttrib4fv(K.location,ye);break;default:s.vertexAttrib1fv(K.location,ye)}}}}b()}function w(){C();for(const M in n){const I=n[M];for(const G in I){const z=I[G];for(const $ in z)u(z[$].object),delete z[$];delete I[G]}delete n[M]}}function S(M){if(n[M.id]===void 0)return;const I=n[M.id];for(const G in I){const z=I[G];for(const $ in z)u(z[$].object),delete z[$];delete I[G]}delete n[M.id]}function E(M){for(const I in n){const G=n[I];if(G[M.id]===void 0)continue;const z=G[M.id];for(const $ in z)u(z[$].object),delete z[$];delete G[M.id]}}function C(){T(),o=!0,r!==i&&(r=i,l(r.object))}function T(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:a,reset:C,resetDefaultState:T,dispose:w,releaseStatesOfGeometry:S,releaseStatesOfProgram:E,initAttributes:x,enableAttribute:g,disableUnusedAttributes:b}}function Cw(s,e,t){let n;function i(l){n=l}function r(l,u){s.drawArrays(n,l,u),t.update(u,n,1)}function o(l,u,h){h!==0&&(s.drawArraysInstanced(n,l,u,h),t.update(u,n,h))}function a(l,u,h){if(h===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,l,0,u,0,h);let f=0;for(let p=0;p<h;p++)f+=u[p];t.update(f,n,1)}function c(l,u,h,d){if(h===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<l.length;p++)o(l[p],u[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(n,l,0,u,0,d,0,h);let p=0;for(let x=0;x<h;x++)p+=u[x]*d[x];t.update(p,n,1)}}this.setMode=i,this.render=r,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=c}function Pw(s,e,t,n){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const E=e.get("EXT_texture_filter_anisotropic");i=s.getParameter(E.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function o(E){return!(E!==_n&&n.convert(E)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(E){const C=E===hn&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(E!==un&&n.convert(E)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&E!==Sn&&!C)}function c(E){if(E==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";E="mediump"}return E==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let l=t.precision!==void 0?t.precision:"highp";const u=c(l);u!==l&&(te("WebGLRenderer:",l,"not supported, using",u,"instead."),l=u);const h=t.logarithmicDepthBuffer===!0,d=t.reversedDepthBuffer===!0&&e.has("EXT_clip_control"),f=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),p=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),x=s.getParameter(s.MAX_TEXTURE_SIZE),g=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),m=s.getParameter(s.MAX_VERTEX_ATTRIBS),b=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),y=s.getParameter(s.MAX_VARYING_VECTORS),v=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),w=p>0,S=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:c,textureFormatReadable:o,textureTypeReadable:a,precision:l,logarithmicDepthBuffer:h,reversedDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:x,maxCubemapSize:g,maxAttributes:m,maxVertexUniforms:b,maxVaryings:y,maxFragmentUniforms:v,vertexTextures:w,maxSamples:S}}function Lw(s){const e=this;let t=null,n=0,i=!1,r=!1;const o=new Rs,a=new gt,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d){const f=h.length!==0||d||n!==0||i;return i=d,n=h.length,f},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(h,d){t=u(h,d,0)},this.setState=function(h,d,f){const p=h.clippingPlanes,x=h.clipIntersection,g=h.clipShadows,m=s.get(h);if(!i||p===null||p.length===0||r&&!g)r?u(null):l();else{const b=r?0:n,y=b*4;let v=m.clippingState||null;c.value=v,v=u(p,d,y,f);for(let w=0;w!==y;++w)v[w]=t[w];m.clippingState=v,this.numIntersection=x?this.numPlanes:0,this.numPlanes+=b}};function l(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,d,f,p){const x=h!==null?h.length:0;let g=null;if(x!==0){if(g=c.value,p!==!0||g===null){const m=f+x*4,b=d.matrixWorldInverse;a.getNormalMatrix(b),(g===null||g.length<m)&&(g=new Float32Array(m));for(let y=0,v=f;y!==x;++y,v+=4)o.copy(h[y]).applyMatrix4(b,a),o.normal.toArray(g,v),g[v+3]=o.constant}c.value=g,c.needsUpdate=!0}return e.numPlanes=x,e.numIntersection=0,g}}function Dw(s){let e=new WeakMap;function t(o,a){return a===Na?o.mapping=Gs:a===Ca&&(o.mapping=zs),o}function n(o){if(o&&o.isTexture){const a=o.mapping;if(a===Na||a===Ca)if(e.has(o)){const c=e.get(o).texture;return t(c,o.mapping)}else{const c=o.image;if(c&&c.height>0){const l=new iy(c.height);return l.fromEquirectangularTexture(s,o),e.set(o,l),o.addEventListener("dispose",i),t(l.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const c=e.get(a);c!==void 0&&(e.delete(a),c.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}const Cr=4,I0=[.125,.215,.35,.446,.526,.582],uo=20,Uw=512,Ac=new Gl,F0=new Ze;let sf=null,rf=0,of=0,af=!1;const Iw=new P;let B0=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._backgroundBox=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._blurMaterial=null,this._ggxMaterial=null}fromScene(e,t=0,n=.1,i=100,r={}){const{size:o=256,position:a=Iw}=r;sf=this._renderer.getRenderTarget(),rf=this._renderer.getActiveCubeFace(),of=this._renderer.getActiveMipmapLevel(),af=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const c=this._allocateTargets();return c.depthBuffer=!0,this._sceneToCubeUV(e,n,i,c,a),t>0&&this._blur(c,0,0,t),this._applyPMREM(c),this._cleanup(c),c}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=G0(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=V0(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose(),this._backgroundBox!==null&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._ggxMaterial!==null&&this._ggxMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodMeshes.length;e++)this._lodMeshes[e].geometry.dispose()}_cleanup(e){this._renderer.setRenderTarget(sf,rf,of),this._renderer.xr.enabled=af,e.scissorTest=!1,ta(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Gs||e.mapping===zs?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),sf=this._renderer.getRenderTarget(),rf=this._renderer.getActiveCubeFace(),of=this._renderer.getActiveMipmapLevel(),af=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:ln,minFilter:ln,generateMipmaps:!1,type:hn,format:_n,colorSpace:Gr,depthBuffer:!1},i=O0(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=O0(e,t,n);const{_lodMax:r}=this;({lodMeshes:this._lodMeshes,sizeLods:this._sizeLods,sigmas:this._sigmas}=Fw(r)),this._blurMaterial=Ow(r,e,t)}return i}_compileMaterial(e){const t=new Vn(new bn,e);this._renderer.compile(t,Ac)}_sceneToCubeUV(e,t,n,i,r){const c=new Wn(90,1,t,n),l=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],h=this._renderer,d=h.autoClear,f=h.toneMapping;h.getClearColor(F0),h.toneMapping=oi,h.autoClear=!1,h.state.buffers.depth.getReversed()&&(h.setRenderTarget(i),h.clearDepth(),h.setRenderTarget(null)),this._backgroundBox===null&&(this._backgroundBox=new Vn(new Do,new sr({name:"PMREM.Background",side:Xt,depthWrite:!1,depthTest:!1})));const x=this._backgroundBox,g=x.material;let m=!1;const b=e.background;b?b.isColor&&(g.color.copy(b),e.background=null,m=!0):(g.color.copy(F0),m=!0);for(let y=0;y<6;y++){const v=y%3;v===0?(c.up.set(0,l[y],0),c.position.set(r.x,r.y,r.z),c.lookAt(r.x+u[y],r.y,r.z)):v===1?(c.up.set(0,0,l[y]),c.position.set(r.x,r.y,r.z),c.lookAt(r.x,r.y+u[y],r.z)):(c.up.set(0,l[y],0),c.position.set(r.x,r.y,r.z),c.lookAt(r.x,r.y,r.z+u[y]));const w=this._cubeSize;ta(i,v*w,y>2?w:0,w,w),h.setRenderTarget(i),m&&h.render(x,c),h.render(e,c)}h.toneMapping=f,h.autoClear=d,e.background=b}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Gs||e.mapping===zs;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=G0()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=V0());const r=i?this._cubemapMaterial:this._equirectMaterial,o=this._lodMeshes[0];o.material=r;const a=r.uniforms;a.envMap.value=e;const c=this._cubeSize;ta(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(o,Ac)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodMeshes.length;for(let r=1;r<i;r++)this._applyGGXFilter(e,r-1,r);t.autoClear=n}_applyGGXFilter(e,t,n){const i=this._renderer,r=this._pingPongRenderTarget;if(this._ggxMaterial===null){const b=3*Math.max(this._cubeSize,16),y=4*this._cubeSize;this._ggxMaterial=Bw(this._lodMax,b,y)}const o=this._ggxMaterial,a=this._lodMeshes[n];a.material=o;const c=o.uniforms,l=n/(this._lodMeshes.length-1),u=t/(this._lodMeshes.length-1),h=Math.sqrt(l*l-u*u),d=.05+l*.95,f=h*d,{_lodMax:p}=this,x=this._sizeLods[n],g=3*x*(n>p-Cr?n-p+Cr:0),m=4*(this._cubeSize-x);c.envMap.value=e.texture,c.roughness.value=f,c.mipInt.value=p-t,ta(r,g,m,3*x,2*x),i.setRenderTarget(r),i.render(a,Ac),c.envMap.value=r.texture,c.roughness.value=0,c.mipInt.value=p-n,ta(e,g,m,3*x,2*x),i.setRenderTarget(e),i.render(a,Ac)}_blur(e,t,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",r),this._halfBlur(o,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,o,a){const c=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&ge("blur direction must be either latitudinal or longitudinal!");const u=3,h=this._lodMeshes[i];h.material=l;const d=l.uniforms,f=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*uo-1),x=r/p,g=isFinite(r)?1+Math.floor(u*x):uo;g>uo&&te(`sigmaRadians, ${r}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${uo}`);const m=[];let b=0;for(let E=0;E<uo;++E){const C=E/x,T=Math.exp(-C*C/2);m.push(T),E===0?b+=T:E<g&&(b+=2*T)}for(let E=0;E<m.length;E++)m[E]=m[E]/b;d.envMap.value=e.texture,d.samples.value=g,d.weights.value=m,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:y}=this;d.dTheta.value=p,d.mipInt.value=y-n;const v=this._sizeLods[i],w=3*v*(i>y-Cr?i-y+Cr:0),S=4*(this._cubeSize-v);ta(t,w,S,3*v,2*v),c.setRenderTarget(t),c.render(h,Ac)}};function Fw(s){const e=[],t=[],n=[];let i=s;const r=s-Cr+1+I0.length;for(let o=0;o<r;o++){const a=Math.pow(2,i);e.push(a);let c=1/a;o>s-Cr?c=I0[o-s+Cr-1]:o===0&&(c=0),t.push(c);const l=1/(a-2),u=-l,h=1+l,d=[u,u,h,u,h,h,u,u,h,h,u,h],f=6,p=6,x=3,g=2,m=1,b=new Float32Array(x*p*f),y=new Float32Array(g*p*f),v=new Float32Array(m*p*f);for(let S=0;S<f;S++){const E=S%3*2/3-1,C=S>2?0:-1,T=[E,C,0,E+2/3,C,0,E+2/3,C+1,0,E,C,0,E+2/3,C+1,0,E,C+1,0];b.set(T,x*p*S),y.set(d,g*p*S);const M=[S,S,S,S,S,S];v.set(M,m*p*S)}const w=new bn;w.setAttribute("position",new yn(b,x)),w.setAttribute("uv",new yn(y,g)),w.setAttribute("faceIndex",new yn(v,m)),n.push(new Vn(w,null)),i>Cr&&i--}return{lodMeshes:n,sizeLods:e,sigmas:t}}function O0(s,e,t){const n=new zr(s,e,t);return n.texture.mapping=Eo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function ta(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function Bw(s,e,t){return new Zi({name:"PMREMGGXConvolution",defines:{GGX_SAMPLES:Uw,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},roughness:{value:0},mipInt:{value:0}},vertexShader:Xh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform float roughness;
			uniform float mipInt;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			#define PI 3.14159265359

			// Van der Corput radical inverse
			float radicalInverse_VdC(uint bits) {
				bits = (bits << 16u) | (bits >> 16u);
				bits = ((bits & 0x55555555u) << 1u) | ((bits & 0xAAAAAAAAu) >> 1u);
				bits = ((bits & 0x33333333u) << 2u) | ((bits & 0xCCCCCCCCu) >> 2u);
				bits = ((bits & 0x0F0F0F0Fu) << 4u) | ((bits & 0xF0F0F0F0u) >> 4u);
				bits = ((bits & 0x00FF00FFu) << 8u) | ((bits & 0xFF00FF00u) >> 8u);
				return float(bits) * 2.3283064365386963e-10; // / 0x100000000
			}

			// Hammersley sequence
			vec2 hammersley(uint i, uint N) {
				return vec2(float(i) / float(N), radicalInverse_VdC(i));
			}

			// GGX VNDF importance sampling (Eric Heitz 2018)
			// "Sampling the GGX Distribution of Visible Normals"
			// https://jcgt.org/published/0007/04/01/
			vec3 importanceSampleGGX_VNDF(vec2 Xi, vec3 V, float roughness) {
				float alpha = roughness * roughness;

				// Section 3.2: Transform view direction to hemisphere configuration
				vec3 Vh = normalize(vec3(alpha * V.x, alpha * V.y, V.z));

				// Section 4.1: Orthonormal basis
				float lensq = Vh.x * Vh.x + Vh.y * Vh.y;
				vec3 T1 = lensq > 0.0 ? vec3(-Vh.y, Vh.x, 0.0) / sqrt(lensq) : vec3(1.0, 0.0, 0.0);
				vec3 T2 = cross(Vh, T1);

				// Section 4.2: Parameterization of projected area
				float r = sqrt(Xi.x);
				float phi = 2.0 * PI * Xi.y;
				float t1 = r * cos(phi);
				float t2 = r * sin(phi);
				float s = 0.5 * (1.0 + Vh.z);
				t2 = (1.0 - s) * sqrt(1.0 - t1 * t1) + s * t2;

				// Section 4.3: Reprojection onto hemisphere
				vec3 Nh = t1 * T1 + t2 * T2 + sqrt(max(0.0, 1.0 - t1 * t1 - t2 * t2)) * Vh;

				// Section 3.4: Transform back to ellipsoid configuration
				return normalize(vec3(alpha * Nh.x, alpha * Nh.y, max(0.0, Nh.z)));
			}

			void main() {
				vec3 N = normalize(vOutputDirection);
				vec3 V = N; // Assume view direction equals normal for pre-filtering

				vec3 prefilteredColor = vec3(0.0);
				float totalWeight = 0.0;

				// For very low roughness, just sample the environment directly
				if (roughness < 0.001) {
					gl_FragColor = vec4(bilinearCubeUV(envMap, N, mipInt), 1.0);
					return;
				}

				// Tangent space basis for VNDF sampling
				vec3 up = abs(N.z) < 0.999 ? vec3(0.0, 0.0, 1.0) : vec3(1.0, 0.0, 0.0);
				vec3 tangent = normalize(cross(up, N));
				vec3 bitangent = cross(N, tangent);

				for(uint i = 0u; i < uint(GGX_SAMPLES); i++) {
					vec2 Xi = hammersley(i, uint(GGX_SAMPLES));

					// For PMREM, V = N, so in tangent space V is always (0, 0, 1)
					vec3 H_tangent = importanceSampleGGX_VNDF(Xi, vec3(0.0, 0.0, 1.0), roughness);

					// Transform H back to world space
					vec3 H = normalize(tangent * H_tangent.x + bitangent * H_tangent.y + N * H_tangent.z);
					vec3 L = normalize(2.0 * dot(V, H) * H - V);

					float NdotL = max(dot(N, L), 0.0);

					if(NdotL > 0.0) {
						// Sample environment at fixed mip level
						// VNDF importance sampling handles the distribution filtering
						vec3 sampleColor = bilinearCubeUV(envMap, L, mipInt);

						// Weight by NdotL for the split-sum approximation
						// VNDF PDF naturally accounts for the visible microfacet distribution
						prefilteredColor += sampleColor * NdotL;
						totalWeight += NdotL;
					}
				}

				if (totalWeight > 0.0) {
					prefilteredColor = prefilteredColor / totalWeight;
				}

				gl_FragColor = vec4(prefilteredColor, 1.0);
			}
		`,blending:ci,depthTest:!1,depthWrite:!1})}function Ow(s,e,t){const n=new Float32Array(uo),i=new P(0,1,0);return new Zi({name:"SphericalGaussianBlur",defines:{n:uo,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Xh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:ci,depthTest:!1,depthWrite:!1})}function V0(){return new Zi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Xh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:ci,depthTest:!1,depthWrite:!1})}function G0(){return new Zi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Xh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:ci,depthTest:!1,depthWrite:!1})}function Xh(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Vw(s){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const c=a.mapping,l=c===Na||c===Ca,u=c===Gs||c===zs;if(l||u){let h=e.get(a);const d=h!==void 0?h.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return t===null&&(t=new B0(s)),h=l?t.fromEquirectangular(a,h):t.fromCubemap(a,h),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),h.texture;if(h!==void 0)return h.texture;{const f=a.image;return l&&f&&f.height>0||u&&f&&i(f)?(t===null&&(t=new B0(s)),h=l?t.fromEquirectangular(a):t.fromCubemap(a),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),a.addEventListener("dispose",r),h.texture):null}}}return a}function i(a){let c=0;const l=6;for(let u=0;u<l;u++)a[u]!==void 0&&c++;return c===l}function r(a){const c=a.target;c.removeEventListener("dispose",r);const l=e.get(c);l!==void 0&&(e.delete(c),l.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function Gw(s){const e={};function t(n){if(e[n]!==void 0)return e[n];const i=s.getExtension(n);return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&Wt("WebGLRenderer: "+n+" extension not supported."),i}}}function zw(s,e,t,n){const i={},r=new WeakMap;function o(h){const d=h.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);d.removeEventListener("dispose",o),delete i[d.id];const f=r.get(d);f&&(e.remove(f),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(h,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,t.memory.geometries++),d}function c(h){const d=h.attributes;for(const f in d)e.update(d[f],s.ARRAY_BUFFER)}function l(h){const d=[],f=h.index,p=h.attributes.position;let x=0;if(f!==null){const b=f.array;x=f.version;for(let y=0,v=b.length;y<v;y+=3){const w=b[y+0],S=b[y+1],E=b[y+2];d.push(w,S,S,E,E,w)}}else if(p!==void 0){const b=p.array;x=p.version;for(let y=0,v=b.length/3-1;y<v;y+=3){const w=y+0,S=y+1,E=y+2;d.push(w,S,S,E,E,w)}}else return;const g=new(Yp(d)?em:Jp)(d,1);g.version=x;const m=r.get(h);m&&e.remove(m),r.set(h,g)}function u(h){const d=r.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&l(h)}else l(h);return r.get(h)}return{get:a,update:c,getWireframeAttribute:u}}function kw(s,e,t){let n;function i(d){n=d}let r,o;function a(d){r=d.type,o=d.bytesPerElement}function c(d,f){s.drawElements(n,f,r,d*o),t.update(f,n,1)}function l(d,f,p){p!==0&&(s.drawElementsInstanced(n,f,r,d*o,p),t.update(f,n,p))}function u(d,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,f,0,r,d,0,p);let g=0;for(let m=0;m<p;m++)g+=f[m];t.update(g,n,1)}function h(d,f,p,x){if(p===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let m=0;m<d.length;m++)l(d[m]/o,f[m],x[m]);else{g.multiDrawElementsInstancedWEBGL(n,f,0,r,d,0,x,0,p);let m=0;for(let b=0;b<p;b++)m+=f[b]*x[b];t.update(m,n,1)}}this.setMode=i,this.setIndex=a,this.render=c,this.renderInstances=l,this.renderMultiDraw=u,this.renderMultiDrawInstances=h}function Hw(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(t.calls++,o){case s.TRIANGLES:t.triangles+=a*(r/3);break;case s.LINES:t.lines+=a*(r/2);break;case s.LINE_STRIP:t.lines+=a*(r-1);break;case s.LINE_LOOP:t.lines+=a*r;break;case s.POINTS:t.points+=a*r;break;default:ge("WebGLInfo: Unknown draw mode:",o);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function Ww(s,e,t){const n=new WeakMap,i=new Ke;function r(o,a,c){const l=o.morphTargetInfluences,u=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,h=u!==void 0?u.length:0;let d=n.get(a);if(d===void 0||d.count!==h){let T=function(){E.dispose(),n.delete(a),a.removeEventListener("dispose",T)};d!==void 0&&d.texture.dispose();const f=a.morphAttributes.position!==void 0,p=a.morphAttributes.normal!==void 0,x=a.morphAttributes.color!==void 0,g=a.morphAttributes.position||[],m=a.morphAttributes.normal||[],b=a.morphAttributes.color||[];let y=0;f===!0&&(y=1),p===!0&&(y=2),x===!0&&(y=3);let v=a.attributes.position.count*y,w=1;v>e.maxTextureSize&&(w=Math.ceil(v/e.maxTextureSize),v=e.maxTextureSize);const S=new Float32Array(v*w*4*h),E=new Zp(S,v,w,h);E.type=Sn,E.needsUpdate=!0;const C=y*4;for(let M=0;M<h;M++){const I=g[M],G=m[M],z=b[M],$=v*w*4*M;for(let Y=0;Y<I.count;Y++){const q=Y*C;f===!0&&(i.fromBufferAttribute(I,Y),S[$+q+0]=i.x,S[$+q+1]=i.y,S[$+q+2]=i.z,S[$+q+3]=0),p===!0&&(i.fromBufferAttribute(G,Y),S[$+q+4]=i.x,S[$+q+5]=i.y,S[$+q+6]=i.z,S[$+q+7]=0),x===!0&&(i.fromBufferAttribute(z,Y),S[$+q+8]=i.x,S[$+q+9]=i.y,S[$+q+10]=i.z,S[$+q+11]=z.itemSize===4?i.w:1)}}d={count:h,texture:E,size:new oe(v,w)},n.set(a,d),a.addEventListener("dispose",T)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)c.getUniforms().setValue(s,"morphTexture",o.morphTexture,t);else{let f=0;for(let x=0;x<l.length;x++)f+=l[x];const p=a.morphTargetsRelative?1:1-f;c.getUniforms().setValue(s,"morphTargetBaseInfluence",p),c.getUniforms().setValue(s,"morphTargetInfluences",l)}c.getUniforms().setValue(s,"morphTargetsTexture",d.texture,t),c.getUniforms().setValue(s,"morphTargetsTextureSize",d.size)}return{update:r}}function $w(s,e,t,n){let i=new WeakMap;function r(c){const l=n.render.frame,u=c.geometry,h=e.get(c,u);if(i.get(h)!==l&&(e.update(h),i.set(h,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",a)===!1&&c.addEventListener("dispose",a),i.get(c)!==l&&(t.update(c.instanceMatrix,s.ARRAY_BUFFER),c.instanceColor!==null&&t.update(c.instanceColor,s.ARRAY_BUFFER),i.set(c,l))),c.isSkinnedMesh){const d=c.skeleton;i.get(d)!==l&&(d.update(),i.set(d,l))}return h}function o(){i=new WeakMap}function a(c){const l=c.target;l.removeEventListener("dispose",a),t.remove(l.instanceMatrix),l.instanceColor!==null&&t.remove(l.instanceColor)}return{update:r,dispose:o}}const by=new Rn,z0=new Vi(1,1),vy=new Zp,Sy=new g3,Ty=new Bl,k0=[],H0=[],W0=new Float32Array(16),$0=new Float32Array(9),X0=new Float32Array(4);function hc(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=k0[i];if(r===void 0&&(r=new Float32Array(i),k0[i]=r),e!==0){n.toArray(r,0);for(let o=1,a=0;o!==e;++o)a+=t,s[o].toArray(r,a)}return r}function Ln(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function Dn(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function qh(s,e){let t=H0[e];t===void 0&&(t=new Int32Array(e),H0[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function Xw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function qw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ln(t,e))return;s.uniform2fv(this.addr,e),Dn(t,e)}}function Yw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Ln(t,e))return;s.uniform3fv(this.addr,e),Dn(t,e)}}function jw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ln(t,e))return;s.uniform4fv(this.addr,e),Dn(t,e)}}function Kw(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Ln(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),Dn(t,e)}else{if(Ln(t,n))return;X0.set(n),s.uniformMatrix2fv(this.addr,!1,X0),Dn(t,n)}}function Zw(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Ln(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),Dn(t,e)}else{if(Ln(t,n))return;$0.set(n),s.uniformMatrix3fv(this.addr,!1,$0),Dn(t,n)}}function Qw(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Ln(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),Dn(t,e)}else{if(Ln(t,n))return;W0.set(n),s.uniformMatrix4fv(this.addr,!1,W0),Dn(t,n)}}function Jw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function eR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ln(t,e))return;s.uniform2iv(this.addr,e),Dn(t,e)}}function tR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Ln(t,e))return;s.uniform3iv(this.addr,e),Dn(t,e)}}function nR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ln(t,e))return;s.uniform4iv(this.addr,e),Dn(t,e)}}function iR(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function sR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ln(t,e))return;s.uniform2uiv(this.addr,e),Dn(t,e)}}function rR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Ln(t,e))return;s.uniform3uiv(this.addr,e),Dn(t,e)}}function oR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ln(t,e))return;s.uniform4uiv(this.addr,e),Dn(t,e)}}function aR(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let r;this.type===s.SAMPLER_2D_SHADOW?(z0.compareFunction=Hh,r=z0):r=by,t.setTexture2D(e||r,i)}function cR(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Sy,i)}function lR(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Ty,i)}function uR(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||vy,i)}function hR(s){switch(s){case 5126:return Xw;case 35664:return qw;case 35665:return Yw;case 35666:return jw;case 35674:return Kw;case 35675:return Zw;case 35676:return Qw;case 5124:case 35670:return Jw;case 35667:case 35671:return eR;case 35668:case 35672:return tR;case 35669:case 35673:return nR;case 5125:return iR;case 36294:return sR;case 36295:return rR;case 36296:return oR;case 35678:case 36198:case 36298:case 36306:case 35682:return aR;case 35679:case 36299:case 36307:return cR;case 35680:case 36300:case 36308:case 36293:return lR;case 36289:case 36303:case 36311:case 36292:return uR}}function dR(s,e){s.uniform1fv(this.addr,e)}function fR(s,e){const t=hc(e,this.size,2);s.uniform2fv(this.addr,t)}function pR(s,e){const t=hc(e,this.size,3);s.uniform3fv(this.addr,t)}function mR(s,e){const t=hc(e,this.size,4);s.uniform4fv(this.addr,t)}function gR(s,e){const t=hc(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function xR(s,e){const t=hc(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function _R(s,e){const t=hc(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function yR(s,e){s.uniform1iv(this.addr,e)}function bR(s,e){s.uniform2iv(this.addr,e)}function vR(s,e){s.uniform3iv(this.addr,e)}function SR(s,e){s.uniform4iv(this.addr,e)}function TR(s,e){s.uniform1uiv(this.addr,e)}function MR(s,e){s.uniform2uiv(this.addr,e)}function ER(s,e){s.uniform3uiv(this.addr,e)}function AR(s,e){s.uniform4uiv(this.addr,e)}function wR(s,e,t){const n=this.cache,i=e.length,r=qh(t,i);Ln(n,r)||(s.uniform1iv(this.addr,r),Dn(n,r));for(let o=0;o!==i;++o)t.setTexture2D(e[o]||by,r[o])}function RR(s,e,t){const n=this.cache,i=e.length,r=qh(t,i);Ln(n,r)||(s.uniform1iv(this.addr,r),Dn(n,r));for(let o=0;o!==i;++o)t.setTexture3D(e[o]||Sy,r[o])}function NR(s,e,t){const n=this.cache,i=e.length,r=qh(t,i);Ln(n,r)||(s.uniform1iv(this.addr,r),Dn(n,r));for(let o=0;o!==i;++o)t.setTextureCube(e[o]||Ty,r[o])}function CR(s,e,t){const n=this.cache,i=e.length,r=qh(t,i);Ln(n,r)||(s.uniform1iv(this.addr,r),Dn(n,r));for(let o=0;o!==i;++o)t.setTexture2DArray(e[o]||vy,r[o])}function PR(s){switch(s){case 5126:return dR;case 35664:return fR;case 35665:return pR;case 35666:return mR;case 35674:return gR;case 35675:return xR;case 35676:return _R;case 5124:case 35670:return yR;case 35667:case 35671:return bR;case 35668:case 35672:return vR;case 35669:case 35673:return SR;case 5125:return TR;case 36294:return MR;case 36295:return ER;case 36296:return AR;case 35678:case 36198:case 36298:case 36306:case 35682:return wR;case 35679:case 36299:case 36307:return RR;case 35680:case 36300:case 36308:case 36293:return NR;case 36289:case 36303:case 36311:case 36292:return CR}}class LR{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=hR(t.type)}}class DR{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=PR(t.type)}}class UR{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const a=i[r];a.setValue(e,t[a.id],n)}}}const cf=/(\w+)(\])?(\[|\.)?/g;function q0(s,e){s.seq.push(e),s.map[e.id]=e}function IR(s,e,t){const n=s.name,i=n.length;for(cf.lastIndex=0;;){const r=cf.exec(n),o=cf.lastIndex;let a=r[1];const c=r[2]==="]",l=r[3];if(c&&(a=a|0),l===void 0||l==="["&&o+2===i){q0(t,l===void 0?new LR(a,s,e):new DR(a,s,e));break}else{let h=t.map[a];h===void 0&&(h=new UR(a),q0(t,h)),t=h}}}class lh{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),o=e.getUniformLocation(t,r.name);IR(r,o,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,o=t.length;r!==o;++r){const a=t[r],c=n[a.id];c.needsUpdate!==!1&&a.setValue(e,c.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const o=e[i];o.id in t&&n.push(o)}return n}}function Y0(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}const FR=37297;let BR=0;function OR(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=i;o<r;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}const j0=new gt;function VR(s){et._getMatrix(j0,et.workingColorSpace,s);const e=`mat3( ${j0.elements.map(t=>t.toFixed(4))} )`;switch(et.getTransfer(s)){case Ja:return[e,"LinearTransferOETF"];case Ue:return[e,"sRGBTransferOETF"];default:return te("WebGLProgram: Unsupported color space: ",s),[e,"LinearTransferOETF"]}}function K0(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),r=(s.getShaderInfoLog(e)||"").trim();if(n&&r==="")return"";const o=/ERROR: 0:(\d+)/.exec(r);if(o){const a=parseInt(o[1]);return t.toUpperCase()+`

`+r+`

`+OR(s.getShaderSource(e),a)}else return r}function GR(s,e){const t=VR(e);return[`vec4 ${s}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function zR(s,e){let t;switch(e){case $_:t="Linear";break;case X_:t="Reinhard";break;case q_:t="Cineon";break;case Y_:t="ACESFilmic";break;case j_:t="AgX";break;case K_:t="Neutral";break;case RM:t="Custom";break;default:te("WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const Pu=new P;function kR(){et.getLuminanceCoefficients(Pu);const s=Pu.x.toFixed(4),e=Pu.y.toFixed(4),t=Pu.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function HR(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Wc).join(`
`)}function WR(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function $R(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),o=r.name;let a=1;r.type===s.FLOAT_MAT2&&(a=2),r.type===s.FLOAT_MAT3&&(a=3),r.type===s.FLOAT_MAT4&&(a=4),t[o]={type:r.type,location:s.getAttribLocation(e,o),locationSize:a}}return t}function Wc(s){return s!==""}function Z0(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Q0(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const XR=/^[ \t]*#include +<([\w\d./]+)>/gm;function ip(s){return s.replace(XR,YR)}const qR=new Map;function YR(s,e){let t=St[e];if(t===void 0){const n=qR.get(e);if(n!==void 0)t=St[n],te('WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return ip(t)}const jR=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function J0(s){return s.replace(jR,KR)}function KR(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function ex(s){let e=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function ZR(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===Rp?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===TM?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Li&&(e="SHADOWMAP_TYPE_VSM"),e}function QR(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Gs:case zs:e="ENVMAP_TYPE_CUBE";break;case Eo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function JR(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case zs:e="ENVMAP_MODE_REFRACTION";break}return e}function eN(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case Dl:e="ENVMAP_BLENDING_MULTIPLY";break;case H_:e="ENVMAP_BLENDING_MIX";break;case W_:e="ENVMAP_BLENDING_ADD";break}return e}function tN(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:n,maxMip:t}}function nN(s,e,t,n){const i=s.getContext(),r=t.defines;let o=t.vertexShader,a=t.fragmentShader;const c=ZR(t),l=QR(t),u=JR(t),h=eN(t),d=tN(t),f=HR(t),p=WR(r),x=i.createProgram();let g,m,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Wc).join(`
`),g.length>0&&(g+=`
`),m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Wc).join(`
`),m.length>0&&(m+=`
`)):(g=[ex(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",t.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Wc).join(`
`),m=[ex(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",t.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==oi?"#define TONE_MAPPING":"",t.toneMapping!==oi?St.tonemapping_pars_fragment:"",t.toneMapping!==oi?zR("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",St.colorspace_pars_fragment,GR("linearToOutputTexel",t.outputColorSpace),kR(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Wc).join(`
`)),o=ip(o),o=Z0(o,t),o=Q0(o,t),a=ip(a),a=Z0(a,t),a=Q0(a,t),o=J0(o),a=J0(a),t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,g=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,m=["#define varying in",t.glslVersion===Qg?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Qg?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+m);const y=b+g+o,v=b+m+a,w=Y0(i,i.VERTEX_SHADER,y),S=Y0(i,i.FRAGMENT_SHADER,v);i.attachShader(x,w),i.attachShader(x,S),t.index0AttributeName!==void 0?i.bindAttribLocation(x,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(x,0,"position"),i.linkProgram(x);function E(I){if(s.debug.checkShaderErrors){const G=i.getProgramInfoLog(x)||"",z=i.getShaderInfoLog(w)||"",$=i.getShaderInfoLog(S)||"",Y=G.trim(),q=z.trim(),he=$.trim();let K=!0,ue=!0;if(i.getProgramParameter(x,i.LINK_STATUS)===!1)if(K=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,x,w,S);else{const ye=K0(i,w,"vertex"),Ie=K0(i,S,"fragment");ge("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(x,i.VALIDATE_STATUS)+`

Material Name: `+I.name+`
Material Type: `+I.type+`

Program Info Log: `+Y+`
`+ye+`
`+Ie)}else Y!==""?te("WebGLProgram: Program Info Log:",Y):(q===""||he==="")&&(ue=!1);ue&&(I.diagnostics={runnable:K,programLog:Y,vertexShader:{log:q,prefix:g},fragmentShader:{log:he,prefix:m}})}i.deleteShader(w),i.deleteShader(S),C=new lh(i,x),T=$R(i,x)}let C;this.getUniforms=function(){return C===void 0&&E(this),C};let T;this.getAttributes=function(){return T===void 0&&E(this),T};let M=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return M===!1&&(M=i.getProgramParameter(x,FR)),M},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(x),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=BR++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=w,this.fragmentShader=S,this}let iN=0;class sN{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new rN(e),t.set(e,n)),n}}class rN{constructor(e){this.id=iN++,this.code=e,this.usedTimes=0}}function oN(s,e,t,n,i,r,o){const a=new Qp,c=new sN,l=new Set,u=[],h=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function x(T){return l.add(T),T===0?"uv":`uv${T}`}function g(T,M,I,G,z){const $=G.fog,Y=z.geometry,q=T.isMeshStandardMaterial?G.environment:null,he=(T.isMeshStandardMaterial?t:e).get(T.envMap||q),K=he&&he.mapping===Eo?he.image.height:null,ue=p[T.type];T.precision!==null&&(f=i.getMaxPrecision(T.precision),f!==T.precision&&te("WebGLProgram.getParameters:",T.precision,"not supported, using",f,"instead."));const ye=Y.morphAttributes.position||Y.morphAttributes.normal||Y.morphAttributes.color,Ie=ye!==void 0?ye.length:0;let yt=0;Y.morphAttributes.position!==void 0&&(yt=1),Y.morphAttributes.normal!==void 0&&(yt=2),Y.morphAttributes.color!==void 0&&(yt=3);let pt,Mt,wt,re;if(ue){const zt=fi[ue];pt=zt.vertexShader,Mt=zt.fragmentShader}else pt=T.vertexShader,Mt=T.fragmentShader,c.update(T),wt=c.getVertexShaderID(T),re=c.getFragmentShaderID(T);const ce=s.getRenderTarget(),Fe=s.state.buffers.depth.getReversed(),Je=z.isInstancedMesh===!0,ze=z.isBatchedMesh===!0,bt=!!T.map,qt=!!T.matcap,dt=!!he,fe=!!T.aoMap,D=!!T.lightMap,de=!!T.bumpMap,ve=!!T.normalMap,Ee=!!T.displacementMap,_e=!!T.emissiveMap,We=!!T.metalnessMap,Ce=!!T.roughnessMap,Ve=T.anisotropy>0,L=T.clearcoat>0,A=T.dispersion>0,X=T.iridescence>0,se=T.sheen>0,le=T.transmission>0,ne=Ve&&!!T.anisotropyMap,Qe=L&&!!T.clearcoatMap,Pe=L&&!!T.clearcoatNormalMap,tt=L&&!!T.clearcoatRoughnessMap,Ye=X&&!!T.iridescenceMap,pe=X&&!!T.iridescenceThicknessMap,Ae=se&&!!T.sheenColorMap,lt=se&&!!T.sheenRoughnessMap,ot=!!T.specularMap,Oe=!!T.specularColorMap,mt=!!T.specularIntensityMap,V=le&&!!T.transmissionMap,Le=le&&!!T.thicknessMap,we=!!T.gradientMap,Re=!!T.alphaMap,be=T.alphaTest>0,ae=!!T.alphaHash,Xe=!!T.extensions;let _t=oi;T.toneMapped&&(ce===null||ce.isXRRenderTarget===!0)&&(_t=s.toneMapping);const en={shaderID:ue,shaderType:T.type,shaderName:T.name,vertexShader:pt,fragmentShader:Mt,defines:T.defines,customVertexShaderID:wt,customFragmentShaderID:re,isRawShaderMaterial:T.isRawShaderMaterial===!0,glslVersion:T.glslVersion,precision:f,batching:ze,batchingColor:ze&&z._colorsTexture!==null,instancing:Je,instancingColor:Je&&z.instanceColor!==null,instancingMorph:Je&&z.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:ce===null?s.outputColorSpace:ce.isXRRenderTarget===!0?ce.texture.colorSpace:Gr,alphaToCoverage:!!T.alphaToCoverage,map:bt,matcap:qt,envMap:dt,envMapMode:dt&&he.mapping,envMapCubeUVHeight:K,aoMap:fe,lightMap:D,bumpMap:de,normalMap:ve,displacementMap:d&&Ee,emissiveMap:_e,normalMapObjectSpace:ve&&T.normalMapType===Z_,normalMapTangentSpace:ve&&T.normalMapType===dr,metalnessMap:We,roughnessMap:Ce,anisotropy:Ve,anisotropyMap:ne,clearcoat:L,clearcoatMap:Qe,clearcoatNormalMap:Pe,clearcoatRoughnessMap:tt,dispersion:A,iridescence:X,iridescenceMap:Ye,iridescenceThicknessMap:pe,sheen:se,sheenColorMap:Ae,sheenRoughnessMap:lt,specularMap:ot,specularColorMap:Oe,specularIntensityMap:mt,transmission:le,transmissionMap:V,thicknessMap:Le,gradientMap:we,opaque:T.transparent===!1&&T.blending===Ii&&T.alphaToCoverage===!1,alphaMap:Re,alphaTest:be,alphaHash:ae,combine:T.combine,mapUv:bt&&x(T.map.channel),aoMapUv:fe&&x(T.aoMap.channel),lightMapUv:D&&x(T.lightMap.channel),bumpMapUv:de&&x(T.bumpMap.channel),normalMapUv:ve&&x(T.normalMap.channel),displacementMapUv:Ee&&x(T.displacementMap.channel),emissiveMapUv:_e&&x(T.emissiveMap.channel),metalnessMapUv:We&&x(T.metalnessMap.channel),roughnessMapUv:Ce&&x(T.roughnessMap.channel),anisotropyMapUv:ne&&x(T.anisotropyMap.channel),clearcoatMapUv:Qe&&x(T.clearcoatMap.channel),clearcoatNormalMapUv:Pe&&x(T.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:tt&&x(T.clearcoatRoughnessMap.channel),iridescenceMapUv:Ye&&x(T.iridescenceMap.channel),iridescenceThicknessMapUv:pe&&x(T.iridescenceThicknessMap.channel),sheenColorMapUv:Ae&&x(T.sheenColorMap.channel),sheenRoughnessMapUv:lt&&x(T.sheenRoughnessMap.channel),specularMapUv:ot&&x(T.specularMap.channel),specularColorMapUv:Oe&&x(T.specularColorMap.channel),specularIntensityMapUv:mt&&x(T.specularIntensityMap.channel),transmissionMapUv:V&&x(T.transmissionMap.channel),thicknessMapUv:Le&&x(T.thicknessMap.channel),alphaMapUv:Re&&x(T.alphaMap.channel),vertexTangents:!!Y.attributes.tangent&&(ve||Ve),vertexColors:T.vertexColors,vertexAlphas:T.vertexColors===!0&&!!Y.attributes.color&&Y.attributes.color.itemSize===4,pointsUvs:z.isPoints===!0&&!!Y.attributes.uv&&(bt||Re),fog:!!$,useFog:T.fog===!0,fogExp2:!!$&&$.isFogExp2,flatShading:T.flatShading===!0&&T.wireframe===!1,sizeAttenuation:T.sizeAttenuation===!0,logarithmicDepthBuffer:h,reversedDepthBuffer:Fe,skinning:z.isSkinnedMesh===!0,morphTargets:Y.morphAttributes.position!==void 0,morphNormals:Y.morphAttributes.normal!==void 0,morphColors:Y.morphAttributes.color!==void 0,morphTargetsCount:Ie,morphTextureStride:yt,numDirLights:M.directional.length,numPointLights:M.point.length,numSpotLights:M.spot.length,numSpotLightMaps:M.spotLightMap.length,numRectAreaLights:M.rectArea.length,numHemiLights:M.hemi.length,numDirLightShadows:M.directionalShadowMap.length,numPointLightShadows:M.pointShadowMap.length,numSpotLightShadows:M.spotShadowMap.length,numSpotLightShadowsWithMaps:M.numSpotLightShadowsWithMaps,numLightProbes:M.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:T.dithering,shadowMapEnabled:s.shadowMap.enabled&&I.length>0,shadowMapType:s.shadowMap.type,toneMapping:_t,decodeVideoTexture:bt&&T.map.isVideoTexture===!0&&et.getTransfer(T.map.colorSpace)===Ue,decodeVideoTextureEmissive:_e&&T.emissiveMap.isVideoTexture===!0&&et.getTransfer(T.emissiveMap.colorSpace)===Ue,premultipliedAlpha:T.premultipliedAlpha,doubleSided:T.side===jn,flipSided:T.side===Xt,useDepthPacking:T.depthPacking>=0,depthPacking:T.depthPacking||0,index0AttributeName:T.index0AttributeName,extensionClipCullDistance:Xe&&T.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Xe&&T.extensions.multiDraw===!0||ze)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:T.customProgramCacheKey()};return en.vertexUv1s=l.has(1),en.vertexUv2s=l.has(2),en.vertexUv3s=l.has(3),l.clear(),en}function m(T){const M=[];if(T.shaderID?M.push(T.shaderID):(M.push(T.customVertexShaderID),M.push(T.customFragmentShaderID)),T.defines!==void 0)for(const I in T.defines)M.push(I),M.push(T.defines[I]);return T.isRawShaderMaterial===!1&&(b(M,T),y(M,T),M.push(s.outputColorSpace)),M.push(T.customProgramCacheKey),M.join()}function b(T,M){T.push(M.precision),T.push(M.outputColorSpace),T.push(M.envMapMode),T.push(M.envMapCubeUVHeight),T.push(M.mapUv),T.push(M.alphaMapUv),T.push(M.lightMapUv),T.push(M.aoMapUv),T.push(M.bumpMapUv),T.push(M.normalMapUv),T.push(M.displacementMapUv),T.push(M.emissiveMapUv),T.push(M.metalnessMapUv),T.push(M.roughnessMapUv),T.push(M.anisotropyMapUv),T.push(M.clearcoatMapUv),T.push(M.clearcoatNormalMapUv),T.push(M.clearcoatRoughnessMapUv),T.push(M.iridescenceMapUv),T.push(M.iridescenceThicknessMapUv),T.push(M.sheenColorMapUv),T.push(M.sheenRoughnessMapUv),T.push(M.specularMapUv),T.push(M.specularColorMapUv),T.push(M.specularIntensityMapUv),T.push(M.transmissionMapUv),T.push(M.thicknessMapUv),T.push(M.combine),T.push(M.fogExp2),T.push(M.sizeAttenuation),T.push(M.morphTargetsCount),T.push(M.morphAttributeCount),T.push(M.numDirLights),T.push(M.numPointLights),T.push(M.numSpotLights),T.push(M.numSpotLightMaps),T.push(M.numHemiLights),T.push(M.numRectAreaLights),T.push(M.numDirLightShadows),T.push(M.numPointLightShadows),T.push(M.numSpotLightShadows),T.push(M.numSpotLightShadowsWithMaps),T.push(M.numLightProbes),T.push(M.shadowMapType),T.push(M.toneMapping),T.push(M.numClippingPlanes),T.push(M.numClipIntersection),T.push(M.depthPacking)}function y(T,M){a.disableAll(),M.supportsVertexTextures&&a.enable(0),M.instancing&&a.enable(1),M.instancingColor&&a.enable(2),M.instancingMorph&&a.enable(3),M.matcap&&a.enable(4),M.envMap&&a.enable(5),M.normalMapObjectSpace&&a.enable(6),M.normalMapTangentSpace&&a.enable(7),M.clearcoat&&a.enable(8),M.iridescence&&a.enable(9),M.alphaTest&&a.enable(10),M.vertexColors&&a.enable(11),M.vertexAlphas&&a.enable(12),M.vertexUv1s&&a.enable(13),M.vertexUv2s&&a.enable(14),M.vertexUv3s&&a.enable(15),M.vertexTangents&&a.enable(16),M.anisotropy&&a.enable(17),M.alphaHash&&a.enable(18),M.batching&&a.enable(19),M.dispersion&&a.enable(20),M.batchingColor&&a.enable(21),M.gradientMap&&a.enable(22),T.push(a.mask),a.disableAll(),M.fog&&a.enable(0),M.useFog&&a.enable(1),M.flatShading&&a.enable(2),M.logarithmicDepthBuffer&&a.enable(3),M.reversedDepthBuffer&&a.enable(4),M.skinning&&a.enable(5),M.morphTargets&&a.enable(6),M.morphNormals&&a.enable(7),M.morphColors&&a.enable(8),M.premultipliedAlpha&&a.enable(9),M.shadowMapEnabled&&a.enable(10),M.doubleSided&&a.enable(11),M.flipSided&&a.enable(12),M.useDepthPacking&&a.enable(13),M.dithering&&a.enable(14),M.transmission&&a.enable(15),M.sheen&&a.enable(16),M.opaque&&a.enable(17),M.pointsUvs&&a.enable(18),M.decodeVideoTexture&&a.enable(19),M.decodeVideoTextureEmissive&&a.enable(20),M.alphaToCoverage&&a.enable(21),T.push(a.mask)}function v(T){const M=p[T.type];let I;if(M){const G=fi[M];I=Wh.clone(G.uniforms)}else I=T.uniforms;return I}function w(T,M){let I;for(let G=0,z=u.length;G<z;G++){const $=u[G];if($.cacheKey===M){I=$,++I.usedTimes;break}}return I===void 0&&(I=new nN(s,M,T,r),u.push(I)),I}function S(T){if(--T.usedTimes===0){const M=u.indexOf(T);u[M]=u[u.length-1],u.pop(),T.destroy()}}function E(T){c.remove(T)}function C(){c.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:v,acquireProgram:w,releaseProgram:S,releaseShaderCache:E,programs:u,dispose:C}}function aN(){let s=new WeakMap;function e(o){return s.has(o)}function t(o){let a=s.get(o);return a===void 0&&(a={},s.set(o,a)),a}function n(o){s.delete(o)}function i(o,a,c){s.get(o)[a]=c}function r(){s=new WeakMap}return{has:e,get:t,remove:n,update:i,dispose:r}}function cN(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function tx(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function nx(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function o(h,d,f,p,x,g){let m=s[e];return m===void 0?(m={id:h.id,object:h,geometry:d,material:f,groupOrder:p,renderOrder:h.renderOrder,z:x,group:g},s[e]=m):(m.id=h.id,m.object=h,m.geometry=d,m.material=f,m.groupOrder=p,m.renderOrder=h.renderOrder,m.z=x,m.group=g),e++,m}function a(h,d,f,p,x,g){const m=o(h,d,f,p,x,g);f.transmission>0?n.push(m):f.transparent===!0?i.push(m):t.push(m)}function c(h,d,f,p,x,g){const m=o(h,d,f,p,x,g);f.transmission>0?n.unshift(m):f.transparent===!0?i.unshift(m):t.unshift(m)}function l(h,d){t.length>1&&t.sort(h||cN),n.length>1&&n.sort(d||tx),i.length>1&&i.sort(d||tx)}function u(){for(let h=e,d=s.length;h<d;h++){const f=s[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:a,unshift:c,finish:u,sort:l}}function lN(){let s=new WeakMap;function e(n,i){const r=s.get(n);let o;return r===void 0?(o=new nx,s.set(n,[o])):i>=r.length?(o=new nx,r.push(o)):o=r[i],o}function t(){s=new WeakMap}return{get:e,dispose:t}}function uN(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new P,color:new Ze};break;case"SpotLight":t={position:new P,direction:new P,color:new Ze,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new P,color:new Ze,distance:0,decay:0};break;case"HemisphereLight":t={direction:new P,skyColor:new Ze,groundColor:new Ze};break;case"RectAreaLight":t={color:new Ze,position:new P,halfWidth:new P,halfHeight:new P};break}return s[e.id]=t,t}}}function hN(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new oe};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new oe};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new oe,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let dN=0;function fN(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function pN(s){const e=new uN,t=hN(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let l=0;l<9;l++)n.probe.push(new P);const i=new P,r=new ht,o=new ht;function a(l){let u=0,h=0,d=0;for(let T=0;T<9;T++)n.probe[T].set(0,0,0);let f=0,p=0,x=0,g=0,m=0,b=0,y=0,v=0,w=0,S=0,E=0;l.sort(fN);for(let T=0,M=l.length;T<M;T++){const I=l[T],G=I.color,z=I.intensity,$=I.distance,Y=I.shadow&&I.shadow.map?I.shadow.map.texture:null;if(I.isAmbientLight)u+=G.r*z,h+=G.g*z,d+=G.b*z;else if(I.isLightProbe){for(let q=0;q<9;q++)n.probe[q].addScaledVector(I.sh.coefficients[q],z);E++}else if(I.isDirectionalLight){const q=e.get(I);if(q.color.copy(I.color).multiplyScalar(I.intensity),I.castShadow){const he=I.shadow,K=t.get(I);K.shadowIntensity=he.intensity,K.shadowBias=he.bias,K.shadowNormalBias=he.normalBias,K.shadowRadius=he.radius,K.shadowMapSize=he.mapSize,n.directionalShadow[f]=K,n.directionalShadowMap[f]=Y,n.directionalShadowMatrix[f]=I.shadow.matrix,b++}n.directional[f]=q,f++}else if(I.isSpotLight){const q=e.get(I);q.position.setFromMatrixPosition(I.matrixWorld),q.color.copy(G).multiplyScalar(z),q.distance=$,q.coneCos=Math.cos(I.angle),q.penumbraCos=Math.cos(I.angle*(1-I.penumbra)),q.decay=I.decay,n.spot[x]=q;const he=I.shadow;if(I.map&&(n.spotLightMap[w]=I.map,w++,he.updateMatrices(I),I.castShadow&&S++),n.spotLightMatrix[x]=he.matrix,I.castShadow){const K=t.get(I);K.shadowIntensity=he.intensity,K.shadowBias=he.bias,K.shadowNormalBias=he.normalBias,K.shadowRadius=he.radius,K.shadowMapSize=he.mapSize,n.spotShadow[x]=K,n.spotShadowMap[x]=Y,v++}x++}else if(I.isRectAreaLight){const q=e.get(I);q.color.copy(G).multiplyScalar(z),q.halfWidth.set(I.width*.5,0,0),q.halfHeight.set(0,I.height*.5,0),n.rectArea[g]=q,g++}else if(I.isPointLight){const q=e.get(I);if(q.color.copy(I.color).multiplyScalar(I.intensity),q.distance=I.distance,q.decay=I.decay,I.castShadow){const he=I.shadow,K=t.get(I);K.shadowIntensity=he.intensity,K.shadowBias=he.bias,K.shadowNormalBias=he.normalBias,K.shadowRadius=he.radius,K.shadowMapSize=he.mapSize,K.shadowCameraNear=he.camera.near,K.shadowCameraFar=he.camera.far,n.pointShadow[p]=K,n.pointShadowMap[p]=Y,n.pointShadowMatrix[p]=I.shadow.matrix,y++}n.point[p]=q,p++}else if(I.isHemisphereLight){const q=e.get(I);q.skyColor.copy(I.color).multiplyScalar(z),q.groundColor.copy(I.groundColor).multiplyScalar(z),n.hemi[m]=q,m++}}g>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ne.LTC_FLOAT_1,n.rectAreaLTC2=Ne.LTC_FLOAT_2):(n.rectAreaLTC1=Ne.LTC_HALF_1,n.rectAreaLTC2=Ne.LTC_HALF_2)),n.ambient[0]=u,n.ambient[1]=h,n.ambient[2]=d;const C=n.hash;(C.directionalLength!==f||C.pointLength!==p||C.spotLength!==x||C.rectAreaLength!==g||C.hemiLength!==m||C.numDirectionalShadows!==b||C.numPointShadows!==y||C.numSpotShadows!==v||C.numSpotMaps!==w||C.numLightProbes!==E)&&(n.directional.length=f,n.spot.length=x,n.rectArea.length=g,n.point.length=p,n.hemi.length=m,n.directionalShadow.length=b,n.directionalShadowMap.length=b,n.pointShadow.length=y,n.pointShadowMap.length=y,n.spotShadow.length=v,n.spotShadowMap.length=v,n.directionalShadowMatrix.length=b,n.pointShadowMatrix.length=y,n.spotLightMatrix.length=v+w-S,n.spotLightMap.length=w,n.numSpotLightShadowsWithMaps=S,n.numLightProbes=E,C.directionalLength=f,C.pointLength=p,C.spotLength=x,C.rectAreaLength=g,C.hemiLength=m,C.numDirectionalShadows=b,C.numPointShadows=y,C.numSpotShadows=v,C.numSpotMaps=w,C.numLightProbes=E,n.version=dN++)}function c(l,u){let h=0,d=0,f=0,p=0,x=0;const g=u.matrixWorldInverse;for(let m=0,b=l.length;m<b;m++){const y=l[m];if(y.isDirectionalLight){const v=n.directional[h];v.direction.setFromMatrixPosition(y.matrixWorld),i.setFromMatrixPosition(y.target.matrixWorld),v.direction.sub(i),v.direction.transformDirection(g),h++}else if(y.isSpotLight){const v=n.spot[f];v.position.setFromMatrixPosition(y.matrixWorld),v.position.applyMatrix4(g),v.direction.setFromMatrixPosition(y.matrixWorld),i.setFromMatrixPosition(y.target.matrixWorld),v.direction.sub(i),v.direction.transformDirection(g),f++}else if(y.isRectAreaLight){const v=n.rectArea[p];v.position.setFromMatrixPosition(y.matrixWorld),v.position.applyMatrix4(g),o.identity(),r.copy(y.matrixWorld),r.premultiply(g),o.extractRotation(r),v.halfWidth.set(y.width*.5,0,0),v.halfHeight.set(0,y.height*.5,0),v.halfWidth.applyMatrix4(o),v.halfHeight.applyMatrix4(o),p++}else if(y.isPointLight){const v=n.point[d];v.position.setFromMatrixPosition(y.matrixWorld),v.position.applyMatrix4(g),d++}else if(y.isHemisphereLight){const v=n.hemi[x];v.direction.setFromMatrixPosition(y.matrixWorld),v.direction.transformDirection(g),x++}}}return{setup:a,setupView:c,state:n}}function ix(s){const e=new pN(s),t=[],n=[];function i(u){l.camera=u,t.length=0,n.length=0}function r(u){t.push(u)}function o(u){n.push(u)}function a(){e.setup(t)}function c(u){e.setupView(t,u)}const l={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:l,setupLights:a,setupLightsView:c,pushLight:r,pushShadow:o}}function mN(s){let e=new WeakMap;function t(i,r=0){const o=e.get(i);let a;return o===void 0?(a=new ix(s),e.set(i,[a])):r>=o.length?(a=new ix(s),o.push(a)):a=o[r],a}function n(){e=new WeakMap}return{get:t,dispose:n}}const gN=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,xN=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function _N(s,e,t){let n=new Ol;const i=new oe,r=new oe,o=new Ke,a=new TE({depthPacking:UM}),c=new ME,l={},u=t.maxTextureSize,h={[Ui]:Xt,[Xt]:Ui,[jn]:jn},d=new Zi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new oe},radius:{value:4}},vertexShader:gN,fragmentShader:xN}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new bn;p.setAttribute("position",new yn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new Vn(p,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Rp;let m=this.type;this.render=function(S,E,C){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||S.length===0)return;const T=s.getRenderTarget(),M=s.getActiveCubeFace(),I=s.getActiveMipmapLevel(),G=s.state;G.setBlending(ci),G.buffers.depth.getReversed()===!0?G.buffers.color.setClear(0,0,0,0):G.buffers.color.setClear(1,1,1,1),G.buffers.depth.setTest(!0),G.setScissorTest(!1);const z=m!==Li&&this.type===Li,$=m===Li&&this.type!==Li;for(let Y=0,q=S.length;Y<q;Y++){const he=S[Y],K=he.shadow;if(K===void 0){te("WebGLShadowMap:",he,"has no shadow.");continue}if(K.autoUpdate===!1&&K.needsUpdate===!1)continue;i.copy(K.mapSize);const ue=K.getFrameExtents();if(i.multiply(ue),r.copy(K.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(r.x=Math.floor(u/ue.x),i.x=r.x*ue.x,K.mapSize.x=r.x),i.y>u&&(r.y=Math.floor(u/ue.y),i.y=r.y*ue.y,K.mapSize.y=r.y)),K.map===null||z===!0||$===!0){const Ie=this.type!==Li?{minFilter:Qt,magFilter:Qt}:{};K.map!==null&&K.map.dispose(),K.map=new zr(i.x,i.y,Ie),K.map.texture.name=he.name+".shadowMap",K.camera.updateProjectionMatrix()}s.setRenderTarget(K.map),s.clear();const ye=K.getViewportCount();for(let Ie=0;Ie<ye;Ie++){const yt=K.getViewport(Ie);o.set(r.x*yt.x,r.y*yt.y,r.x*yt.z,r.y*yt.w),G.viewport(o),K.updateMatrices(he,Ie),n=K.getFrustum(),v(E,C,K.camera,he,this.type)}K.isPointLightShadow!==!0&&this.type===Li&&b(K,C),K.needsUpdate=!1}m=this.type,g.needsUpdate=!1,s.setRenderTarget(T,M,I)};function b(S,E){const C=e.update(x);d.defines.VSM_SAMPLES!==S.blurSamples&&(d.defines.VSM_SAMPLES=S.blurSamples,f.defines.VSM_SAMPLES=S.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),S.mapPass===null&&(S.mapPass=new zr(i.x,i.y)),d.uniforms.shadow_pass.value=S.map.texture,d.uniforms.resolution.value=S.mapSize,d.uniforms.radius.value=S.radius,s.setRenderTarget(S.mapPass),s.clear(),s.renderBufferDirect(E,null,C,d,x,null),f.uniforms.shadow_pass.value=S.mapPass.texture,f.uniforms.resolution.value=S.mapSize,f.uniforms.radius.value=S.radius,s.setRenderTarget(S.map),s.clear(),s.renderBufferDirect(E,null,C,f,x,null)}function y(S,E,C,T){let M=null;const I=C.isPointLight===!0?S.customDistanceMaterial:S.customDepthMaterial;if(I!==void 0)M=I;else if(M=C.isPointLight===!0?c:a,s.localClippingEnabled&&E.clipShadows===!0&&Array.isArray(E.clippingPlanes)&&E.clippingPlanes.length!==0||E.displacementMap&&E.displacementScale!==0||E.alphaMap&&E.alphaTest>0||E.map&&E.alphaTest>0||E.alphaToCoverage===!0){const G=M.uuid,z=E.uuid;let $=l[G];$===void 0&&($={},l[G]=$);let Y=$[z];Y===void 0&&(Y=M.clone(),$[z]=Y,E.addEventListener("dispose",w)),M=Y}if(M.visible=E.visible,M.wireframe=E.wireframe,T===Li?M.side=E.shadowSide!==null?E.shadowSide:E.side:M.side=E.shadowSide!==null?E.shadowSide:h[E.side],M.alphaMap=E.alphaMap,M.alphaTest=E.alphaToCoverage===!0?.5:E.alphaTest,M.map=E.map,M.clipShadows=E.clipShadows,M.clippingPlanes=E.clippingPlanes,M.clipIntersection=E.clipIntersection,M.displacementMap=E.displacementMap,M.displacementScale=E.displacementScale,M.displacementBias=E.displacementBias,M.wireframeLinewidth=E.wireframeLinewidth,M.linewidth=E.linewidth,C.isPointLight===!0&&M.isMeshDistanceMaterial===!0){const G=s.properties.get(M);G.light=C}return M}function v(S,E,C,T,M){if(S.visible===!1)return;if(S.layers.test(E.layers)&&(S.isMesh||S.isLine||S.isPoints)&&(S.castShadow||S.receiveShadow&&M===Li)&&(!S.frustumCulled||n.intersectsObject(S))){S.modelViewMatrix.multiplyMatrices(C.matrixWorldInverse,S.matrixWorld);const z=e.update(S),$=S.material;if(Array.isArray($)){const Y=z.groups;for(let q=0,he=Y.length;q<he;q++){const K=Y[q],ue=$[K.materialIndex];if(ue&&ue.visible){const ye=y(S,ue,T,M);S.onBeforeShadow(s,S,E,C,z,ye,K),s.renderBufferDirect(C,null,z,ye,S,K),S.onAfterShadow(s,S,E,C,z,ye,K)}}}else if($.visible){const Y=y(S,$,T,M);S.onBeforeShadow(s,S,E,C,z,Y,null),s.renderBufferDirect(C,null,z,Y,S,null),S.onAfterShadow(s,S,E,C,z,Y,null)}}const G=S.children;for(let z=0,$=G.length;z<$;z++)v(G[z],E,C,T,M)}function w(S){S.target.removeEventListener("dispose",w);for(const C in l){const T=l[C],M=S.target.uuid;M in T&&(T[M].dispose(),delete T[M])}}}const yN={[al]:cl,[ll]:dl,[ul]:fl,[Vr]:hl,[cl]:al,[dl]:ll,[fl]:ul,[hl]:Vr};function bN(s,e){function t(){let V=!1;const Le=new Ke;let we=null;const Re=new Ke(0,0,0,0);return{setMask:function(be){we!==be&&!V&&(s.colorMask(be,be,be,be),we=be)},setLocked:function(be){V=be},setClear:function(be,ae,Xe,_t,en){en===!0&&(be*=_t,ae*=_t,Xe*=_t),Le.set(be,ae,Xe,_t),Re.equals(Le)===!1&&(s.clearColor(be,ae,Xe,_t),Re.copy(Le))},reset:function(){V=!1,we=null,Re.set(-1,0,0,0)}}}function n(){let V=!1,Le=!1,we=null,Re=null,be=null;return{setReversed:function(ae){if(Le!==ae){const Xe=e.get("EXT_clip_control");ae?Xe.clipControlEXT(Xe.LOWER_LEFT_EXT,Xe.ZERO_TO_ONE_EXT):Xe.clipControlEXT(Xe.LOWER_LEFT_EXT,Xe.NEGATIVE_ONE_TO_ONE_EXT),Le=ae;const _t=be;be=null,this.setClear(_t)}},getReversed:function(){return Le},setTest:function(ae){ae?ce(s.DEPTH_TEST):Fe(s.DEPTH_TEST)},setMask:function(ae){we!==ae&&!V&&(s.depthMask(ae),we=ae)},setFunc:function(ae){if(Le&&(ae=yN[ae]),Re!==ae){switch(ae){case al:s.depthFunc(s.NEVER);break;case cl:s.depthFunc(s.ALWAYS);break;case ll:s.depthFunc(s.LESS);break;case Vr:s.depthFunc(s.LEQUAL);break;case ul:s.depthFunc(s.EQUAL);break;case hl:s.depthFunc(s.GEQUAL);break;case dl:s.depthFunc(s.GREATER);break;case fl:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}Re=ae}},setLocked:function(ae){V=ae},setClear:function(ae){be!==ae&&(Le&&(ae=1-ae),s.clearDepth(ae),be=ae)},reset:function(){V=!1,we=null,Re=null,be=null,Le=!1}}}function i(){let V=!1,Le=null,we=null,Re=null,be=null,ae=null,Xe=null,_t=null,en=null;return{setTest:function(zt){V||(zt?ce(s.STENCIL_TEST):Fe(s.STENCIL_TEST))},setMask:function(zt){Le!==zt&&!V&&(s.stencilMask(zt),Le=zt)},setFunc:function(zt,_s,is){(we!==zt||Re!==_s||be!==is)&&(s.stencilFunc(zt,_s,is),we=zt,Re=_s,be=is)},setOp:function(zt,_s,is){(ae!==zt||Xe!==_s||_t!==is)&&(s.stencilOp(zt,_s,is),ae=zt,Xe=_s,_t=is)},setLocked:function(zt){V=zt},setClear:function(zt){en!==zt&&(s.clearStencil(zt),en=zt)},reset:function(){V=!1,Le=null,we=null,Re=null,be=null,ae=null,Xe=null,_t=null,en=null}}}const r=new t,o=new n,a=new i,c=new WeakMap,l=new WeakMap;let u={},h={},d=new WeakMap,f=[],p=null,x=!1,g=null,m=null,b=null,y=null,v=null,w=null,S=null,E=new Ze(0,0,0),C=0,T=!1,M=null,I=null,G=null,z=null,$=null;const Y=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let q=!1,he=0;const K=s.getParameter(s.VERSION);K.indexOf("WebGL")!==-1?(he=parseFloat(/^WebGL (\d)/.exec(K)[1]),q=he>=1):K.indexOf("OpenGL ES")!==-1&&(he=parseFloat(/^OpenGL ES (\d)/.exec(K)[1]),q=he>=2);let ue=null,ye={};const Ie=s.getParameter(s.SCISSOR_BOX),yt=s.getParameter(s.VIEWPORT),pt=new Ke().fromArray(Ie),Mt=new Ke().fromArray(yt);function wt(V,Le,we,Re){const be=new Uint8Array(4),ae=s.createTexture();s.bindTexture(V,ae),s.texParameteri(V,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(V,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let Xe=0;Xe<we;Xe++)V===s.TEXTURE_3D||V===s.TEXTURE_2D_ARRAY?s.texImage3D(Le,0,s.RGBA,1,1,Re,0,s.RGBA,s.UNSIGNED_BYTE,be):s.texImage2D(Le+Xe,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,be);return ae}const re={};re[s.TEXTURE_2D]=wt(s.TEXTURE_2D,s.TEXTURE_2D,1),re[s.TEXTURE_CUBE_MAP]=wt(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),re[s.TEXTURE_2D_ARRAY]=wt(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),re[s.TEXTURE_3D]=wt(s.TEXTURE_3D,s.TEXTURE_3D,1,1),r.setClear(0,0,0,1),o.setClear(1),a.setClear(0),ce(s.DEPTH_TEST),o.setFunc(Vr),de(!1),ve(qf),ce(s.CULL_FACE),fe(ci);function ce(V){u[V]!==!0&&(s.enable(V),u[V]=!0)}function Fe(V){u[V]!==!1&&(s.disable(V),u[V]=!1)}function Je(V,Le){return h[V]!==Le?(s.bindFramebuffer(V,Le),h[V]=Le,V===s.DRAW_FRAMEBUFFER&&(h[s.FRAMEBUFFER]=Le),V===s.FRAMEBUFFER&&(h[s.DRAW_FRAMEBUFFER]=Le),!0):!1}function ze(V,Le){let we=f,Re=!1;if(V){we=d.get(Le),we===void 0&&(we=[],d.set(Le,we));const be=V.textures;if(we.length!==be.length||we[0]!==s.COLOR_ATTACHMENT0){for(let ae=0,Xe=be.length;ae<Xe;ae++)we[ae]=s.COLOR_ATTACHMENT0+ae;we.length=be.length,Re=!0}}else we[0]!==s.BACK&&(we[0]=s.BACK,Re=!0);Re&&s.drawBuffers(we)}function bt(V){return p!==V?(s.useProgram(V),p=V,!0):!1}const qt={[Kn]:s.FUNC_ADD,[Np]:s.FUNC_SUBTRACT,[Cp]:s.FUNC_REVERSE_SUBTRACT};qt[z_]=s.MIN,qt[k_]=s.MAX;const dt={[nr]:s.ZERO,[Pp]:s.ONE,[Lp]:s.SRC_COLOR,[rl]:s.SRC_ALPHA,[Op]:s.SRC_ALPHA_SATURATE,[Fp]:s.DST_COLOR,[Up]:s.DST_ALPHA,[Dp]:s.ONE_MINUS_SRC_COLOR,[ol]:s.ONE_MINUS_SRC_ALPHA,[Bp]:s.ONE_MINUS_DST_COLOR,[Ip]:s.ONE_MINUS_DST_ALPHA,[MM]:s.CONSTANT_COLOR,[EM]:s.ONE_MINUS_CONSTANT_COLOR,[AM]:s.CONSTANT_ALPHA,[wM]:s.ONE_MINUS_CONSTANT_ALPHA};function fe(V,Le,we,Re,be,ae,Xe,_t,en,zt){if(V===ci){x===!0&&(Fe(s.BLEND),x=!1);return}if(x===!1&&(ce(s.BLEND),x=!0),V!==ya){if(V!==g||zt!==T){if((m!==Kn||v!==Kn)&&(s.blendEquation(s.FUNC_ADD),m=Kn,v=Kn),zt)switch(V){case Ii:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Aa:s.blendFunc(s.ONE,s.ONE);break;case wa:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case Ra:s.blendFuncSeparate(s.DST_COLOR,s.ONE_MINUS_SRC_ALPHA,s.ZERO,s.ONE);break;default:ge("WebGLState: Invalid blending: ",V);break}else switch(V){case Ii:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Aa:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE,s.ONE,s.ONE);break;case wa:ge("WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Ra:ge("WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:ge("WebGLState: Invalid blending: ",V);break}b=null,y=null,w=null,S=null,E.set(0,0,0),C=0,g=V,T=zt}return}be=be||Le,ae=ae||we,Xe=Xe||Re,(Le!==m||be!==v)&&(s.blendEquationSeparate(qt[Le],qt[be]),m=Le,v=be),(we!==b||Re!==y||ae!==w||Xe!==S)&&(s.blendFuncSeparate(dt[we],dt[Re],dt[ae],dt[Xe]),b=we,y=Re,w=ae,S=Xe),(_t.equals(E)===!1||en!==C)&&(s.blendColor(_t.r,_t.g,_t.b,en),E.copy(_t),C=en),g=V,T=!1}function D(V,Le){V.side===jn?Fe(s.CULL_FACE):ce(s.CULL_FACE);let we=V.side===Xt;Le&&(we=!we),de(we),V.blending===Ii&&V.transparent===!1?fe(ci):fe(V.blending,V.blendEquation,V.blendSrc,V.blendDst,V.blendEquationAlpha,V.blendSrcAlpha,V.blendDstAlpha,V.blendColor,V.blendAlpha,V.premultipliedAlpha),o.setFunc(V.depthFunc),o.setTest(V.depthTest),o.setMask(V.depthWrite),r.setMask(V.colorWrite);const Re=V.stencilWrite;a.setTest(Re),Re&&(a.setMask(V.stencilWriteMask),a.setFunc(V.stencilFunc,V.stencilRef,V.stencilFuncMask),a.setOp(V.stencilFail,V.stencilZFail,V.stencilZPass)),_e(V.polygonOffset,V.polygonOffsetFactor,V.polygonOffsetUnits),V.alphaToCoverage===!0?ce(s.SAMPLE_ALPHA_TO_COVERAGE):Fe(s.SAMPLE_ALPHA_TO_COVERAGE)}function de(V){M!==V&&(V?s.frontFace(s.CW):s.frontFace(s.CCW),M=V)}function ve(V){V!==V_?(ce(s.CULL_FACE),V!==I&&(V===qf?s.cullFace(s.BACK):V===G_?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):Fe(s.CULL_FACE),I=V}function Ee(V){V!==G&&(q&&s.lineWidth(V),G=V)}function _e(V,Le,we){V?(ce(s.POLYGON_OFFSET_FILL),(z!==Le||$!==we)&&(s.polygonOffset(Le,we),z=Le,$=we)):Fe(s.POLYGON_OFFSET_FILL)}function We(V){V?ce(s.SCISSOR_TEST):Fe(s.SCISSOR_TEST)}function Ce(V){V===void 0&&(V=s.TEXTURE0+Y-1),ue!==V&&(s.activeTexture(V),ue=V)}function Ve(V,Le,we){we===void 0&&(ue===null?we=s.TEXTURE0+Y-1:we=ue);let Re=ye[we];Re===void 0&&(Re={type:void 0,texture:void 0},ye[we]=Re),(Re.type!==V||Re.texture!==Le)&&(ue!==we&&(s.activeTexture(we),ue=we),s.bindTexture(V,Le||re[V]),Re.type=V,Re.texture=Le)}function L(){const V=ye[ue];V!==void 0&&V.type!==void 0&&(s.bindTexture(V.type,null),V.type=void 0,V.texture=void 0)}function A(){try{s.compressedTexImage2D(...arguments)}catch(V){V("WebGLState:",V)}}function X(){try{s.compressedTexImage3D(...arguments)}catch(V){V("WebGLState:",V)}}function se(){try{s.texSubImage2D(...arguments)}catch(V){V("WebGLState:",V)}}function le(){try{s.texSubImage3D(...arguments)}catch(V){V("WebGLState:",V)}}function ne(){try{s.compressedTexSubImage2D(...arguments)}catch(V){V("WebGLState:",V)}}function Qe(){try{s.compressedTexSubImage3D(...arguments)}catch(V){V("WebGLState:",V)}}function Pe(){try{s.texStorage2D(...arguments)}catch(V){V("WebGLState:",V)}}function tt(){try{s.texStorage3D(...arguments)}catch(V){V("WebGLState:",V)}}function Ye(){try{s.texImage2D(...arguments)}catch(V){V("WebGLState:",V)}}function pe(){try{s.texImage3D(...arguments)}catch(V){V("WebGLState:",V)}}function Ae(V){pt.equals(V)===!1&&(s.scissor(V.x,V.y,V.z,V.w),pt.copy(V))}function lt(V){Mt.equals(V)===!1&&(s.viewport(V.x,V.y,V.z,V.w),Mt.copy(V))}function ot(V,Le){let we=l.get(Le);we===void 0&&(we=new WeakMap,l.set(Le,we));let Re=we.get(V);Re===void 0&&(Re=s.getUniformBlockIndex(Le,V.name),we.set(V,Re))}function Oe(V,Le){const Re=l.get(Le).get(V);c.get(Le)!==Re&&(s.uniformBlockBinding(Le,Re,V.__bindingPointIndex),c.set(Le,Re))}function mt(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),o.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),u={},ue=null,ye={},h={},d=new WeakMap,f=[],p=null,x=!1,g=null,m=null,b=null,y=null,v=null,w=null,S=null,E=new Ze(0,0,0),C=0,T=!1,M=null,I=null,G=null,z=null,$=null,pt.set(0,0,s.canvas.width,s.canvas.height),Mt.set(0,0,s.canvas.width,s.canvas.height),r.reset(),o.reset(),a.reset()}return{buffers:{color:r,depth:o,stencil:a},enable:ce,disable:Fe,bindFramebuffer:Je,drawBuffers:ze,useProgram:bt,setBlending:fe,setMaterial:D,setFlipSided:de,setCullFace:ve,setLineWidth:Ee,setPolygonOffset:_e,setScissorTest:We,activeTexture:Ce,bindTexture:Ve,unbindTexture:L,compressedTexImage2D:A,compressedTexImage3D:X,texImage2D:Ye,texImage3D:pe,updateUBOMapping:ot,uniformBlockBinding:Oe,texStorage2D:Pe,texStorage3D:tt,texSubImage2D:se,texSubImage3D:le,compressedTexSubImage2D:ne,compressedTexSubImage3D:Qe,scissor:Ae,viewport:lt,reset:mt}}function vN(s,e,t,n,i,r,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),l=new oe,u=new WeakMap;let h;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(L,A){return f?new OffscreenCanvas(L,A):_l("canvas")}function x(L,A,X){let se=1;const le=Ve(L);if((le.width>X||le.height>X)&&(se=X/Math.max(le.width,le.height)),se<1)if(typeof HTMLImageElement<"u"&&L instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&L instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&L instanceof ImageBitmap||typeof VideoFrame<"u"&&L instanceof VideoFrame){const ne=Math.floor(se*le.width),Qe=Math.floor(se*le.height);h===void 0&&(h=p(ne,Qe));const Pe=A?p(ne,Qe):h;return Pe.width=ne,Pe.height=Qe,Pe.getContext("2d").drawImage(L,0,0,ne,Qe),te("WebGLRenderer: Texture has been resized from ("+le.width+"x"+le.height+") to ("+ne+"x"+Qe+")."),Pe}else return"data"in L&&te("WebGLRenderer: Image in DataTexture is too big ("+le.width+"x"+le.height+")."),L;return L}function g(L){return L.generateMipmaps}function m(L){s.generateMipmap(L)}function b(L){return L.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:L.isWebGL3DRenderTarget?s.TEXTURE_3D:L.isWebGLArrayRenderTarget||L.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function y(L,A,X,se,le=!1){if(L!==null){if(s[L]!==void 0)return s[L];te("WebGLRenderer: Attempt to use non-existing WebGL internal format '"+L+"'")}let ne=A;if(A===s.RED&&(X===s.FLOAT&&(ne=s.R32F),X===s.HALF_FLOAT&&(ne=s.R16F),X===s.UNSIGNED_BYTE&&(ne=s.R8)),A===s.RED_INTEGER&&(X===s.UNSIGNED_BYTE&&(ne=s.R8UI),X===s.UNSIGNED_SHORT&&(ne=s.R16UI),X===s.UNSIGNED_INT&&(ne=s.R32UI),X===s.BYTE&&(ne=s.R8I),X===s.SHORT&&(ne=s.R16I),X===s.INT&&(ne=s.R32I)),A===s.RG&&(X===s.FLOAT&&(ne=s.RG32F),X===s.HALF_FLOAT&&(ne=s.RG16F),X===s.UNSIGNED_BYTE&&(ne=s.RG8)),A===s.RG_INTEGER&&(X===s.UNSIGNED_BYTE&&(ne=s.RG8UI),X===s.UNSIGNED_SHORT&&(ne=s.RG16UI),X===s.UNSIGNED_INT&&(ne=s.RG32UI),X===s.BYTE&&(ne=s.RG8I),X===s.SHORT&&(ne=s.RG16I),X===s.INT&&(ne=s.RG32I)),A===s.RGB_INTEGER&&(X===s.UNSIGNED_BYTE&&(ne=s.RGB8UI),X===s.UNSIGNED_SHORT&&(ne=s.RGB16UI),X===s.UNSIGNED_INT&&(ne=s.RGB32UI),X===s.BYTE&&(ne=s.RGB8I),X===s.SHORT&&(ne=s.RGB16I),X===s.INT&&(ne=s.RGB32I)),A===s.RGBA_INTEGER&&(X===s.UNSIGNED_BYTE&&(ne=s.RGBA8UI),X===s.UNSIGNED_SHORT&&(ne=s.RGBA16UI),X===s.UNSIGNED_INT&&(ne=s.RGBA32UI),X===s.BYTE&&(ne=s.RGBA8I),X===s.SHORT&&(ne=s.RGBA16I),X===s.INT&&(ne=s.RGBA32I)),A===s.RGB&&(X===s.UNSIGNED_INT_5_9_9_9_REV&&(ne=s.RGB9_E5),X===s.UNSIGNED_INT_10F_11F_11F_REV&&(ne=s.R11F_G11F_B10F)),A===s.RGBA){const Qe=le?Ja:et.getTransfer(se);X===s.FLOAT&&(ne=s.RGBA32F),X===s.HALF_FLOAT&&(ne=s.RGBA16F),X===s.UNSIGNED_BYTE&&(ne=Qe===Ue?s.SRGB8_ALPHA8:s.RGBA8),X===s.UNSIGNED_SHORT_4_4_4_4&&(ne=s.RGBA4),X===s.UNSIGNED_SHORT_5_5_5_1&&(ne=s.RGB5_A1)}return(ne===s.R16F||ne===s.R32F||ne===s.RG16F||ne===s.RG32F||ne===s.RGBA16F||ne===s.RGBA32F)&&e.get("EXT_color_buffer_float"),ne}function v(L,A){let X;return L?A===null||A===Kt||A===Fi?X=s.DEPTH24_STENCIL8:A===Sn?X=s.DEPTH32F_STENCIL8:A===us&&(X=s.DEPTH24_STENCIL8,te("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):A===null||A===Kt||A===Fi?X=s.DEPTH_COMPONENT24:A===Sn?X=s.DEPTH_COMPONENT32F:A===us&&(X=s.DEPTH_COMPONENT16),X}function w(L,A){return g(L)===!0||L.isFramebufferTexture&&L.minFilter!==Qt&&L.minFilter!==ln?Math.log2(Math.max(A.width,A.height))+1:L.mipmaps!==void 0&&L.mipmaps.length>0?L.mipmaps.length:L.isCompressedTexture&&Array.isArray(L.image)?A.mipmaps.length:1}function S(L){const A=L.target;A.removeEventListener("dispose",S),C(A),A.isVideoTexture&&u.delete(A)}function E(L){const A=L.target;A.removeEventListener("dispose",E),M(A)}function C(L){const A=n.get(L);if(A.__webglInit===void 0)return;const X=L.source,se=d.get(X);if(se){const le=se[A.__cacheKey];le.usedTimes--,le.usedTimes===0&&T(L),Object.keys(se).length===0&&d.delete(X)}n.remove(L)}function T(L){const A=n.get(L);s.deleteTexture(A.__webglTexture);const X=L.source,se=d.get(X);delete se[A.__cacheKey],o.memory.textures--}function M(L){const A=n.get(L);if(L.depthTexture&&(L.depthTexture.dispose(),n.remove(L.depthTexture)),L.isWebGLCubeRenderTarget)for(let se=0;se<6;se++){if(Array.isArray(A.__webglFramebuffer[se]))for(let le=0;le<A.__webglFramebuffer[se].length;le++)s.deleteFramebuffer(A.__webglFramebuffer[se][le]);else s.deleteFramebuffer(A.__webglFramebuffer[se]);A.__webglDepthbuffer&&s.deleteRenderbuffer(A.__webglDepthbuffer[se])}else{if(Array.isArray(A.__webglFramebuffer))for(let se=0;se<A.__webglFramebuffer.length;se++)s.deleteFramebuffer(A.__webglFramebuffer[se]);else s.deleteFramebuffer(A.__webglFramebuffer);if(A.__webglDepthbuffer&&s.deleteRenderbuffer(A.__webglDepthbuffer),A.__webglMultisampledFramebuffer&&s.deleteFramebuffer(A.__webglMultisampledFramebuffer),A.__webglColorRenderbuffer)for(let se=0;se<A.__webglColorRenderbuffer.length;se++)A.__webglColorRenderbuffer[se]&&s.deleteRenderbuffer(A.__webglColorRenderbuffer[se]);A.__webglDepthRenderbuffer&&s.deleteRenderbuffer(A.__webglDepthRenderbuffer)}const X=L.textures;for(let se=0,le=X.length;se<le;se++){const ne=n.get(X[se]);ne.__webglTexture&&(s.deleteTexture(ne.__webglTexture),o.memory.textures--),n.remove(X[se])}n.remove(L)}let I=0;function G(){I=0}function z(){const L=I;return L>=i.maxTextures&&te("WebGLTextures: Trying to use "+L+" texture units while this GPU supports only "+i.maxTextures),I+=1,L}function $(L){const A=[];return A.push(L.wrapS),A.push(L.wrapT),A.push(L.wrapR||0),A.push(L.magFilter),A.push(L.minFilter),A.push(L.anisotropy),A.push(L.internalFormat),A.push(L.format),A.push(L.type),A.push(L.generateMipmaps),A.push(L.premultiplyAlpha),A.push(L.flipY),A.push(L.unpackAlignment),A.push(L.colorSpace),A.join()}function Y(L,A){const X=n.get(L);if(L.isVideoTexture&&We(L),L.isRenderTargetTexture===!1&&L.isExternalTexture!==!0&&L.version>0&&X.__version!==L.version){const se=L.image;if(se===null)te("WebGLRenderer: Texture marked for update but no image data found.");else if(se.complete===!1)te("WebGLRenderer: Texture marked for update but image is incomplete");else{re(X,L,A);return}}else L.isExternalTexture&&(X.__webglTexture=L.sourceTexture?L.sourceTexture:null);t.bindTexture(s.TEXTURE_2D,X.__webglTexture,s.TEXTURE0+A)}function q(L,A){const X=n.get(L);if(L.isRenderTargetTexture===!1&&L.version>0&&X.__version!==L.version){re(X,L,A);return}else L.isExternalTexture&&(X.__webglTexture=L.sourceTexture?L.sourceTexture:null);t.bindTexture(s.TEXTURE_2D_ARRAY,X.__webglTexture,s.TEXTURE0+A)}function he(L,A){const X=n.get(L);if(L.isRenderTargetTexture===!1&&L.version>0&&X.__version!==L.version){re(X,L,A);return}t.bindTexture(s.TEXTURE_3D,X.__webglTexture,s.TEXTURE0+A)}function K(L,A){const X=n.get(L);if(L.version>0&&X.__version!==L.version){ce(X,L,A);return}t.bindTexture(s.TEXTURE_CUBE_MAP,X.__webglTexture,s.TEXTURE0+A)}const ue={[Ao]:s.REPEAT,[gi]:s.CLAMP_TO_EDGE,[wo]:s.MIRRORED_REPEAT},ye={[Qt]:s.NEAREST,[Gp]:s.NEAREST_MIPMAP_NEAREST,[ar]:s.NEAREST_MIPMAP_LINEAR,[ln]:s.LINEAR,[ba]:s.LINEAR_MIPMAP_NEAREST,[xi]:s.LINEAR_MIPMAP_LINEAR},Ie={[kp]:s.NEVER,[qp]:s.ALWAYS,[kh]:s.LESS,[Hh]:s.LEQUAL,[Hp]:s.EQUAL,[Xp]:s.GEQUAL,[Wp]:s.GREATER,[$p]:s.NOTEQUAL};function yt(L,A){if(A.type===Sn&&e.has("OES_texture_float_linear")===!1&&(A.magFilter===ln||A.magFilter===ba||A.magFilter===ar||A.magFilter===xi||A.minFilter===ln||A.minFilter===ba||A.minFilter===ar||A.minFilter===xi)&&te("WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(L,s.TEXTURE_WRAP_S,ue[A.wrapS]),s.texParameteri(L,s.TEXTURE_WRAP_T,ue[A.wrapT]),(L===s.TEXTURE_3D||L===s.TEXTURE_2D_ARRAY)&&s.texParameteri(L,s.TEXTURE_WRAP_R,ue[A.wrapR]),s.texParameteri(L,s.TEXTURE_MAG_FILTER,ye[A.magFilter]),s.texParameteri(L,s.TEXTURE_MIN_FILTER,ye[A.minFilter]),A.compareFunction&&(s.texParameteri(L,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(L,s.TEXTURE_COMPARE_FUNC,Ie[A.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(A.magFilter===Qt||A.minFilter!==ar&&A.minFilter!==xi||A.type===Sn&&e.has("OES_texture_float_linear")===!1)return;if(A.anisotropy>1||n.get(A).__currentAnisotropy){const X=e.get("EXT_texture_filter_anisotropic");s.texParameterf(L,X.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,i.getMaxAnisotropy())),n.get(A).__currentAnisotropy=A.anisotropy}}}function pt(L,A){let X=!1;L.__webglInit===void 0&&(L.__webglInit=!0,A.addEventListener("dispose",S));const se=A.source;let le=d.get(se);le===void 0&&(le={},d.set(se,le));const ne=$(A);if(ne!==L.__cacheKey){le[ne]===void 0&&(le[ne]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,X=!0),le[ne].usedTimes++;const Qe=le[L.__cacheKey];Qe!==void 0&&(le[L.__cacheKey].usedTimes--,Qe.usedTimes===0&&T(A)),L.__cacheKey=ne,L.__webglTexture=le[ne].texture}return X}function Mt(L,A,X){return Math.floor(Math.floor(L/X)/A)}function wt(L,A,X,se){const ne=L.updateRanges;if(ne.length===0)t.texSubImage2D(s.TEXTURE_2D,0,0,0,A.width,A.height,X,se,A.data);else{ne.sort((pe,Ae)=>pe.start-Ae.start);let Qe=0;for(let pe=1;pe<ne.length;pe++){const Ae=ne[Qe],lt=ne[pe],ot=Ae.start+Ae.count,Oe=Mt(lt.start,A.width,4),mt=Mt(Ae.start,A.width,4);lt.start<=ot+1&&Oe===mt&&Mt(lt.start+lt.count-1,A.width,4)===Oe?Ae.count=Math.max(Ae.count,lt.start+lt.count-Ae.start):(++Qe,ne[Qe]=lt)}ne.length=Qe+1;const Pe=s.getParameter(s.UNPACK_ROW_LENGTH),tt=s.getParameter(s.UNPACK_SKIP_PIXELS),Ye=s.getParameter(s.UNPACK_SKIP_ROWS);s.pixelStorei(s.UNPACK_ROW_LENGTH,A.width);for(let pe=0,Ae=ne.length;pe<Ae;pe++){const lt=ne[pe],ot=Math.floor(lt.start/4),Oe=Math.ceil(lt.count/4),mt=ot%A.width,V=Math.floor(ot/A.width),Le=Oe,we=1;s.pixelStorei(s.UNPACK_SKIP_PIXELS,mt),s.pixelStorei(s.UNPACK_SKIP_ROWS,V),t.texSubImage2D(s.TEXTURE_2D,0,mt,V,Le,we,X,se,A.data)}L.clearUpdateRanges(),s.pixelStorei(s.UNPACK_ROW_LENGTH,Pe),s.pixelStorei(s.UNPACK_SKIP_PIXELS,tt),s.pixelStorei(s.UNPACK_SKIP_ROWS,Ye)}}function re(L,A,X){let se=s.TEXTURE_2D;(A.isDataArrayTexture||A.isCompressedArrayTexture)&&(se=s.TEXTURE_2D_ARRAY),A.isData3DTexture&&(se=s.TEXTURE_3D);const le=pt(L,A),ne=A.source;t.bindTexture(se,L.__webglTexture,s.TEXTURE0+X);const Qe=n.get(ne);if(ne.version!==Qe.__version||le===!0){t.activeTexture(s.TEXTURE0+X);const Pe=et.getPrimaries(et.workingColorSpace),tt=A.colorSpace===mi?null:et.getPrimaries(A.colorSpace),Ye=A.colorSpace===mi||Pe===tt?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,A.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,A.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ye);let pe=x(A.image,!1,i.maxTextureSize);pe=Ce(A,pe);const Ae=r.convert(A.format,A.colorSpace),lt=r.convert(A.type);let ot=y(A.internalFormat,Ae,lt,A.colorSpace,A.isVideoTexture);yt(se,A);let Oe;const mt=A.mipmaps,V=A.isVideoTexture!==!0,Le=Qe.__version===void 0||le===!0,we=ne.dataReady,Re=w(A,pe);if(A.isDepthTexture)ot=v(A.format===Oi,A.type),Le&&(V?t.texStorage2D(s.TEXTURE_2D,1,ot,pe.width,pe.height):t.texImage2D(s.TEXTURE_2D,0,ot,pe.width,pe.height,0,Ae,lt,null));else if(A.isDataTexture)if(mt.length>0){V&&Le&&t.texStorage2D(s.TEXTURE_2D,Re,ot,mt[0].width,mt[0].height);for(let be=0,ae=mt.length;be<ae;be++)Oe=mt[be],V?we&&t.texSubImage2D(s.TEXTURE_2D,be,0,0,Oe.width,Oe.height,Ae,lt,Oe.data):t.texImage2D(s.TEXTURE_2D,be,ot,Oe.width,Oe.height,0,Ae,lt,Oe.data);A.generateMipmaps=!1}else V?(Le&&t.texStorage2D(s.TEXTURE_2D,Re,ot,pe.width,pe.height),we&&wt(A,pe,Ae,lt)):t.texImage2D(s.TEXTURE_2D,0,ot,pe.width,pe.height,0,Ae,lt,pe.data);else if(A.isCompressedTexture)if(A.isCompressedArrayTexture){V&&Le&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Re,ot,mt[0].width,mt[0].height,pe.depth);for(let be=0,ae=mt.length;be<ae;be++)if(Oe=mt[be],A.format!==_n)if(Ae!==null)if(V){if(we)if(A.layerUpdates.size>0){const Xe=np(Oe.width,Oe.height,A.format,A.type);for(const _t of A.layerUpdates){const en=Oe.data.subarray(_t*Xe/Oe.data.BYTES_PER_ELEMENT,(_t+1)*Xe/Oe.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,be,0,0,_t,Oe.width,Oe.height,1,Ae,en)}A.clearLayerUpdates()}else t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,be,0,0,0,Oe.width,Oe.height,pe.depth,Ae,Oe.data)}else t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,be,ot,Oe.width,Oe.height,pe.depth,0,Oe.data,0,0);else te("WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else V?we&&t.texSubImage3D(s.TEXTURE_2D_ARRAY,be,0,0,0,Oe.width,Oe.height,pe.depth,Ae,lt,Oe.data):t.texImage3D(s.TEXTURE_2D_ARRAY,be,ot,Oe.width,Oe.height,pe.depth,0,Ae,lt,Oe.data)}else{V&&Le&&t.texStorage2D(s.TEXTURE_2D,Re,ot,mt[0].width,mt[0].height);for(let be=0,ae=mt.length;be<ae;be++)Oe=mt[be],A.format!==_n?Ae!==null?V?we&&t.compressedTexSubImage2D(s.TEXTURE_2D,be,0,0,Oe.width,Oe.height,Ae,Oe.data):t.compressedTexImage2D(s.TEXTURE_2D,be,ot,Oe.width,Oe.height,0,Oe.data):te("WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):V?we&&t.texSubImage2D(s.TEXTURE_2D,be,0,0,Oe.width,Oe.height,Ae,lt,Oe.data):t.texImage2D(s.TEXTURE_2D,be,ot,Oe.width,Oe.height,0,Ae,lt,Oe.data)}else if(A.isDataArrayTexture)if(V){if(Le&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Re,ot,pe.width,pe.height,pe.depth),we)if(A.layerUpdates.size>0){const be=np(pe.width,pe.height,A.format,A.type);for(const ae of A.layerUpdates){const Xe=pe.data.subarray(ae*be/pe.data.BYTES_PER_ELEMENT,(ae+1)*be/pe.data.BYTES_PER_ELEMENT);t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,ae,pe.width,pe.height,1,Ae,lt,Xe)}A.clearLayerUpdates()}else t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,pe.width,pe.height,pe.depth,Ae,lt,pe.data)}else t.texImage3D(s.TEXTURE_2D_ARRAY,0,ot,pe.width,pe.height,pe.depth,0,Ae,lt,pe.data);else if(A.isData3DTexture)V?(Le&&t.texStorage3D(s.TEXTURE_3D,Re,ot,pe.width,pe.height,pe.depth),we&&t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,pe.width,pe.height,pe.depth,Ae,lt,pe.data)):t.texImage3D(s.TEXTURE_3D,0,ot,pe.width,pe.height,pe.depth,0,Ae,lt,pe.data);else if(A.isFramebufferTexture){if(Le)if(V)t.texStorage2D(s.TEXTURE_2D,Re,ot,pe.width,pe.height);else{let be=pe.width,ae=pe.height;for(let Xe=0;Xe<Re;Xe++)t.texImage2D(s.TEXTURE_2D,Xe,ot,be,ae,0,Ae,lt,null),be>>=1,ae>>=1}}else if(mt.length>0){if(V&&Le){const be=Ve(mt[0]);t.texStorage2D(s.TEXTURE_2D,Re,ot,be.width,be.height)}for(let be=0,ae=mt.length;be<ae;be++)Oe=mt[be],V?we&&t.texSubImage2D(s.TEXTURE_2D,be,0,0,Ae,lt,Oe):t.texImage2D(s.TEXTURE_2D,be,ot,Ae,lt,Oe);A.generateMipmaps=!1}else if(V){if(Le){const be=Ve(pe);t.texStorage2D(s.TEXTURE_2D,Re,ot,be.width,be.height)}we&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Ae,lt,pe)}else t.texImage2D(s.TEXTURE_2D,0,ot,Ae,lt,pe);g(A)&&m(se),Qe.__version=ne.version,A.onUpdate&&A.onUpdate(A)}L.__version=A.version}function ce(L,A,X){if(A.image.length!==6)return;const se=pt(L,A),le=A.source;t.bindTexture(s.TEXTURE_CUBE_MAP,L.__webglTexture,s.TEXTURE0+X);const ne=n.get(le);if(le.version!==ne.__version||se===!0){t.activeTexture(s.TEXTURE0+X);const Qe=et.getPrimaries(et.workingColorSpace),Pe=A.colorSpace===mi?null:et.getPrimaries(A.colorSpace),tt=A.colorSpace===mi||Qe===Pe?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,A.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,A.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,tt);const Ye=A.isCompressedTexture||A.image[0].isCompressedTexture,pe=A.image[0]&&A.image[0].isDataTexture,Ae=[];for(let ae=0;ae<6;ae++)!Ye&&!pe?Ae[ae]=x(A.image[ae],!0,i.maxCubemapSize):Ae[ae]=pe?A.image[ae].image:A.image[ae],Ae[ae]=Ce(A,Ae[ae]);const lt=Ae[0],ot=r.convert(A.format,A.colorSpace),Oe=r.convert(A.type),mt=y(A.internalFormat,ot,Oe,A.colorSpace),V=A.isVideoTexture!==!0,Le=ne.__version===void 0||se===!0,we=le.dataReady;let Re=w(A,lt);yt(s.TEXTURE_CUBE_MAP,A);let be;if(Ye){V&&Le&&t.texStorage2D(s.TEXTURE_CUBE_MAP,Re,mt,lt.width,lt.height);for(let ae=0;ae<6;ae++){be=Ae[ae].mipmaps;for(let Xe=0;Xe<be.length;Xe++){const _t=be[Xe];A.format!==_n?ot!==null?V?we&&t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Xe,0,0,_t.width,_t.height,ot,_t.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Xe,mt,_t.width,_t.height,0,_t.data):te("WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):V?we&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Xe,0,0,_t.width,_t.height,ot,Oe,_t.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Xe,mt,_t.width,_t.height,0,ot,Oe,_t.data)}}}else{if(be=A.mipmaps,V&&Le){be.length>0&&Re++;const ae=Ve(Ae[0]);t.texStorage2D(s.TEXTURE_CUBE_MAP,Re,mt,ae.width,ae.height)}for(let ae=0;ae<6;ae++)if(pe){V?we&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,0,0,0,Ae[ae].width,Ae[ae].height,ot,Oe,Ae[ae].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,0,mt,Ae[ae].width,Ae[ae].height,0,ot,Oe,Ae[ae].data);for(let Xe=0;Xe<be.length;Xe++){const en=be[Xe].image[ae].image;V?we&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Xe+1,0,0,en.width,en.height,ot,Oe,en.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Xe+1,mt,en.width,en.height,0,ot,Oe,en.data)}}else{V?we&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,0,0,0,ot,Oe,Ae[ae]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,0,mt,ot,Oe,Ae[ae]);for(let Xe=0;Xe<be.length;Xe++){const _t=be[Xe];V?we&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Xe+1,0,0,ot,Oe,_t.image[ae]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Xe+1,mt,ot,Oe,_t.image[ae])}}}g(A)&&m(s.TEXTURE_CUBE_MAP),ne.__version=le.version,A.onUpdate&&A.onUpdate(A)}L.__version=A.version}function Fe(L,A,X,se,le,ne){const Qe=r.convert(X.format,X.colorSpace),Pe=r.convert(X.type),tt=y(X.internalFormat,Qe,Pe,X.colorSpace),Ye=n.get(A),pe=n.get(X);if(pe.__renderTarget=A,!Ye.__hasExternalTextures){const Ae=Math.max(1,A.width>>ne),lt=Math.max(1,A.height>>ne);le===s.TEXTURE_3D||le===s.TEXTURE_2D_ARRAY?t.texImage3D(le,ne,tt,Ae,lt,A.depth,0,Qe,Pe,null):t.texImage2D(le,ne,tt,Ae,lt,0,Qe,Pe,null)}t.bindFramebuffer(s.FRAMEBUFFER,L),_e(A)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,se,le,pe.__webglTexture,0,Ee(A)):(le===s.TEXTURE_2D||le>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&le<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,se,le,pe.__webglTexture,ne),t.bindFramebuffer(s.FRAMEBUFFER,null)}function Je(L,A,X){if(s.bindRenderbuffer(s.RENDERBUFFER,L),A.depthBuffer){const se=A.depthTexture,le=se&&se.isDepthTexture?se.type:null,ne=v(A.stencilBuffer,le),Qe=A.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Pe=Ee(A);_e(A)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Pe,ne,A.width,A.height):X?s.renderbufferStorageMultisample(s.RENDERBUFFER,Pe,ne,A.width,A.height):s.renderbufferStorage(s.RENDERBUFFER,ne,A.width,A.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,Qe,s.RENDERBUFFER,L)}else{const se=A.textures;for(let le=0;le<se.length;le++){const ne=se[le],Qe=r.convert(ne.format,ne.colorSpace),Pe=r.convert(ne.type),tt=y(ne.internalFormat,Qe,Pe,ne.colorSpace),Ye=Ee(A);X&&_e(A)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Ye,tt,A.width,A.height):_e(A)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Ye,tt,A.width,A.height):s.renderbufferStorage(s.RENDERBUFFER,tt,A.width,A.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function ze(L,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,L),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const se=n.get(A.depthTexture);se.__renderTarget=A,(!se.__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),Y(A.depthTexture,0);const le=se.__webglTexture,ne=Ee(A);if(A.depthTexture.format===Bi)_e(A)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,le,0,ne):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,le,0);else if(A.depthTexture.format===Oi)_e(A)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,le,0,ne):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,le,0);else throw new Error("Unknown depthTexture format")}function bt(L){const A=n.get(L),X=L.isWebGLCubeRenderTarget===!0;if(A.__boundDepthTexture!==L.depthTexture){const se=L.depthTexture;if(A.__depthDisposeCallback&&A.__depthDisposeCallback(),se){const le=()=>{delete A.__boundDepthTexture,delete A.__depthDisposeCallback,se.removeEventListener("dispose",le)};se.addEventListener("dispose",le),A.__depthDisposeCallback=le}A.__boundDepthTexture=se}if(L.depthTexture&&!A.__autoAllocateDepthBuffer){if(X)throw new Error("target.depthTexture not supported in Cube render targets");const se=L.texture.mipmaps;se&&se.length>0?ze(A.__webglFramebuffer[0],L):ze(A.__webglFramebuffer,L)}else if(X){A.__webglDepthbuffer=[];for(let se=0;se<6;se++)if(t.bindFramebuffer(s.FRAMEBUFFER,A.__webglFramebuffer[se]),A.__webglDepthbuffer[se]===void 0)A.__webglDepthbuffer[se]=s.createRenderbuffer(),Je(A.__webglDepthbuffer[se],L,!1);else{const le=L.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ne=A.__webglDepthbuffer[se];s.bindRenderbuffer(s.RENDERBUFFER,ne),s.framebufferRenderbuffer(s.FRAMEBUFFER,le,s.RENDERBUFFER,ne)}}else{const se=L.texture.mipmaps;if(se&&se.length>0?t.bindFramebuffer(s.FRAMEBUFFER,A.__webglFramebuffer[0]):t.bindFramebuffer(s.FRAMEBUFFER,A.__webglFramebuffer),A.__webglDepthbuffer===void 0)A.__webglDepthbuffer=s.createRenderbuffer(),Je(A.__webglDepthbuffer,L,!1);else{const le=L.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ne=A.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,ne),s.framebufferRenderbuffer(s.FRAMEBUFFER,le,s.RENDERBUFFER,ne)}}t.bindFramebuffer(s.FRAMEBUFFER,null)}function qt(L,A,X){const se=n.get(L);A!==void 0&&Fe(se.__webglFramebuffer,L,L.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),X!==void 0&&bt(L)}function dt(L){const A=L.texture,X=n.get(L),se=n.get(A);L.addEventListener("dispose",E);const le=L.textures,ne=L.isWebGLCubeRenderTarget===!0,Qe=le.length>1;if(Qe||(se.__webglTexture===void 0&&(se.__webglTexture=s.createTexture()),se.__version=A.version,o.memory.textures++),ne){X.__webglFramebuffer=[];for(let Pe=0;Pe<6;Pe++)if(A.mipmaps&&A.mipmaps.length>0){X.__webglFramebuffer[Pe]=[];for(let tt=0;tt<A.mipmaps.length;tt++)X.__webglFramebuffer[Pe][tt]=s.createFramebuffer()}else X.__webglFramebuffer[Pe]=s.createFramebuffer()}else{if(A.mipmaps&&A.mipmaps.length>0){X.__webglFramebuffer=[];for(let Pe=0;Pe<A.mipmaps.length;Pe++)X.__webglFramebuffer[Pe]=s.createFramebuffer()}else X.__webglFramebuffer=s.createFramebuffer();if(Qe)for(let Pe=0,tt=le.length;Pe<tt;Pe++){const Ye=n.get(le[Pe]);Ye.__webglTexture===void 0&&(Ye.__webglTexture=s.createTexture(),o.memory.textures++)}if(L.samples>0&&_e(L)===!1){X.__webglMultisampledFramebuffer=s.createFramebuffer(),X.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,X.__webglMultisampledFramebuffer);for(let Pe=0;Pe<le.length;Pe++){const tt=le[Pe];X.__webglColorRenderbuffer[Pe]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,X.__webglColorRenderbuffer[Pe]);const Ye=r.convert(tt.format,tt.colorSpace),pe=r.convert(tt.type),Ae=y(tt.internalFormat,Ye,pe,tt.colorSpace,L.isXRRenderTarget===!0),lt=Ee(L);s.renderbufferStorageMultisample(s.RENDERBUFFER,lt,Ae,L.width,L.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Pe,s.RENDERBUFFER,X.__webglColorRenderbuffer[Pe])}s.bindRenderbuffer(s.RENDERBUFFER,null),L.depthBuffer&&(X.__webglDepthRenderbuffer=s.createRenderbuffer(),Je(X.__webglDepthRenderbuffer,L,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(ne){t.bindTexture(s.TEXTURE_CUBE_MAP,se.__webglTexture),yt(s.TEXTURE_CUBE_MAP,A);for(let Pe=0;Pe<6;Pe++)if(A.mipmaps&&A.mipmaps.length>0)for(let tt=0;tt<A.mipmaps.length;tt++)Fe(X.__webglFramebuffer[Pe][tt],L,A,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,tt);else Fe(X.__webglFramebuffer[Pe],L,A,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,0);g(A)&&m(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Qe){for(let Pe=0,tt=le.length;Pe<tt;Pe++){const Ye=le[Pe],pe=n.get(Ye);let Ae=s.TEXTURE_2D;(L.isWebGL3DRenderTarget||L.isWebGLArrayRenderTarget)&&(Ae=L.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(Ae,pe.__webglTexture),yt(Ae,Ye),Fe(X.__webglFramebuffer,L,Ye,s.COLOR_ATTACHMENT0+Pe,Ae,0),g(Ye)&&m(Ae)}t.unbindTexture()}else{let Pe=s.TEXTURE_2D;if((L.isWebGL3DRenderTarget||L.isWebGLArrayRenderTarget)&&(Pe=L.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(Pe,se.__webglTexture),yt(Pe,A),A.mipmaps&&A.mipmaps.length>0)for(let tt=0;tt<A.mipmaps.length;tt++)Fe(X.__webglFramebuffer[tt],L,A,s.COLOR_ATTACHMENT0,Pe,tt);else Fe(X.__webglFramebuffer,L,A,s.COLOR_ATTACHMENT0,Pe,0);g(A)&&m(Pe),t.unbindTexture()}L.depthBuffer&&bt(L)}function fe(L){const A=L.textures;for(let X=0,se=A.length;X<se;X++){const le=A[X];if(g(le)){const ne=b(L),Qe=n.get(le).__webglTexture;t.bindTexture(ne,Qe),m(ne),t.unbindTexture()}}}const D=[],de=[];function ve(L){if(L.samples>0){if(_e(L)===!1){const A=L.textures,X=L.width,se=L.height;let le=s.COLOR_BUFFER_BIT;const ne=L.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Qe=n.get(L),Pe=A.length>1;if(Pe)for(let Ye=0;Ye<A.length;Ye++)t.bindFramebuffer(s.FRAMEBUFFER,Qe.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ye,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,Qe.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ye,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,Qe.__webglMultisampledFramebuffer);const tt=L.texture.mipmaps;tt&&tt.length>0?t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Qe.__webglFramebuffer[0]):t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Qe.__webglFramebuffer);for(let Ye=0;Ye<A.length;Ye++){if(L.resolveDepthBuffer&&(L.depthBuffer&&(le|=s.DEPTH_BUFFER_BIT),L.stencilBuffer&&L.resolveStencilBuffer&&(le|=s.STENCIL_BUFFER_BIT)),Pe){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Qe.__webglColorRenderbuffer[Ye]);const pe=n.get(A[Ye]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,pe,0)}s.blitFramebuffer(0,0,X,se,0,0,X,se,le,s.NEAREST),c===!0&&(D.length=0,de.length=0,D.push(s.COLOR_ATTACHMENT0+Ye),L.depthBuffer&&L.resolveDepthBuffer===!1&&(D.push(ne),de.push(ne),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,de)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,D))}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),Pe)for(let Ye=0;Ye<A.length;Ye++){t.bindFramebuffer(s.FRAMEBUFFER,Qe.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ye,s.RENDERBUFFER,Qe.__webglColorRenderbuffer[Ye]);const pe=n.get(A[Ye]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,Qe.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ye,s.TEXTURE_2D,pe,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Qe.__webglMultisampledFramebuffer)}else if(L.depthBuffer&&L.resolveDepthBuffer===!1&&c){const A=L.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[A])}}}function Ee(L){return Math.min(i.maxSamples,L.samples)}function _e(L){const A=n.get(L);return L.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function We(L){const A=o.render.frame;u.get(L)!==A&&(u.set(L,A),L.update())}function Ce(L,A){const X=L.colorSpace,se=L.format,le=L.type;return L.isCompressedTexture===!0||L.isVideoTexture===!0||X!==Gr&&X!==mi&&(et.getTransfer(X)===Ue?(se!==_n||le!==un)&&te("WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):ge("WebGLTextures: Unsupported texture color space:",X)),A}function Ve(L){return typeof HTMLImageElement<"u"&&L instanceof HTMLImageElement?(l.width=L.naturalWidth||L.width,l.height=L.naturalHeight||L.height):typeof VideoFrame<"u"&&L instanceof VideoFrame?(l.width=L.displayWidth,l.height=L.displayHeight):(l.width=L.width,l.height=L.height),l}this.allocateTextureUnit=z,this.resetTextureUnits=G,this.setTexture2D=Y,this.setTexture2DArray=q,this.setTexture3D=he,this.setTextureCube=K,this.rebindTextures=qt,this.setupRenderTarget=dt,this.updateRenderTargetMipmap=fe,this.updateMultisampleRenderTarget=ve,this.setupDepthRenderbuffer=bt,this.setupFrameBufferTexture=Fe,this.useMultisampledRTT=_e}function SN(s,e){function t(n,i=mi){let r;const o=et.getTransfer(i);if(n===un)return s.UNSIGNED_BYTE;if(n===Oh)return s.UNSIGNED_SHORT_4_4_4_4;if(n===Vh)return s.UNSIGNED_SHORT_5_5_5_1;if(n===Gh)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===zh)return s.UNSIGNED_INT_10F_11F_11F_REV;if(n===_o)return s.BYTE;if(n===yo)return s.SHORT;if(n===us)return s.UNSIGNED_SHORT;if(n===On)return s.INT;if(n===Kt)return s.UNSIGNED_INT;if(n===Sn)return s.FLOAT;if(n===hn)return s.HALF_FLOAT;if(n===zp)return s.ALPHA;if(n===Ul)return s.RGB;if(n===_n)return s.RGBA;if(n===Bi)return s.DEPTH_COMPONENT;if(n===Oi)return s.DEPTH_STENCIL;if(n===Il)return s.RED;if(n===cc)return s.RED_INTEGER;if(n===hs)return s.RG;if(n===lc)return s.RG_INTEGER;if(n===uc)return s.RGBA_INTEGER;if(n===Dr||n===Ur||n===Ir||n===Fr)if(o===Ue)if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(n===Dr)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Ur)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Ir)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Fr)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null){if(n===Dr)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Ur)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Ir)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Fr)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===pl||n===ml||n===gl||n===xl)if(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(n===pl)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===ml)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===gl)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===xl)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Pa||n===La||n===Da)if(r=e.get("WEBGL_compressed_texture_etc"),r!==null){if(n===Pa||n===La)return o===Ue?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===Da)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Ua||n===Ia||n===Fa||n===Ba||n===Oa||n===Va||n===Ga||n===za||n===ka||n===Ha||n===Wa||n===$a||n===Xa||n===qa)if(r=e.get("WEBGL_compressed_texture_astc"),r!==null){if(n===Ua)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Ia)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Fa)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Ba)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Oa)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Va)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Ga)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===za)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===ka)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Ha)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Wa)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===$a)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Xa)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===qa)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Ya||n===Yf||n===jf)if(r=e.get("EXT_texture_compression_bptc"),r!==null){if(n===Ya)return o===Ue?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Yf)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===jf)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===ja||n===Ka||n===Za||n===Qa)if(r=e.get("EXT_texture_compression_rgtc"),r!==null){if(n===ja)return r.COMPRESSED_RED_RGTC1_EXT;if(n===Ka)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Za)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Qa)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Fi?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:t}}const TN=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,MN=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class EN{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t){if(this.texture===null){const n=new ry(e.texture);(e.depthNear!==t.depthNear||e.depthFar!==t.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=n}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new Zi({vertexShader:TN,fragmentShader:MN,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new Vn(new Vl(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class AN extends xs{constructor(e,t){super();const n=this;let i=null,r=1,o=null,a="local-floor",c=1,l=null,u=null,h=null,d=null,f=null,p=null;const x=typeof XRWebGLBinding<"u",g=new EN,m={},b=t.getContextAttributes();let y=null,v=null;const w=[],S=[],E=new oe;let C=null;const T=new Wn;T.viewport=new Ke;const M=new Wn;M.viewport=new Ke;const I=[T,M],G=new _y;let z=null,$=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(re){let ce=w[re];return ce===void 0&&(ce=new ah,w[re]=ce),ce.getTargetRaySpace()},this.getControllerGrip=function(re){let ce=w[re];return ce===void 0&&(ce=new ah,w[re]=ce),ce.getGripSpace()},this.getHand=function(re){let ce=w[re];return ce===void 0&&(ce=new ah,w[re]=ce),ce.getHandSpace()};function Y(re){const ce=S.indexOf(re.inputSource);if(ce===-1)return;const Fe=w[ce];Fe!==void 0&&(Fe.update(re.inputSource,re.frame,l||o),Fe.dispatchEvent({type:re.type,data:re.inputSource}))}function q(){i.removeEventListener("select",Y),i.removeEventListener("selectstart",Y),i.removeEventListener("selectend",Y),i.removeEventListener("squeeze",Y),i.removeEventListener("squeezestart",Y),i.removeEventListener("squeezeend",Y),i.removeEventListener("end",q),i.removeEventListener("inputsourceschange",he);for(let re=0;re<w.length;re++){const ce=S[re];ce!==null&&(S[re]=null,w[re].disconnect(ce))}z=null,$=null,g.reset();for(const re in m)delete m[re];e.setRenderTarget(y),f=null,d=null,h=null,i=null,v=null,wt.stop(),n.isPresenting=!1,e.setPixelRatio(C),e.setSize(E.width,E.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(re){r=re,n.isPresenting===!0&&te("WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(re){a=re,n.isPresenting===!0&&te("WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(re){l=re},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return h===null&&x&&(h=new XRWebGLBinding(i,t)),h},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(re){if(i=re,i!==null){if(y=e.getRenderTarget(),i.addEventListener("select",Y),i.addEventListener("selectstart",Y),i.addEventListener("selectend",Y),i.addEventListener("squeeze",Y),i.addEventListener("squeezestart",Y),i.addEventListener("squeezeend",Y),i.addEventListener("end",q),i.addEventListener("inputsourceschange",he),b.xrCompatible!==!0&&await t.makeXRCompatible(),C=e.getPixelRatio(),e.getSize(E),x&&"createProjectionLayer"in XRWebGLBinding.prototype){let Fe=null,Je=null,ze=null;b.depth&&(ze=b.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Fe=b.stencil?Oi:Bi,Je=b.stencil?Fi:Kt);const bt={colorFormat:t.RGBA8,depthFormat:ze,scaleFactor:r};h=this.getBinding(),d=h.createProjectionLayer(bt),i.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),v=new zr(d.textureWidth,d.textureHeight,{format:_n,type:un,depthTexture:new Vi(d.textureWidth,d.textureHeight,Je,void 0,void 0,void 0,void 0,void 0,void 0,Fe),stencilBuffer:b.stencil,colorSpace:e.outputColorSpace,samples:b.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}else{const Fe={antialias:b.antialias,alpha:!0,depth:b.depth,stencil:b.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(i,t,Fe),i.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),v=new zr(f.framebufferWidth,f.framebufferHeight,{format:_n,type:un,colorSpace:e.outputColorSpace,stencilBuffer:b.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}v.isXRRenderTarget=!0,this.setFoveation(c),l=null,o=await i.requestReferenceSpace(a),wt.setContext(i),wt.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return g.getDepthTexture()};function he(re){for(let ce=0;ce<re.removed.length;ce++){const Fe=re.removed[ce],Je=S.indexOf(Fe);Je>=0&&(S[Je]=null,w[Je].disconnect(Fe))}for(let ce=0;ce<re.added.length;ce++){const Fe=re.added[ce];let Je=S.indexOf(Fe);if(Je===-1){for(let bt=0;bt<w.length;bt++)if(bt>=S.length){S.push(Fe),Je=bt;break}else if(S[bt]===null){S[bt]=Fe,Je=bt;break}if(Je===-1)break}const ze=w[Je];ze&&ze.connect(Fe)}}const K=new P,ue=new P;function ye(re,ce,Fe){K.setFromMatrixPosition(ce.matrixWorld),ue.setFromMatrixPosition(Fe.matrixWorld);const Je=K.distanceTo(ue),ze=ce.projectionMatrix.elements,bt=Fe.projectionMatrix.elements,qt=ze[14]/(ze[10]-1),dt=ze[14]/(ze[10]+1),fe=(ze[9]+1)/ze[5],D=(ze[9]-1)/ze[5],de=(ze[8]-1)/ze[0],ve=(bt[8]+1)/bt[0],Ee=qt*de,_e=qt*ve,We=Je/(-de+ve),Ce=We*-de;if(ce.matrixWorld.decompose(re.position,re.quaternion,re.scale),re.translateX(Ce),re.translateZ(We),re.matrixWorld.compose(re.position,re.quaternion,re.scale),re.matrixWorldInverse.copy(re.matrixWorld).invert(),ze[10]===-1)re.projectionMatrix.copy(ce.projectionMatrix),re.projectionMatrixInverse.copy(ce.projectionMatrixInverse);else{const Ve=qt+We,L=dt+We,A=Ee-Ce,X=_e+(Je-Ce),se=fe*dt/L*Ve,le=D*dt/L*Ve;re.projectionMatrix.makePerspective(A,X,se,le,Ve,L),re.projectionMatrixInverse.copy(re.projectionMatrix).invert()}}function Ie(re,ce){ce===null?re.matrixWorld.copy(re.matrix):re.matrixWorld.multiplyMatrices(ce.matrixWorld,re.matrix),re.matrixWorldInverse.copy(re.matrixWorld).invert()}this.updateCamera=function(re){if(i===null)return;let ce=re.near,Fe=re.far;g.texture!==null&&(g.depthNear>0&&(ce=g.depthNear),g.depthFar>0&&(Fe=g.depthFar)),G.near=M.near=T.near=ce,G.far=M.far=T.far=Fe,(z!==G.near||$!==G.far)&&(i.updateRenderState({depthNear:G.near,depthFar:G.far}),z=G.near,$=G.far),G.layers.mask=re.layers.mask|6,T.layers.mask=G.layers.mask&3,M.layers.mask=G.layers.mask&5;const Je=re.parent,ze=G.cameras;Ie(G,Je);for(let bt=0;bt<ze.length;bt++)Ie(ze[bt],Je);ze.length===2?ye(G,T,M):G.projectionMatrix.copy(T.projectionMatrix),yt(re,G,Je)};function yt(re,ce,Fe){Fe===null?re.matrix.copy(ce.matrixWorld):(re.matrix.copy(Fe.matrixWorld),re.matrix.invert(),re.matrix.multiply(ce.matrixWorld)),re.matrix.decompose(re.position,re.quaternion,re.scale),re.updateMatrixWorld(!0),re.projectionMatrix.copy(ce.projectionMatrix),re.projectionMatrixInverse.copy(ce.projectionMatrixInverse),re.isPerspectiveCamera&&(re.fov=Ro*2*Math.atan(1/re.projectionMatrix.elements[5]),re.zoom=1)}this.getCamera=function(){return G},this.getFoveation=function(){if(!(d===null&&f===null))return c},this.setFoveation=function(re){c=re,d!==null&&(d.fixedFoveation=re),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=re)},this.hasDepthSensing=function(){return g.texture!==null},this.getDepthSensingMesh=function(){return g.getMesh(G)},this.getCameraTexture=function(re){return m[re]};let pt=null;function Mt(re,ce){if(u=ce.getViewerPose(l||o),p=ce,u!==null){const Fe=u.views;f!==null&&(e.setRenderTargetFramebuffer(v,f.framebuffer),e.setRenderTarget(v));let Je=!1;Fe.length!==G.cameras.length&&(G.cameras.length=0,Je=!0);for(let dt=0;dt<Fe.length;dt++){const fe=Fe[dt];let D=null;if(f!==null)D=f.getViewport(fe);else{const ve=h.getViewSubImage(d,fe);D=ve.viewport,dt===0&&(e.setRenderTargetTextures(v,ve.colorTexture,ve.depthStencilTexture),e.setRenderTarget(v))}let de=I[dt];de===void 0&&(de=new Wn,de.layers.enable(dt),de.viewport=new Ke,I[dt]=de),de.matrix.fromArray(fe.transform.matrix),de.matrix.decompose(de.position,de.quaternion,de.scale),de.projectionMatrix.fromArray(fe.projectionMatrix),de.projectionMatrixInverse.copy(de.projectionMatrix).invert(),de.viewport.set(D.x,D.y,D.width,D.height),dt===0&&(G.matrix.copy(de.matrix),G.matrix.decompose(G.position,G.quaternion,G.scale)),Je===!0&&G.cameras.push(de)}const ze=i.enabledFeatures;if(ze&&ze.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&x){h=n.getBinding();const dt=h.getDepthInformation(Fe[0]);dt&&dt.isValid&&dt.texture&&g.init(dt,i.renderState)}if(ze&&ze.includes("camera-access")&&x){e.state.unbindTexture(),h=n.getBinding();for(let dt=0;dt<Fe.length;dt++){const fe=Fe[dt].camera;if(fe){let D=m[fe];D||(D=new ry,m[fe]=D);const de=h.getCameraImage(fe);D.sourceTexture=de}}}}for(let Fe=0;Fe<w.length;Fe++){const Je=S[Fe],ze=w[Fe];Je!==null&&ze!==void 0&&ze.update(Je,ce,l||o)}pt&&pt(re,ce),ce.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:ce}),p=null}const wt=new yy;wt.setAnimationLoop(Mt),this.setAnimationLoop=function(re){pt=re},this.dispose=function(){}}}const no=new Ti,wN=new ht;function RN(s,e){function t(g,m){g.matrixAutoUpdate===!0&&g.updateMatrix(),m.value.copy(g.matrix)}function n(g,m){m.color.getRGB(g.fogColor.value,ty(s)),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function i(g,m,b,y,v){m.isMeshBasicMaterial||m.isMeshLambertMaterial?r(g,m):m.isMeshToonMaterial?(r(g,m),h(g,m)):m.isMeshPhongMaterial?(r(g,m),u(g,m)):m.isMeshStandardMaterial?(r(g,m),d(g,m),m.isMeshPhysicalMaterial&&f(g,m,v)):m.isMeshMatcapMaterial?(r(g,m),p(g,m)):m.isMeshDepthMaterial?r(g,m):m.isMeshDistanceMaterial?(r(g,m),x(g,m)):m.isMeshNormalMaterial?r(g,m):m.isLineBasicMaterial?(o(g,m),m.isLineDashedMaterial&&a(g,m)):m.isPointsMaterial?c(g,m,b,y):m.isSpriteMaterial?l(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function r(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map,t(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.bumpMap&&(g.bumpMap.value=m.bumpMap,t(m.bumpMap,g.bumpMapTransform),g.bumpScale.value=m.bumpScale,m.side===Xt&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,t(m.normalMap,g.normalMapTransform),g.normalScale.value.copy(m.normalScale),m.side===Xt&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,t(m.displacementMap,g.displacementMapTransform),g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap,t(m.emissiveMap,g.emissiveMapTransform)),m.specularMap&&(g.specularMap.value=m.specularMap,t(m.specularMap,g.specularMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const b=e.get(m),y=b.envMap,v=b.envMapRotation;y&&(g.envMap.value=y,no.copy(v),no.x*=-1,no.y*=-1,no.z*=-1,y.isCubeTexture&&y.isRenderTargetTexture===!1&&(no.y*=-1,no.z*=-1),g.envMapRotation.value.setFromMatrix4(wN.makeRotationFromEuler(no)),g.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap&&(g.lightMap.value=m.lightMap,g.lightMapIntensity.value=m.lightMapIntensity,t(m.lightMap,g.lightMapTransform)),m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity,t(m.aoMap,g.aoMapTransform))}function o(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,m.map&&(g.map.value=m.map,t(m.map,g.mapTransform))}function a(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function c(g,m,b,y){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*b,g.scale.value=y*.5,m.map&&(g.map.value=m.map,t(m.map,g.uvTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function l(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map,t(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function u(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function h(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function d(g,m){g.metalness.value=m.metalness,m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap,t(m.metalnessMap,g.metalnessMapTransform)),g.roughness.value=m.roughness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap,t(m.roughnessMap,g.roughnessMapTransform)),m.envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function f(g,m,b){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap,t(m.sheenColorMap,g.sheenColorMapTransform)),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap,t(m.sheenRoughnessMap,g.sheenRoughnessMapTransform))),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap,t(m.clearcoatMap,g.clearcoatMapTransform)),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap,t(m.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),m.clearcoatNormalMap&&(g.clearcoatNormalMap.value=m.clearcoatNormalMap,t(m.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),m.side===Xt&&g.clearcoatNormalScale.value.negate())),m.dispersion>0&&(g.dispersion.value=m.dispersion),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap,t(m.iridescenceMap,g.iridescenceMapTransform)),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap,t(m.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=b.texture,g.transmissionSamplerSize.value.set(b.width,b.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap,t(m.transmissionMap,g.transmissionMapTransform)),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap,t(m.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),m.anisotropy>0&&(g.anisotropyVector.value.set(m.anisotropy*Math.cos(m.anisotropyRotation),m.anisotropy*Math.sin(m.anisotropyRotation)),m.anisotropyMap&&(g.anisotropyMap.value=m.anisotropyMap,t(m.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap,t(m.specularColorMap,g.specularColorMapTransform)),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap,t(m.specularIntensityMap,g.specularIntensityMapTransform))}function p(g,m){m.matcap&&(g.matcap.value=m.matcap)}function x(g,m){const b=e.get(m).light;g.referencePosition.value.setFromMatrixPosition(b.matrixWorld),g.nearDistance.value=b.shadow.camera.near,g.farDistance.value=b.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function NN(s,e,t,n){let i={},r={},o=[];const a=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function c(b,y){const v=y.program;n.uniformBlockBinding(b,v)}function l(b,y){let v=i[b.id];v===void 0&&(p(b),v=u(b),i[b.id]=v,b.addEventListener("dispose",g));const w=y.program;n.updateUBOMapping(b,w);const S=e.render.frame;r[b.id]!==S&&(d(b),r[b.id]=S)}function u(b){const y=h();b.__bindingPointIndex=y;const v=s.createBuffer(),w=b.__size,S=b.usage;return s.bindBuffer(s.UNIFORM_BUFFER,v),s.bufferData(s.UNIFORM_BUFFER,w,S),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,y,v),v}function h(){for(let b=0;b<a;b++)if(o.indexOf(b)===-1)return o.push(b),b;return ge("WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(b){const y=i[b.id],v=b.uniforms,w=b.__cache;s.bindBuffer(s.UNIFORM_BUFFER,y);for(let S=0,E=v.length;S<E;S++){const C=Array.isArray(v[S])?v[S]:[v[S]];for(let T=0,M=C.length;T<M;T++){const I=C[T];if(f(I,S,T,w)===!0){const G=I.__offset,z=Array.isArray(I.value)?I.value:[I.value];let $=0;for(let Y=0;Y<z.length;Y++){const q=z[Y],he=x(q);typeof q=="number"||typeof q=="boolean"?(I.__data[0]=q,s.bufferSubData(s.UNIFORM_BUFFER,G+$,I.__data)):q.isMatrix3?(I.__data[0]=q.elements[0],I.__data[1]=q.elements[1],I.__data[2]=q.elements[2],I.__data[3]=0,I.__data[4]=q.elements[3],I.__data[5]=q.elements[4],I.__data[6]=q.elements[5],I.__data[7]=0,I.__data[8]=q.elements[6],I.__data[9]=q.elements[7],I.__data[10]=q.elements[8],I.__data[11]=0):(q.toArray(I.__data,$),$+=he.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,G,I.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function f(b,y,v,w){const S=b.value,E=y+"_"+v;if(w[E]===void 0)return typeof S=="number"||typeof S=="boolean"?w[E]=S:w[E]=S.clone(),!0;{const C=w[E];if(typeof S=="number"||typeof S=="boolean"){if(C!==S)return w[E]=S,!0}else if(C.equals(S)===!1)return C.copy(S),!0}return!1}function p(b){const y=b.uniforms;let v=0;const w=16;for(let E=0,C=y.length;E<C;E++){const T=Array.isArray(y[E])?y[E]:[y[E]];for(let M=0,I=T.length;M<I;M++){const G=T[M],z=Array.isArray(G.value)?G.value:[G.value];for(let $=0,Y=z.length;$<Y;$++){const q=z[$],he=x(q),K=v%w,ue=K%he.boundary,ye=K+ue;v+=ue,ye!==0&&w-ye<he.storage&&(v+=w-ye),G.__data=new Float32Array(he.storage/Float32Array.BYTES_PER_ELEMENT),G.__offset=v,v+=he.storage}}}const S=v%w;return S>0&&(v+=w-S),b.__size=v,b.__cache={},this}function x(b){const y={boundary:0,storage:0};return typeof b=="number"||typeof b=="boolean"?(y.boundary=4,y.storage=4):b.isVector2?(y.boundary=8,y.storage=8):b.isVector3||b.isColor?(y.boundary=16,y.storage=12):b.isVector4?(y.boundary=16,y.storage=16):b.isMatrix3?(y.boundary=48,y.storage=48):b.isMatrix4?(y.boundary=64,y.storage=64):b.isTexture?te("WebGLRenderer: Texture samplers can not be part of an uniforms group."):te("WebGLRenderer: Unsupported uniform value type.",b),y}function g(b){const y=b.target;y.removeEventListener("dispose",g);const v=o.indexOf(y.__bindingPointIndex);o.splice(v,1),s.deleteBuffer(i[y.id]),delete i[y.id],delete r[y.id]}function m(){for(const b in i)s.deleteBuffer(i[b]);o=[],i={},r={}}return{bind:c,update:l,dispose:m}}const CN=new Uint16Array([11481,15204,11534,15171,11808,15015,12385,14843,12894,14716,13396,14600,13693,14483,13976,14366,14237,14171,14405,13961,14511,13770,14605,13598,14687,13444,14760,13305,14822,13066,14876,12857,14923,12675,14963,12517,14997,12379,15025,12230,15049,12023,15070,11843,15086,11687,15100,11551,15111,11433,15120,11330,15127,11217,15132,11060,15135,10922,15138,10801,15139,10695,15139,10600,13012,14923,13020,14917,13064,14886,13176,14800,13349,14666,13513,14526,13724,14398,13960,14230,14200,14020,14383,13827,14488,13651,14583,13491,14667,13348,14740,13132,14803,12908,14856,12713,14901,12542,14938,12394,14968,12241,14992,12017,15010,11822,15024,11654,15034,11507,15041,11380,15044,11269,15044,11081,15042,10913,15037,10764,15031,10635,15023,10520,15014,10419,15003,10330,13657,14676,13658,14673,13670,14660,13698,14622,13750,14547,13834,14442,13956,14317,14112,14093,14291,13889,14407,13704,14499,13538,14586,13389,14664,13201,14733,12966,14792,12758,14842,12577,14882,12418,14915,12272,14940,12033,14959,11826,14972,11646,14980,11490,14983,11355,14983,11212,14979,11008,14971,10830,14961,10675,14950,10540,14936,10420,14923,10315,14909,10204,14894,10041,14089,14460,14090,14459,14096,14452,14112,14431,14141,14388,14186,14305,14252,14130,14341,13941,14399,13756,14467,13585,14539,13430,14610,13272,14677,13026,14737,12808,14790,12617,14833,12449,14869,12303,14896,12065,14916,11845,14929,11655,14937,11490,14939,11347,14936,11184,14930,10970,14921,10783,14912,10621,14900,10480,14885,10356,14867,10247,14848,10062,14827,9894,14805,9745,14400,14208,14400,14206,14402,14198,14406,14174,14415,14122,14427,14035,14444,13913,14469,13767,14504,13613,14548,13463,14598,13324,14651,13082,14704,12858,14752,12658,14795,12483,14831,12330,14860,12106,14881,11875,14895,11675,14903,11501,14905,11351,14903,11178,14900,10953,14892,10757,14880,10589,14865,10442,14847,10313,14827,10162,14805,9965,14782,9792,14757,9642,14731,9507,14562,13883,14562,13883,14563,13877,14566,13862,14570,13830,14576,13773,14584,13689,14595,13582,14613,13461,14637,13336,14668,13120,14704,12897,14741,12695,14776,12516,14808,12358,14835,12150,14856,11910,14870,11701,14878,11519,14882,11361,14884,11187,14880,10951,14871,10748,14858,10572,14842,10418,14823,10286,14801,10099,14777,9897,14751,9722,14725,9567,14696,9430,14666,9309,14702,13604,14702,13604,14702,13600,14703,13591,14705,13570,14707,13533,14709,13477,14712,13400,14718,13305,14727,13106,14743,12907,14762,12716,14784,12539,14807,12380,14827,12190,14844,11943,14855,11727,14863,11539,14870,11376,14871,11204,14868,10960,14858,10748,14845,10565,14829,10406,14809,10269,14786,10058,14761,9852,14734,9671,14705,9512,14674,9374,14641,9253,14608,9076,14821,13366,14821,13365,14821,13364,14821,13358,14821,13344,14821,13320,14819,13252,14817,13145,14815,13011,14814,12858,14817,12698,14823,12539,14832,12389,14841,12214,14850,11968,14856,11750,14861,11558,14866,11390,14867,11226,14862,10972,14853,10754,14840,10565,14823,10401,14803,10259,14780,10032,14754,9820,14725,9635,14694,9473,14661,9333,14627,9203,14593,8988,14557,8798,14923,13014,14922,13014,14922,13012,14922,13004,14920,12987,14919,12957,14915,12907,14909,12834,14902,12738,14894,12623,14888,12498,14883,12370,14880,12203,14878,11970,14875,11759,14873,11569,14874,11401,14872,11243,14865,10986,14855,10762,14842,10568,14825,10401,14804,10255,14781,10017,14754,9799,14725,9611,14692,9445,14658,9301,14623,9139,14587,8920,14548,8729,14509,8562,15008,12672,15008,12672,15008,12671,15007,12667,15005,12656,15001,12637,14997,12605,14989,12556,14978,12490,14966,12407,14953,12313,14940,12136,14927,11934,14914,11742,14903,11563,14896,11401,14889,11247,14879,10992,14866,10767,14851,10570,14833,10400,14812,10252,14789,10007,14761,9784,14731,9592,14698,9424,14663,9279,14627,9088,14588,8868,14548,8676,14508,8508,14467,8360,15080,12386,15080,12386,15079,12385,15078,12383,15076,12378,15072,12367,15066,12347,15057,12315,15045,12253,15030,12138,15012,11998,14993,11845,14972,11685,14951,11530,14935,11383,14920,11228,14904,10981,14887,10762,14870,10567,14850,10397,14827,10248,14803,9997,14774,9771,14743,9578,14710,9407,14674,9259,14637,9048,14596,8826,14555,8632,14514,8464,14471,8317,14427,8182,15139,12008,15139,12008,15138,12008,15137,12007,15135,12003,15130,11990,15124,11969,15115,11929,15102,11872,15086,11794,15064,11693,15041,11581,15013,11459,14987,11336,14966,11170,14944,10944,14921,10738,14898,10552,14875,10387,14850,10239,14824,9983,14794,9758,14762,9563,14728,9392,14692,9244,14653,9014,14611,8791,14569,8597,14526,8427,14481,8281,14436,8110,14391,7885,15188,11617,15188,11617,15187,11617,15186,11618,15183,11617,15179,11612,15173,11601,15163,11581,15150,11546,15133,11495,15110,11427,15083,11346,15051,11246,15024,11057,14996,10868,14967,10687,14938,10517,14911,10362,14882,10206,14853,9956,14821,9737,14787,9543,14752,9375,14715,9228,14675,8980,14632,8760,14589,8565,14544,8395,14498,8248,14451,8049,14404,7824,14357,7630,15228,11298,15228,11298,15227,11299,15226,11301,15223,11303,15219,11302,15213,11299,15204,11290,15191,11271,15174,11217,15150,11129,15119,11015,15087,10886,15057,10744,15024,10599,14990,10455,14957,10318,14924,10143,14891,9911,14856,9701,14820,9516,14782,9352,14744,9200,14703,8946,14659,8725,14615,8533,14568,8366,14521,8220,14472,7992,14423,7770,14374,7578,14315,7408,15260,10819,15260,10819,15259,10822,15258,10826,15256,10832,15251,10836,15246,10841,15237,10838,15225,10821,15207,10788,15183,10734,15151,10660,15120,10571,15087,10469,15049,10359,15012,10249,14974,10041,14937,9837,14900,9647,14860,9475,14820,9320,14779,9147,14736,8902,14691,8688,14646,8499,14598,8335,14549,8189,14499,7940,14448,7720,14397,7529,14347,7363,14256,7218,15285,10410,15285,10411,15285,10413,15284,10418,15282,10425,15278,10434,15272,10442,15264,10449,15252,10445,15235,10433,15210,10403,15179,10358,15149,10301,15113,10218,15073,10059,15033,9894,14991,9726,14951,9565,14909,9413,14865,9273,14822,9073,14777,8845,14730,8641,14682,8459,14633,8300,14583,8129,14531,7883,14479,7670,14426,7482,14373,7321,14305,7176,14201,6939,15305,9939,15305,9940,15305,9945,15304,9955,15302,9967,15298,9989,15293,10010,15286,10033,15274,10044,15258,10045,15233,10022,15205,9975,15174,9903,15136,9808,15095,9697,15053,9578,15009,9451,14965,9327,14918,9198,14871,8973,14825,8766,14775,8579,14725,8408,14675,8259,14622,8058,14569,7821,14515,7615,14460,7435,14405,7276,14350,7108,14256,6866,14149,6653,15321,9444,15321,9445,15321,9448,15320,9458,15317,9470,15314,9490,15310,9515,15302,9540,15292,9562,15276,9579,15251,9577,15226,9559,15195,9519,15156,9463,15116,9389,15071,9304,15025,9208,14978,9023,14927,8838,14878,8661,14827,8496,14774,8344,14722,8206,14667,7973,14612,7749,14556,7555,14499,7382,14443,7229,14385,7025,14322,6791,14210,6588,14100,6409,15333,8920,15333,8921,15332,8927,15332,8943,15329,8965,15326,9002,15322,9048,15316,9106,15307,9162,15291,9204,15267,9221,15244,9221,15212,9196,15175,9134,15133,9043,15088,8930,15040,8801,14990,8665,14938,8526,14886,8391,14830,8261,14775,8087,14719,7866,14661,7664,14603,7482,14544,7322,14485,7178,14426,6936,14367,6713,14281,6517,14166,6348,14054,6198,15341,8360,15341,8361,15341,8366,15341,8379,15339,8399,15336,8431,15332,8473,15326,8527,15318,8585,15302,8632,15281,8670,15258,8690,15227,8690,15191,8664,15149,8612,15104,8543,15055,8456,15001,8360,14948,8259,14892,8122,14834,7923,14776,7734,14716,7558,14656,7397,14595,7250,14534,7070,14472,6835,14410,6628,14350,6443,14243,6283,14125,6135,14010,5889,15348,7715,15348,7717,15348,7725,15347,7745,15345,7780,15343,7836,15339,7905,15334,8e3,15326,8103,15310,8193,15293,8239,15270,8270,15240,8287,15204,8283,15163,8260,15118,8223,15067,8143,15014,8014,14958,7873,14899,7723,14839,7573,14778,7430,14715,7293,14652,7164,14588,6931,14524,6720,14460,6531,14396,6362,14330,6210,14207,6015,14086,5781,13969,5576,15352,7114,15352,7116,15352,7128,15352,7159,15350,7195,15348,7237,15345,7299,15340,7374,15332,7457,15317,7544,15301,7633,15280,7703,15251,7754,15216,7775,15176,7767,15131,7733,15079,7670,15026,7588,14967,7492,14906,7387,14844,7278,14779,7171,14714,6965,14648,6770,14581,6587,14515,6420,14448,6269,14382,6123,14299,5881,14172,5665,14049,5477,13929,5310,15355,6329,15355,6330,15355,6339,15355,6362,15353,6410,15351,6472,15349,6572,15344,6688,15337,6835,15323,6985,15309,7142,15287,7220,15260,7277,15226,7310,15188,7326,15142,7318,15090,7285,15036,7239,14976,7177,14914,7045,14849,6892,14782,6736,14714,6581,14645,6433,14576,6293,14506,6164,14438,5946,14369,5733,14270,5540,14140,5369,14014,5216,13892,5043,15357,5483,15357,5484,15357,5496,15357,5528,15356,5597,15354,5692,15351,5835,15347,6011,15339,6195,15328,6317,15314,6446,15293,6566,15268,6668,15235,6746,15197,6796,15152,6811,15101,6790,15046,6748,14985,6673,14921,6583,14854,6479,14785,6371,14714,6259,14643,6149,14571,5946,14499,5750,14428,5567,14358,5401,14242,5250,14109,5111,13980,4870,13856,4657,15359,4555,15359,4557,15358,4573,15358,4633,15357,4715,15355,4841,15353,5061,15349,5216,15342,5391,15331,5577,15318,5770,15299,5967,15274,6150,15243,6223,15206,6280,15161,6310,15111,6317,15055,6300,14994,6262,14928,6208,14860,6141,14788,5994,14715,5838,14641,5684,14566,5529,14492,5384,14418,5247,14346,5121,14216,4892,14079,4682,13948,4496,13822,4330,15359,3498,15359,3501,15359,3520,15359,3598,15358,3719,15356,3860,15355,4137,15351,4305,15344,4563,15334,4809,15321,5116,15303,5273,15280,5418,15250,5547,15214,5653,15170,5722,15120,5761,15064,5763,15002,5733,14935,5673,14865,5597,14792,5504,14716,5400,14640,5294,14563,5185,14486,5041,14410,4841,14335,4655,14191,4482,14051,4325,13918,4183,13790,4012,15360,2282,15360,2285,15360,2306,15360,2401,15359,2547,15357,2748,15355,3103,15352,3349,15345,3675,15336,4020,15324,4272,15307,4496,15285,4716,15255,4908,15220,5086,15178,5170,15128,5214,15072,5234,15010,5231,14943,5206,14871,5166,14796,5102,14718,4971,14639,4833,14559,4687,14480,4541,14402,4401,14315,4268,14167,4142,14025,3958,13888,3747,13759,3556,15360,923,15360,925,15360,946,15360,1052,15359,1214,15357,1494,15356,1892,15352,2274,15346,2663,15338,3099,15326,3393,15309,3679,15288,3980,15260,4183,15226,4325,15185,4437,15136,4517,15080,4570,15018,4591,14950,4581,14877,4545,14800,4485,14720,4411,14638,4325,14556,4231,14475,4136,14395,3988,14297,3803,14145,3628,13999,3465,13861,3314,13729,3177,15360,263,15360,264,15360,272,15360,325,15359,407,15358,548,15356,780,15352,1144,15347,1580,15339,2099,15328,2425,15312,2795,15292,3133,15264,3329,15232,3517,15191,3689,15143,3819,15088,3923,15025,3978,14956,3999,14882,3979,14804,3931,14722,3855,14639,3756,14554,3645,14470,3529,14388,3409,14279,3289,14124,3173,13975,3055,13834,2848,13701,2658,15360,49,15360,49,15360,52,15360,75,15359,111,15358,201,15356,283,15353,519,15348,726,15340,1045,15329,1415,15314,1795,15295,2173,15269,2410,15237,2649,15197,2866,15150,3054,15095,3140,15032,3196,14963,3228,14888,3236,14808,3224,14725,3191,14639,3146,14553,3088,14466,2976,14382,2836,14262,2692,14103,2549,13952,2409,13808,2278,13674,2154,15360,4,15360,4,15360,4,15360,13,15359,33,15358,59,15357,112,15353,199,15348,302,15341,456,15331,628,15316,827,15297,1082,15272,1332,15241,1601,15202,1851,15156,2069,15101,2172,15039,2256,14970,2314,14894,2348,14813,2358,14728,2344,14640,2311,14551,2263,14463,2203,14376,2133,14247,2059,14084,1915,13930,1761,13784,1609,13648,1464,15360,0,15360,0,15360,0,15360,3,15359,18,15358,26,15357,53,15354,80,15348,97,15341,165,15332,238,15318,326,15299,427,15275,529,15245,654,15207,771,15161,885,15108,994,15046,1089,14976,1170,14900,1229,14817,1266,14731,1284,14641,1282,14550,1260,14460,1223,14370,1174,14232,1116,14066,1050,13909,981,13761,910,13623,839]);let Js=null;function PN(){return Js===null&&(Js=new sm(CN,32,32,hs,hn),Js.minFilter=ln,Js.magFilter=ln,Js.wrapS=gi,Js.wrapT=gi,Js.generateMipmaps=!1,Js.needsUpdate=!0),Js}class rG{constructor(e={}){const{canvas:t=Q_(),context:n=null,depth:i=!0,stencil:r=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:l=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1,reversedDepthBuffer:d=!1}=e;this.isWebGLRenderer=!0;let f;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=n.getContextAttributes().alpha}else f=o;const p=new Set([uc,lc,cc]),x=new Set([un,Kt,us,Fi,Oh,Vh]),g=new Uint32Array(4),m=new Int32Array(4);let b=null,y=null;const v=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=oi,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const S=this;let E=!1;this._outputColorSpace=di;let C=0,T=0,M=null,I=-1,G=null;const z=new Ke,$=new Ke;let Y=null;const q=new Ze(0);let he=0,K=t.width,ue=t.height,ye=1,Ie=null,yt=null;const pt=new Ke(0,0,K,ue),Mt=new Ke(0,0,K,ue);let wt=!1;const re=new Ol;let ce=!1,Fe=!1;const Je=new ht,ze=new P,bt=new Ke,qt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let dt=!1;function fe(){return M===null?ye:1}let D=n;function de(N,H){return t.getContext(N,H)}try{const N={alpha:!0,depth:i,stencil:r,antialias:a,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine","three.js r181"),t.addEventListener("webglcontextlost",be,!1),t.addEventListener("webglcontextrestored",ae,!1),t.addEventListener("webglcontextcreationerror",Xe,!1),D===null){const H="webgl2";if(D=de(H,N),D===null)throw de(H)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(N){throw N("WebGLRenderer: "+N.message),N}let ve,Ee,_e,We,Ce,Ve,L,A,X,se,le,ne,Qe,Pe,tt,Ye,pe,Ae,lt,ot,Oe,mt,V,Le;function we(){ve=new Gw(D),ve.init(),mt=new SN(D,ve),Ee=new Pw(D,ve,e,mt),_e=new bN(D,ve),Ee.reversedDepthBuffer&&d&&_e.buffers.depth.setReversed(!0),We=new Hw(D),Ce=new aN,Ve=new vN(D,ve,_e,Ce,Ee,mt,We),L=new Dw(S),A=new Vw(S),X=new qE(D),V=new Nw(D,X),se=new zw(D,X,We,V),le=new $w(D,se,X,We),lt=new Ww(D,Ee,Ve),Ye=new Lw(Ce),ne=new oN(S,L,A,ve,Ee,V,Ye),Qe=new RN(S,Ce),Pe=new lN,tt=new mN(ve),Ae=new Rw(S,L,A,_e,le,f,c),pe=new _N(S,le,Ee),Le=new NN(D,We,Ee,_e),ot=new Cw(D,ve,We),Oe=new kw(D,ve,We),We.programs=ne.programs,S.capabilities=Ee,S.extensions=ve,S.properties=Ce,S.renderLists=Pe,S.shadowMap=pe,S.state=_e,S.info=We}we();const Re=new AN(S,D);this.xr=Re,this.getContext=function(){return D},this.getContextAttributes=function(){return D.getContextAttributes()},this.forceContextLoss=function(){const N=ve.get("WEBGL_lose_context");N&&N.loseContext()},this.forceContextRestore=function(){const N=ve.get("WEBGL_lose_context");N&&N.restoreContext()},this.getPixelRatio=function(){return ye},this.setPixelRatio=function(N){N!==void 0&&(ye=N,this.setSize(K,ue,!1))},this.getSize=function(N){return N.set(K,ue)},this.setSize=function(N,H,j=!0){if(Re.isPresenting){te("WebGLRenderer: Can't change size while VR device is presenting.");return}K=N,ue=H,t.width=Math.floor(N*ye),t.height=Math.floor(H*ye),j===!0&&(t.style.width=N+"px",t.style.height=H+"px"),this.setViewport(0,0,N,H)},this.getDrawingBufferSize=function(N){return N.set(K*ye,ue*ye).floor()},this.setDrawingBufferSize=function(N,H,j){K=N,ue=H,ye=j,t.width=Math.floor(N*j),t.height=Math.floor(H*j),this.setViewport(0,0,N,H)},this.getCurrentViewport=function(N){return N.copy(z)},this.getViewport=function(N){return N.copy(pt)},this.setViewport=function(N,H,j,Q){N.isVector4?pt.set(N.x,N.y,N.z,N.w):pt.set(N,H,j,Q),_e.viewport(z.copy(pt).multiplyScalar(ye).round())},this.getScissor=function(N){return N.copy(Mt)},this.setScissor=function(N,H,j,Q){N.isVector4?Mt.set(N.x,N.y,N.z,N.w):Mt.set(N,H,j,Q),_e.scissor($.copy(Mt).multiplyScalar(ye).round())},this.getScissorTest=function(){return wt},this.setScissorTest=function(N){_e.setScissorTest(wt=N)},this.setOpaqueSort=function(N){Ie=N},this.setTransparentSort=function(N){yt=N},this.getClearColor=function(N){return N.copy(Ae.getClearColor())},this.setClearColor=function(){Ae.setClearColor(...arguments)},this.getClearAlpha=function(){return Ae.getClearAlpha()},this.setClearAlpha=function(){Ae.setClearAlpha(...arguments)},this.clear=function(N=!0,H=!0,j=!0){let Q=0;if(N){let W=!1;if(M!==null){const Me=M.texture.format;W=p.has(Me)}if(W){const Me=M.texture.type,Be=x.has(Me),qe=Ae.getClearColor(),He=Ae.getClearAlpha(),ct=qe.r,ft=qe.g,nt=qe.b;Be?(g[0]=ct,g[1]=ft,g[2]=nt,g[3]=He,D.clearBufferuiv(D.COLOR,0,g)):(m[0]=ct,m[1]=ft,m[2]=nt,m[3]=He,D.clearBufferiv(D.COLOR,0,m))}else Q|=D.COLOR_BUFFER_BIT}H&&(Q|=D.DEPTH_BUFFER_BIT),j&&(Q|=D.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),D.clear(Q)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",be,!1),t.removeEventListener("webglcontextrestored",ae,!1),t.removeEventListener("webglcontextcreationerror",Xe,!1),Ae.dispose(),Pe.dispose(),tt.dispose(),Ce.dispose(),L.dispose(),A.dispose(),le.dispose(),V.dispose(),Le.dispose(),ne.dispose(),Re.dispose(),Re.removeEventListener("sessionstart",Wg),Re.removeEventListener("sessionend",$g),jr.stop()};function be(N){N.preventDefault(),yl("WebGLRenderer: Context Lost."),E=!0}function ae(){yl("WebGLRenderer: Context Restored."),E=!1;const N=We.autoReset,H=pe.enabled,j=pe.autoUpdate,Q=pe.needsUpdate,W=pe.type;we(),We.autoReset=N,pe.enabled=H,pe.autoUpdate=j,pe.needsUpdate=Q,pe.type=W}function Xe(N){ge("WebGLRenderer: A WebGL context could not be created. Reason: ",N.statusMessage)}function _t(N){const H=N.target;H.removeEventListener("dispose",_t),en(H)}function en(N){zt(N),Ce.remove(N)}function zt(N){const H=Ce.get(N).programs;H!==void 0&&(H.forEach(function(j){ne.releaseProgram(j)}),N.isShaderMaterial&&ne.releaseShaderCache(N))}this.renderBufferDirect=function(N,H,j,Q,W,Me){H===null&&(H=qt);const Be=W.isMesh&&W.matrixWorld.determinant()<0,qe=gM(N,H,j,Q,W);_e.setMaterial(Q,Be);let He=j.index,ct=1;if(Q.wireframe===!0){if(He=se.getWireframeAttribute(j),He===void 0)return;ct=2}const ft=j.drawRange,nt=j.attributes.position;let Rt=ft.start*ct,kt=(ft.start+ft.count)*ct;Me!==null&&(Rt=Math.max(Rt,Me.start*ct),kt=Math.min(kt,(Me.start+Me.count)*ct)),He!==null?(Rt=Math.max(Rt,0),kt=Math.min(kt,He.count)):nt!=null&&(Rt=Math.max(Rt,0),kt=Math.min(kt,nt.count));const pn=kt-Rt;if(pn<0||pn===1/0)return;V.setup(W,Q,qe,j,He);let mn,Yt=ot;if(He!==null&&(mn=X.get(He),Yt=Oe,Yt.setIndex(mn)),W.isMesh)Q.wireframe===!0?(_e.setLineWidth(Q.wireframeLinewidth*fe()),Yt.setMode(D.LINES)):Yt.setMode(D.TRIANGLES);else if(W.isLine){let rt=Q.linewidth;rt===void 0&&(rt=1),_e.setLineWidth(rt*fe()),W.isLineSegments?Yt.setMode(D.LINES):W.isLineLoop?Yt.setMode(D.LINE_LOOP):Yt.setMode(D.LINE_STRIP)}else W.isPoints?Yt.setMode(D.POINTS):W.isSprite&&Yt.setMode(D.TRIANGLES);if(W.isBatchedMesh)if(W._multiDrawInstances!==null)Wt("WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Yt.renderMultiDrawInstances(W._multiDrawStarts,W._multiDrawCounts,W._multiDrawCount,W._multiDrawInstances);else if(ve.get("WEBGL_multi_draw"))Yt.renderMultiDraw(W._multiDrawStarts,W._multiDrawCounts,W._multiDrawCount);else{const rt=W._multiDrawStarts,rn=W._multiDrawCounts,Pt=W._multiDrawCount,Ai=He?X.get(He).bytesPerElement:1,Vo=Ce.get(Q).currentProgram.getUniforms();for(let wi=0;wi<Pt;wi++)Vo.setValue(D,"_gl_DrawID",wi),Yt.render(rt[wi]/Ai,rn[wi])}else if(W.isInstancedMesh)Yt.renderInstances(Rt,pn,W.count);else if(j.isInstancedBufferGeometry){const rt=j._maxInstanceCount!==void 0?j._maxInstanceCount:1/0,rn=Math.min(j.instanceCount,rt);Yt.renderInstances(Rt,pn,rn)}else Yt.render(Rt,pn)};function _s(N,H,j){N.transparent===!0&&N.side===jn&&N.forceSinglePass===!1?(N.side=Xt,N.needsUpdate=!0,nu(N,H,j),N.side=Ui,N.needsUpdate=!0,nu(N,H,j),N.side=jn):nu(N,H,j)}this.compile=function(N,H,j=null){j===null&&(j=N),y=tt.get(j),y.init(H),w.push(y),j.traverseVisible(function(W){W.isLight&&W.layers.test(H.layers)&&(y.pushLight(W),W.castShadow&&y.pushShadow(W))}),N!==j&&N.traverseVisible(function(W){W.isLight&&W.layers.test(H.layers)&&(y.pushLight(W),W.castShadow&&y.pushShadow(W))}),y.setupLights();const Q=new Set;return N.traverse(function(W){if(!(W.isMesh||W.isPoints||W.isLine||W.isSprite))return;const Me=W.material;if(Me)if(Array.isArray(Me))for(let Be=0;Be<Me.length;Be++){const qe=Me[Be];_s(qe,j,W),Q.add(qe)}else _s(Me,j,W),Q.add(Me)}),y=w.pop(),Q},this.compileAsync=function(N,H,j=null){const Q=this.compile(N,H,j);return new Promise(W=>{function Me(){if(Q.forEach(function(Be){Ce.get(Be).currentProgram.isReady()&&Q.delete(Be)}),Q.size===0){W(N);return}setTimeout(Me,10)}ve.get("KHR_parallel_shader_compile")!==null?Me():setTimeout(Me,10)})};let is=null;function mM(N){is&&is(N)}function Wg(){jr.stop()}function $g(){jr.start()}const jr=new yy;jr.setAnimationLoop(mM),typeof self<"u"&&jr.setContext(self),this.setAnimationLoop=function(N){is=N,Re.setAnimationLoop(N),N===null?jr.stop():jr.start()},Re.addEventListener("sessionstart",Wg),Re.addEventListener("sessionend",$g),this.render=function(N,H){if(H!==void 0&&H.isCamera!==!0){ge("WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(E===!0)return;if(N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),H.parent===null&&H.matrixWorldAutoUpdate===!0&&H.updateMatrixWorld(),Re.enabled===!0&&Re.isPresenting===!0&&(Re.cameraAutoUpdate===!0&&Re.updateCamera(H),H=Re.getCamera()),N.isScene===!0&&N.onBeforeRender(S,N,H,M),y=tt.get(N,w.length),y.init(H),w.push(y),Je.multiplyMatrices(H.projectionMatrix,H.matrixWorldInverse),re.setFromProjectionMatrix(Je,ai,H.reversedDepth),Fe=this.localClippingEnabled,ce=Ye.init(this.clippingPlanes,Fe),b=Pe.get(N,v.length),b.init(),v.push(b),Re.enabled===!0&&Re.isPresenting===!0){const Me=S.xr.getDepthSensingMesh();Me!==null&&Ad(Me,H,-1/0,S.sortObjects)}Ad(N,H,0,S.sortObjects),b.finish(),S.sortObjects===!0&&b.sort(Ie,yt),dt=Re.enabled===!1||Re.isPresenting===!1||Re.hasDepthSensing()===!1,dt&&Ae.addToRenderList(b,N),this.info.render.frame++,ce===!0&&Ye.beginShadows();const j=y.state.shadowsArray;pe.render(j,N,H),ce===!0&&Ye.endShadows(),this.info.autoReset===!0&&this.info.reset();const Q=b.opaque,W=b.transmissive;if(y.setupLights(),H.isArrayCamera){const Me=H.cameras;if(W.length>0)for(let Be=0,qe=Me.length;Be<qe;Be++){const He=Me[Be];qg(Q,W,N,He)}dt&&Ae.render(N);for(let Be=0,qe=Me.length;Be<qe;Be++){const He=Me[Be];Xg(b,N,He,He.viewport)}}else W.length>0&&qg(Q,W,N,H),dt&&Ae.render(N),Xg(b,N,H);M!==null&&T===0&&(Ve.updateMultisampleRenderTarget(M),Ve.updateRenderTargetMipmap(M)),N.isScene===!0&&N.onAfterRender(S,N,H),V.resetDefaultState(),I=-1,G=null,w.pop(),w.length>0?(y=w[w.length-1],ce===!0&&Ye.setGlobalState(S.clippingPlanes,y.state.camera)):y=null,v.pop(),v.length>0?b=v[v.length-1]:b=null};function Ad(N,H,j,Q){if(N.visible===!1)return;if(N.layers.test(H.layers)){if(N.isGroup)j=N.renderOrder;else if(N.isLOD)N.autoUpdate===!0&&N.update(H);else if(N.isLight)y.pushLight(N),N.castShadow&&y.pushShadow(N);else if(N.isSprite){if(!N.frustumCulled||re.intersectsSprite(N)){Q&&bt.setFromMatrixPosition(N.matrixWorld).applyMatrix4(Je);const Be=le.update(N),qe=N.material;qe.visible&&b.push(N,Be,qe,j,bt.z,null)}}else if((N.isMesh||N.isLine||N.isPoints)&&(!N.frustumCulled||re.intersectsObject(N))){const Be=le.update(N),qe=N.material;if(Q&&(N.boundingSphere!==void 0?(N.boundingSphere===null&&N.computeBoundingSphere(),bt.copy(N.boundingSphere.center)):(Be.boundingSphere===null&&Be.computeBoundingSphere(),bt.copy(Be.boundingSphere.center)),bt.applyMatrix4(N.matrixWorld).applyMatrix4(Je)),Array.isArray(qe)){const He=Be.groups;for(let ct=0,ft=He.length;ct<ft;ct++){const nt=He[ct],Rt=qe[nt.materialIndex];Rt&&Rt.visible&&b.push(N,Be,Rt,j,bt.z,nt)}}else qe.visible&&b.push(N,Be,qe,j,bt.z,null)}}const Me=N.children;for(let Be=0,qe=Me.length;Be<qe;Be++)Ad(Me[Be],H,j,Q)}function Xg(N,H,j,Q){const{opaque:W,transmissive:Me,transparent:Be}=N;y.setupLightsView(j),ce===!0&&Ye.setGlobalState(S.clippingPlanes,j),Q&&_e.viewport(z.copy(Q)),W.length>0&&tu(W,H,j),Me.length>0&&tu(Me,H,j),Be.length>0&&tu(Be,H,j),_e.buffers.depth.setTest(!0),_e.buffers.depth.setMask(!0),_e.buffers.color.setMask(!0),_e.setPolygonOffset(!1)}function qg(N,H,j,Q){if((j.isScene===!0?j.overrideMaterial:null)!==null)return;y.state.transmissionRenderTarget[Q.id]===void 0&&(y.state.transmissionRenderTarget[Q.id]=new zr(1,1,{generateMipmaps:!0,type:ve.has("EXT_color_buffer_half_float")||ve.has("EXT_color_buffer_float")?hn:un,minFilter:xi,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:et.workingColorSpace}));const Me=y.state.transmissionRenderTarget[Q.id],Be=Q.viewport||z;Me.setSize(Be.z*S.transmissionResolutionScale,Be.w*S.transmissionResolutionScale);const qe=S.getRenderTarget(),He=S.getActiveCubeFace(),ct=S.getActiveMipmapLevel();S.setRenderTarget(Me),S.getClearColor(q),he=S.getClearAlpha(),he<1&&S.setClearColor(16777215,.5),S.clear(),dt&&Ae.render(j);const ft=S.toneMapping;S.toneMapping=oi;const nt=Q.viewport;if(Q.viewport!==void 0&&(Q.viewport=void 0),y.setupLightsView(Q),ce===!0&&Ye.setGlobalState(S.clippingPlanes,Q),tu(N,j,Q),Ve.updateMultisampleRenderTarget(Me),Ve.updateRenderTargetMipmap(Me),ve.has("WEBGL_multisampled_render_to_texture")===!1){let Rt=!1;for(let kt=0,pn=H.length;kt<pn;kt++){const mn=H[kt],{object:Yt,geometry:rt,material:rn,group:Pt}=mn;if(rn.side===jn&&Yt.layers.test(Q.layers)){const Ai=rn.side;rn.side=Xt,rn.needsUpdate=!0,Yg(Yt,j,Q,rt,rn,Pt),rn.side=Ai,rn.needsUpdate=!0,Rt=!0}}Rt===!0&&(Ve.updateMultisampleRenderTarget(Me),Ve.updateRenderTargetMipmap(Me))}S.setRenderTarget(qe,He,ct),S.setClearColor(q,he),nt!==void 0&&(Q.viewport=nt),S.toneMapping=ft}function tu(N,H,j){const Q=H.isScene===!0?H.overrideMaterial:null;for(let W=0,Me=N.length;W<Me;W++){const Be=N[W],{object:qe,geometry:He,group:ct}=Be;let ft=Be.material;ft.allowOverride===!0&&Q!==null&&(ft=Q),qe.layers.test(j.layers)&&Yg(qe,H,j,He,ft,ct)}}function Yg(N,H,j,Q,W,Me){N.onBeforeRender(S,H,j,Q,W,Me),N.modelViewMatrix.multiplyMatrices(j.matrixWorldInverse,N.matrixWorld),N.normalMatrix.getNormalMatrix(N.modelViewMatrix),W.onBeforeRender(S,H,j,Q,N,Me),W.transparent===!0&&W.side===jn&&W.forceSinglePass===!1?(W.side=Xt,W.needsUpdate=!0,S.renderBufferDirect(j,H,Q,W,N,Me),W.side=Ui,W.needsUpdate=!0,S.renderBufferDirect(j,H,Q,W,N,Me),W.side=jn):S.renderBufferDirect(j,H,Q,W,N,Me),N.onAfterRender(S,H,j,Q,W,Me)}function nu(N,H,j){H.isScene!==!0&&(H=qt);const Q=Ce.get(N),W=y.state.lights,Me=y.state.shadowsArray,Be=W.state.version,qe=ne.getParameters(N,W.state,Me,H,j),He=ne.getProgramCacheKey(qe);let ct=Q.programs;Q.environment=N.isMeshStandardMaterial?H.environment:null,Q.fog=H.fog,Q.envMap=(N.isMeshStandardMaterial?A:L).get(N.envMap||Q.environment),Q.envMapRotation=Q.environment!==null&&N.envMap===null?H.environmentRotation:N.envMapRotation,ct===void 0&&(N.addEventListener("dispose",_t),ct=new Map,Q.programs=ct);let ft=ct.get(He);if(ft!==void 0){if(Q.currentProgram===ft&&Q.lightsStateVersion===Be)return Kg(N,qe),ft}else qe.uniforms=ne.getUniforms(N),N.onBeforeCompile(qe,S),ft=ne.acquireProgram(qe,He),ct.set(He,ft),Q.uniforms=qe.uniforms;const nt=Q.uniforms;return(!N.isShaderMaterial&&!N.isRawShaderMaterial||N.clipping===!0)&&(nt.clippingPlanes=Ye.uniform),Kg(N,qe),Q.needsLights=_M(N),Q.lightsStateVersion=Be,Q.needsLights&&(nt.ambientLightColor.value=W.state.ambient,nt.lightProbe.value=W.state.probe,nt.directionalLights.value=W.state.directional,nt.directionalLightShadows.value=W.state.directionalShadow,nt.spotLights.value=W.state.spot,nt.spotLightShadows.value=W.state.spotShadow,nt.rectAreaLights.value=W.state.rectArea,nt.ltc_1.value=W.state.rectAreaLTC1,nt.ltc_2.value=W.state.rectAreaLTC2,nt.pointLights.value=W.state.point,nt.pointLightShadows.value=W.state.pointShadow,nt.hemisphereLights.value=W.state.hemi,nt.directionalShadowMap.value=W.state.directionalShadowMap,nt.directionalShadowMatrix.value=W.state.directionalShadowMatrix,nt.spotShadowMap.value=W.state.spotShadowMap,nt.spotLightMatrix.value=W.state.spotLightMatrix,nt.spotLightMap.value=W.state.spotLightMap,nt.pointShadowMap.value=W.state.pointShadowMap,nt.pointShadowMatrix.value=W.state.pointShadowMatrix),Q.currentProgram=ft,Q.uniformsList=null,ft}function jg(N){if(N.uniformsList===null){const H=N.currentProgram.getUniforms();N.uniformsList=lh.seqWithValue(H.seq,N.uniforms)}return N.uniformsList}function Kg(N,H){const j=Ce.get(N);j.outputColorSpace=H.outputColorSpace,j.batching=H.batching,j.batchingColor=H.batchingColor,j.instancing=H.instancing,j.instancingColor=H.instancingColor,j.instancingMorph=H.instancingMorph,j.skinning=H.skinning,j.morphTargets=H.morphTargets,j.morphNormals=H.morphNormals,j.morphColors=H.morphColors,j.morphTargetsCount=H.morphTargetsCount,j.numClippingPlanes=H.numClippingPlanes,j.numIntersection=H.numClipIntersection,j.vertexAlphas=H.vertexAlphas,j.vertexTangents=H.vertexTangents,j.toneMapping=H.toneMapping}function gM(N,H,j,Q,W){H.isScene!==!0&&(H=qt),Ve.resetTextureUnits();const Me=H.fog,Be=Q.isMeshStandardMaterial?H.environment:null,qe=M===null?S.outputColorSpace:M.isXRRenderTarget===!0?M.texture.colorSpace:Gr,He=(Q.isMeshStandardMaterial?A:L).get(Q.envMap||Be),ct=Q.vertexColors===!0&&!!j.attributes.color&&j.attributes.color.itemSize===4,ft=!!j.attributes.tangent&&(!!Q.normalMap||Q.anisotropy>0),nt=!!j.morphAttributes.position,Rt=!!j.morphAttributes.normal,kt=!!j.morphAttributes.color;let pn=oi;Q.toneMapped&&(M===null||M.isXRRenderTarget===!0)&&(pn=S.toneMapping);const mn=j.morphAttributes.position||j.morphAttributes.normal||j.morphAttributes.color,Yt=mn!==void 0?mn.length:0,rt=Ce.get(Q),rn=y.state.lights;if(ce===!0&&(Fe===!0||N!==G)){const ti=N===G&&Q.id===I;Ye.setState(Q,N,ti)}let Pt=!1;Q.version===rt.__version?(rt.needsLights&&rt.lightsStateVersion!==rn.state.version||rt.outputColorSpace!==qe||W.isBatchedMesh&&rt.batching===!1||!W.isBatchedMesh&&rt.batching===!0||W.isBatchedMesh&&rt.batchingColor===!0&&W.colorTexture===null||W.isBatchedMesh&&rt.batchingColor===!1&&W.colorTexture!==null||W.isInstancedMesh&&rt.instancing===!1||!W.isInstancedMesh&&rt.instancing===!0||W.isSkinnedMesh&&rt.skinning===!1||!W.isSkinnedMesh&&rt.skinning===!0||W.isInstancedMesh&&rt.instancingColor===!0&&W.instanceColor===null||W.isInstancedMesh&&rt.instancingColor===!1&&W.instanceColor!==null||W.isInstancedMesh&&rt.instancingMorph===!0&&W.morphTexture===null||W.isInstancedMesh&&rt.instancingMorph===!1&&W.morphTexture!==null||rt.envMap!==He||Q.fog===!0&&rt.fog!==Me||rt.numClippingPlanes!==void 0&&(rt.numClippingPlanes!==Ye.numPlanes||rt.numIntersection!==Ye.numIntersection)||rt.vertexAlphas!==ct||rt.vertexTangents!==ft||rt.morphTargets!==nt||rt.morphNormals!==Rt||rt.morphColors!==kt||rt.toneMapping!==pn||rt.morphTargetsCount!==Yt)&&(Pt=!0):(Pt=!0,rt.__version=Q.version);let Ai=rt.currentProgram;Pt===!0&&(Ai=nu(Q,H,W));let Vo=!1,wi=!1,yc=!1;const on=Ai.getUniforms(),li=rt.uniforms;if(_e.useProgram(Ai.program)&&(Vo=!0,wi=!0,yc=!0),Q.id!==I&&(I=Q.id,wi=!0),Vo||G!==N){_e.buffers.depth.getReversed()&&N.reversedDepth!==!0&&(N._reversedDepth=!0,N.updateProjectionMatrix()),on.setValue(D,"projectionMatrix",N.projectionMatrix),on.setValue(D,"viewMatrix",N.matrixWorldInverse);const ui=on.map.cameraPosition;ui!==void 0&&ui.setValue(D,ze.setFromMatrixPosition(N.matrixWorld)),Ee.logarithmicDepthBuffer&&on.setValue(D,"logDepthBufFC",2/(Math.log(N.far+1)/Math.LN2)),(Q.isMeshPhongMaterial||Q.isMeshToonMaterial||Q.isMeshLambertMaterial||Q.isMeshBasicMaterial||Q.isMeshStandardMaterial||Q.isShaderMaterial)&&on.setValue(D,"isOrthographic",N.isOrthographicCamera===!0),G!==N&&(G=N,wi=!0,yc=!0)}if(W.isSkinnedMesh){on.setOptional(D,W,"bindMatrix"),on.setOptional(D,W,"bindMatrixInverse");const ti=W.skeleton;ti&&(ti.boneTexture===null&&ti.computeBoneTexture(),on.setValue(D,"boneTexture",ti.boneTexture,Ve))}W.isBatchedMesh&&(on.setOptional(D,W,"batchingTexture"),on.setValue(D,"batchingTexture",W._matricesTexture,Ve),on.setOptional(D,W,"batchingIdTexture"),on.setValue(D,"batchingIdTexture",W._indirectTexture,Ve),on.setOptional(D,W,"batchingColorTexture"),W._colorsTexture!==null&&on.setValue(D,"batchingColorTexture",W._colorsTexture,Ve));const zi=j.morphAttributes;if((zi.position!==void 0||zi.normal!==void 0||zi.color!==void 0)&&lt.update(W,j,Ai),(wi||rt.receiveShadow!==W.receiveShadow)&&(rt.receiveShadow=W.receiveShadow,on.setValue(D,"receiveShadow",W.receiveShadow)),Q.isMeshGouraudMaterial&&Q.envMap!==null&&(li.envMap.value=He,li.flipEnvMap.value=He.isCubeTexture&&He.isRenderTargetTexture===!1?-1:1),Q.isMeshStandardMaterial&&Q.envMap===null&&H.environment!==null&&(li.envMapIntensity.value=H.environmentIntensity),li.dfgLUT!==void 0&&(li.dfgLUT.value=PN()),wi&&(on.setValue(D,"toneMappingExposure",S.toneMappingExposure),rt.needsLights&&xM(li,yc),Me&&Q.fog===!0&&Qe.refreshFogUniforms(li,Me),Qe.refreshMaterialUniforms(li,Q,ye,ue,y.state.transmissionRenderTarget[N.id]),lh.upload(D,jg(rt),li,Ve)),Q.isShaderMaterial&&Q.uniformsNeedUpdate===!0&&(lh.upload(D,jg(rt),li,Ve),Q.uniformsNeedUpdate=!1),Q.isSpriteMaterial&&on.setValue(D,"center",W.center),on.setValue(D,"modelViewMatrix",W.modelViewMatrix),on.setValue(D,"normalMatrix",W.normalMatrix),on.setValue(D,"modelMatrix",W.matrixWorld),Q.isShaderMaterial||Q.isRawShaderMaterial){const ti=Q.uniformsGroups;for(let ui=0,wd=ti.length;ui<wd;ui++){const Kr=ti[ui];Le.update(Kr,Ai),Le.bind(Kr,Ai)}}return Ai}function xM(N,H){N.ambientLightColor.needsUpdate=H,N.lightProbe.needsUpdate=H,N.directionalLights.needsUpdate=H,N.directionalLightShadows.needsUpdate=H,N.pointLights.needsUpdate=H,N.pointLightShadows.needsUpdate=H,N.spotLights.needsUpdate=H,N.spotLightShadows.needsUpdate=H,N.rectAreaLights.needsUpdate=H,N.hemisphereLights.needsUpdate=H}function _M(N){return N.isMeshLambertMaterial||N.isMeshToonMaterial||N.isMeshPhongMaterial||N.isMeshStandardMaterial||N.isShadowMaterial||N.isShaderMaterial&&N.lights===!0}this.getActiveCubeFace=function(){return C},this.getActiveMipmapLevel=function(){return T},this.getRenderTarget=function(){return M},this.setRenderTargetTextures=function(N,H,j){const Q=Ce.get(N);Q.__autoAllocateDepthBuffer=N.resolveDepthBuffer===!1,Q.__autoAllocateDepthBuffer===!1&&(Q.__useRenderToTexture=!1),Ce.get(N.texture).__webglTexture=H,Ce.get(N.depthTexture).__webglTexture=Q.__autoAllocateDepthBuffer?void 0:j,Q.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(N,H){const j=Ce.get(N);j.__webglFramebuffer=H,j.__useDefaultFramebuffer=H===void 0};const yM=D.createFramebuffer();this.setRenderTarget=function(N,H=0,j=0){M=N,C=H,T=j;let Q=!0,W=null,Me=!1,Be=!1;if(N){const He=Ce.get(N);if(He.__useDefaultFramebuffer!==void 0)_e.bindFramebuffer(D.FRAMEBUFFER,null),Q=!1;else if(He.__webglFramebuffer===void 0)Ve.setupRenderTarget(N);else if(He.__hasExternalTextures)Ve.rebindTextures(N,Ce.get(N.texture).__webglTexture,Ce.get(N.depthTexture).__webglTexture);else if(N.depthBuffer){const nt=N.depthTexture;if(He.__boundDepthTexture!==nt){if(nt!==null&&Ce.has(nt)&&(N.width!==nt.image.width||N.height!==nt.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");Ve.setupDepthRenderbuffer(N)}}const ct=N.texture;(ct.isData3DTexture||ct.isDataArrayTexture||ct.isCompressedArrayTexture)&&(Be=!0);const ft=Ce.get(N).__webglFramebuffer;N.isWebGLCubeRenderTarget?(Array.isArray(ft[H])?W=ft[H][j]:W=ft[H],Me=!0):N.samples>0&&Ve.useMultisampledRTT(N)===!1?W=Ce.get(N).__webglMultisampledFramebuffer:Array.isArray(ft)?W=ft[j]:W=ft,z.copy(N.viewport),$.copy(N.scissor),Y=N.scissorTest}else z.copy(pt).multiplyScalar(ye).floor(),$.copy(Mt).multiplyScalar(ye).floor(),Y=wt;if(j!==0&&(W=yM),_e.bindFramebuffer(D.FRAMEBUFFER,W)&&Q&&_e.drawBuffers(N,W),_e.viewport(z),_e.scissor($),_e.setScissorTest(Y),Me){const He=Ce.get(N.texture);D.framebufferTexture2D(D.FRAMEBUFFER,D.COLOR_ATTACHMENT0,D.TEXTURE_CUBE_MAP_POSITIVE_X+H,He.__webglTexture,j)}else if(Be){const He=H;for(let ct=0;ct<N.textures.length;ct++){const ft=Ce.get(N.textures[ct]);D.framebufferTextureLayer(D.FRAMEBUFFER,D.COLOR_ATTACHMENT0+ct,ft.__webglTexture,j,He)}}else if(N!==null&&j!==0){const He=Ce.get(N.texture);D.framebufferTexture2D(D.FRAMEBUFFER,D.COLOR_ATTACHMENT0,D.TEXTURE_2D,He.__webglTexture,j)}I=-1},this.readRenderTargetPixels=function(N,H,j,Q,W,Me,Be,qe=0){if(!(N&&N.isWebGLRenderTarget)){ge("WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let He=Ce.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&Be!==void 0&&(He=He[Be]),He){_e.bindFramebuffer(D.FRAMEBUFFER,He);try{const ct=N.textures[qe],ft=ct.format,nt=ct.type;if(!Ee.textureFormatReadable(ft)){ge("WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Ee.textureTypeReadable(nt)){ge("WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}H>=0&&H<=N.width-Q&&j>=0&&j<=N.height-W&&(N.textures.length>1&&D.readBuffer(D.COLOR_ATTACHMENT0+qe),D.readPixels(H,j,Q,W,mt.convert(ft),mt.convert(nt),Me))}finally{const ct=M!==null?Ce.get(M).__webglFramebuffer:null;_e.bindFramebuffer(D.FRAMEBUFFER,ct)}}},this.readRenderTargetPixelsAsync=async function(N,H,j,Q,W,Me,Be,qe=0){if(!(N&&N.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let He=Ce.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&Be!==void 0&&(He=He[Be]),He)if(H>=0&&H<=N.width-Q&&j>=0&&j<=N.height-W){_e.bindFramebuffer(D.FRAMEBUFFER,He);const ct=N.textures[qe],ft=ct.format,nt=ct.type;if(!Ee.textureFormatReadable(ft))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Ee.textureTypeReadable(nt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const Rt=D.createBuffer();D.bindBuffer(D.PIXEL_PACK_BUFFER,Rt),D.bufferData(D.PIXEL_PACK_BUFFER,Me.byteLength,D.STREAM_READ),N.textures.length>1&&D.readBuffer(D.COLOR_ATTACHMENT0+qe),D.readPixels(H,j,Q,W,mt.convert(ft),mt.convert(nt),0);const kt=M!==null?Ce.get(M).__webglFramebuffer:null;_e.bindFramebuffer(D.FRAMEBUFFER,kt);const pn=D.fenceSync(D.SYNC_GPU_COMMANDS_COMPLETE,0);return D.flush(),await jM(D,pn,4),D.bindBuffer(D.PIXEL_PACK_BUFFER,Rt),D.getBufferSubData(D.PIXEL_PACK_BUFFER,0,Me),D.deleteBuffer(Rt),D.deleteSync(pn),Me}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(N,H=null,j=0){const Q=Math.pow(2,-j),W=Math.floor(N.image.width*Q),Me=Math.floor(N.image.height*Q),Be=H!==null?H.x:0,qe=H!==null?H.y:0;Ve.setTexture2D(N,0),D.copyTexSubImage2D(D.TEXTURE_2D,j,0,0,Be,qe,W,Me),_e.unbindTexture()};const bM=D.createFramebuffer(),vM=D.createFramebuffer();this.copyTextureToTexture=function(N,H,j=null,Q=null,W=0,Me=null){Me===null&&(W!==0?(Wt("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Me=W,W=0):Me=0);let Be,qe,He,ct,ft,nt,Rt,kt,pn;const mn=N.isCompressedTexture?N.mipmaps[Me]:N.image;if(j!==null)Be=j.max.x-j.min.x,qe=j.max.y-j.min.y,He=j.isBox3?j.max.z-j.min.z:1,ct=j.min.x,ft=j.min.y,nt=j.isBox3?j.min.z:0;else{const zi=Math.pow(2,-W);Be=Math.floor(mn.width*zi),qe=Math.floor(mn.height*zi),N.isDataArrayTexture?He=mn.depth:N.isData3DTexture?He=Math.floor(mn.depth*zi):He=1,ct=0,ft=0,nt=0}Q!==null?(Rt=Q.x,kt=Q.y,pn=Q.z):(Rt=0,kt=0,pn=0);const Yt=mt.convert(H.format),rt=mt.convert(H.type);let rn;H.isData3DTexture?(Ve.setTexture3D(H,0),rn=D.TEXTURE_3D):H.isDataArrayTexture||H.isCompressedArrayTexture?(Ve.setTexture2DArray(H,0),rn=D.TEXTURE_2D_ARRAY):(Ve.setTexture2D(H,0),rn=D.TEXTURE_2D),D.pixelStorei(D.UNPACK_FLIP_Y_WEBGL,H.flipY),D.pixelStorei(D.UNPACK_PREMULTIPLY_ALPHA_WEBGL,H.premultiplyAlpha),D.pixelStorei(D.UNPACK_ALIGNMENT,H.unpackAlignment);const Pt=D.getParameter(D.UNPACK_ROW_LENGTH),Ai=D.getParameter(D.UNPACK_IMAGE_HEIGHT),Vo=D.getParameter(D.UNPACK_SKIP_PIXELS),wi=D.getParameter(D.UNPACK_SKIP_ROWS),yc=D.getParameter(D.UNPACK_SKIP_IMAGES);D.pixelStorei(D.UNPACK_ROW_LENGTH,mn.width),D.pixelStorei(D.UNPACK_IMAGE_HEIGHT,mn.height),D.pixelStorei(D.UNPACK_SKIP_PIXELS,ct),D.pixelStorei(D.UNPACK_SKIP_ROWS,ft),D.pixelStorei(D.UNPACK_SKIP_IMAGES,nt);const on=N.isDataArrayTexture||N.isData3DTexture,li=H.isDataArrayTexture||H.isData3DTexture;if(N.isDepthTexture){const zi=Ce.get(N),ti=Ce.get(H),ui=Ce.get(zi.__renderTarget),wd=Ce.get(ti.__renderTarget);_e.bindFramebuffer(D.READ_FRAMEBUFFER,ui.__webglFramebuffer),_e.bindFramebuffer(D.DRAW_FRAMEBUFFER,wd.__webglFramebuffer);for(let Kr=0;Kr<He;Kr++)on&&(D.framebufferTextureLayer(D.READ_FRAMEBUFFER,D.COLOR_ATTACHMENT0,Ce.get(N).__webglTexture,W,nt+Kr),D.framebufferTextureLayer(D.DRAW_FRAMEBUFFER,D.COLOR_ATTACHMENT0,Ce.get(H).__webglTexture,Me,pn+Kr)),D.blitFramebuffer(ct,ft,Be,qe,Rt,kt,Be,qe,D.DEPTH_BUFFER_BIT,D.NEAREST);_e.bindFramebuffer(D.READ_FRAMEBUFFER,null),_e.bindFramebuffer(D.DRAW_FRAMEBUFFER,null)}else if(W!==0||N.isRenderTargetTexture||Ce.has(N)){const zi=Ce.get(N),ti=Ce.get(H);_e.bindFramebuffer(D.READ_FRAMEBUFFER,bM),_e.bindFramebuffer(D.DRAW_FRAMEBUFFER,vM);for(let ui=0;ui<He;ui++)on?D.framebufferTextureLayer(D.READ_FRAMEBUFFER,D.COLOR_ATTACHMENT0,zi.__webglTexture,W,nt+ui):D.framebufferTexture2D(D.READ_FRAMEBUFFER,D.COLOR_ATTACHMENT0,D.TEXTURE_2D,zi.__webglTexture,W),li?D.framebufferTextureLayer(D.DRAW_FRAMEBUFFER,D.COLOR_ATTACHMENT0,ti.__webglTexture,Me,pn+ui):D.framebufferTexture2D(D.DRAW_FRAMEBUFFER,D.COLOR_ATTACHMENT0,D.TEXTURE_2D,ti.__webglTexture,Me),W!==0?D.blitFramebuffer(ct,ft,Be,qe,Rt,kt,Be,qe,D.COLOR_BUFFER_BIT,D.NEAREST):li?D.copyTexSubImage3D(rn,Me,Rt,kt,pn+ui,ct,ft,Be,qe):D.copyTexSubImage2D(rn,Me,Rt,kt,ct,ft,Be,qe);_e.bindFramebuffer(D.READ_FRAMEBUFFER,null),_e.bindFramebuffer(D.DRAW_FRAMEBUFFER,null)}else li?N.isDataTexture||N.isData3DTexture?D.texSubImage3D(rn,Me,Rt,kt,pn,Be,qe,He,Yt,rt,mn.data):H.isCompressedArrayTexture?D.compressedTexSubImage3D(rn,Me,Rt,kt,pn,Be,qe,He,Yt,mn.data):D.texSubImage3D(rn,Me,Rt,kt,pn,Be,qe,He,Yt,rt,mn):N.isDataTexture?D.texSubImage2D(D.TEXTURE_2D,Me,Rt,kt,Be,qe,Yt,rt,mn.data):N.isCompressedTexture?D.compressedTexSubImage2D(D.TEXTURE_2D,Me,Rt,kt,mn.width,mn.height,Yt,mn.data):D.texSubImage2D(D.TEXTURE_2D,Me,Rt,kt,Be,qe,Yt,rt,mn);D.pixelStorei(D.UNPACK_ROW_LENGTH,Pt),D.pixelStorei(D.UNPACK_IMAGE_HEIGHT,Ai),D.pixelStorei(D.UNPACK_SKIP_PIXELS,Vo),D.pixelStorei(D.UNPACK_SKIP_ROWS,wi),D.pixelStorei(D.UNPACK_SKIP_IMAGES,yc),Me===0&&H.generateMipmaps&&D.generateMipmap(rn),_e.unbindTexture()},this.initRenderTarget=function(N){Ce.get(N).__webglFramebuffer===void 0&&Ve.setupRenderTarget(N)},this.initTexture=function(N){N.isCubeTexture?Ve.setTextureCube(N,0):N.isData3DTexture?Ve.setTexture3D(N,0):N.isDataArrayTexture||N.isCompressedArrayTexture?Ve.setTexture2DArray(N,0):Ve.setTexture2D(N,0),_e.unbindTexture()},this.resetState=function(){C=0,T=0,M=null,_e.reset(),V.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ai}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=et._getDrawingBufferColorSpace(e),t.unpackColorSpace=et._getUnpackColorSpace()}}class oG extends dn{constructor(e=document.createElement("div")){super(),this.isCSS2DObject=!0,this.element=e,this.element.style.position="absolute",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.center=new oe(.5,.5),this.addEventListener("removed",function(){this.traverse(function(t){t.element&&t.element instanceof t.element.ownerDocument.defaultView.Element&&t.element.parentNode!==null&&t.element.remove()})})}copy(e,t){return super.copy(e,t),this.element=e.element.cloneNode(!0),this.center=e.center,this}}const na=new P,sx=new ht,rx=new ht,ox=new P,ax=new P;class aG{constructor(e={}){const t=this;let n,i,r,o;const a={objects:new WeakMap},c=e.element!==void 0?e.element:document.createElement("div");c.style.overflow="hidden",this.domElement=c,this.sortObjects=!0,this.getSize=function(){return{width:n,height:i}},this.render=function(p,x){p.matrixWorldAutoUpdate===!0&&p.updateMatrixWorld(),x.parent===null&&x.matrixWorldAutoUpdate===!0&&x.updateMatrixWorld(),sx.copy(x.matrixWorldInverse),rx.multiplyMatrices(x.projectionMatrix,sx),u(p,p,x),this.sortObjects&&f(p)},this.setSize=function(p,x){n=p,i=x,r=n/2,o=i/2,c.style.width=p+"px",c.style.height=x+"px"};function l(p){p.isCSS2DObject&&(p.element.style.display="none");for(let x=0,g=p.children.length;x<g;x++)l(p.children[x])}function u(p,x,g){if(p.visible===!1){l(p);return}if(p.isCSS2DObject){na.setFromMatrixPosition(p.matrixWorld),na.applyMatrix4(rx);const m=na.z>=-1&&na.z<=1&&p.layers.test(g.layers)===!0,b=p.element;b.style.display=m===!0?"":"none",m===!0&&(p.onBeforeRender(t,x,g),b.style.transform="translate("+-100*p.center.x+"%,"+-100*p.center.y+"%)translate("+(na.x*r+r)+"px,"+(-na.y*o+o)+"px)",b.parentNode!==c&&c.appendChild(b),p.onAfterRender(t,x,g));const y={distanceToCameraSquared:h(g,p)};a.objects.set(p,y)}for(let m=0,b=p.children.length;m<b;m++)u(p.children[m],x,g)}function h(p,x){return ox.setFromMatrixPosition(p.matrixWorld),ax.setFromMatrixPosition(x.matrixWorld),ox.distanceToSquared(ax)}function d(p){const x=[];return p.traverseVisible(function(g){g.isCSS2DObject&&x.push(g)}),x}function f(p){const x=d(p).sort(function(m,b){if(m.renderOrder!==b.renderOrder)return b.renderOrder-m.renderOrder;const y=a.objects.get(m).distanceToCameraSquared,v=a.objects.get(b).distanceToCameraSquared;return y-v}),g=x.length;for(let m=0,b=x.length;m<b;m++)x[m].element.style.zIndex=g-m}}}function LN(s,e,t=!0){if(!e||!e.isReady)throw new Error("BufferGeometryUtils: Initialized MikkTSpace library required.");if(!s.hasAttribute("position")||!s.hasAttribute("normal")||!s.hasAttribute("uv"))throw new Error('BufferGeometryUtils: Tangents require "position", "normal", and "uv" attributes.');function n(o){if(o.normalized||o.isInterleavedBufferAttribute){const a=new Float32Array(o.count*o.itemSize);for(let c=0,l=0;c<o.count;c++)a[l++]=o.getX(c),a[l++]=o.getY(c),o.itemSize>2&&(a[l++]=o.getZ(c));return a}return o.array instanceof Float32Array?o.array:new Float32Array(o.array)}const i=s.index?s.toNonIndexed():s,r=e.generateTangents(n(i.attributes.position),n(i.attributes.normal),n(i.attributes.uv));if(t)for(let o=3;o<r.length;o+=4)r[o]*=-1;return i.setAttribute("tangent",new yn(r,4)),s!==i&&s.copy(i),s}function DN(s,e=!1){const t=s[0].index!==null,n=new Set(Object.keys(s[0].attributes)),i=new Set(Object.keys(s[0].morphAttributes)),r={},o={},a=s[0].morphTargetsRelative,c=new bn;let l=0;for(let u=0;u<s.length;++u){const h=s[u];let d=0;if(t!==(h.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const f in h.attributes){if(!n.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+'. All geometries must have compatible attributes; make sure "'+f+'" attribute exists among all geometries, or in none of them.'),null;r[f]===void 0&&(r[f]=[]),r[f].push(h.attributes[f]),d++}if(d!==n.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". Make sure all geometries have the same number of attributes."),null;if(a!==h.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const f in h.morphAttributes){if(!i.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+".  .morphAttributes must be consistent throughout all geometries."),null;o[f]===void 0&&(o[f]=[]),o[f].push(h.morphAttributes[f])}if(e){let f;if(t)f=h.index.count;else if(h.attributes.position!==void 0)f=h.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". The geometry must have either an index or a position attribute"),null;c.addGroup(l,f,u),l+=f}}if(t){let u=0;const h=[];for(let d=0;d<s.length;++d){const f=s[d].index;for(let p=0;p<f.count;++p)h.push(f.getX(p)+u);u+=s[d].attributes.position.count}c.setIndex(h)}for(const u in r){const h=sp(r[u]);if(!h)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+u+" attribute."),null;c.setAttribute(u,h)}for(const u in o){const h=o[u][0].length;if(h===0)break;c.morphAttributes=c.morphAttributes||{},c.morphAttributes[u]=[];for(let d=0;d<h;++d){const f=[];for(let x=0;x<o[u].length;++x)f.push(o[u][x][d]);const p=sp(f);if(!p)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+u+" morphAttribute."),null;c.morphAttributes[u].push(p)}}return c}function sp(s){let e,t,n,i=-1,r=0;for(let l=0;l<s.length;++l){const u=s[l];if(e===void 0&&(e=u.array.constructor),e!==u.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(t===void 0&&(t=u.itemSize),t!==u.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(n===void 0&&(n=u.normalized),n!==u.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(i===-1&&(i=u.gpuType),i!==u.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;r+=u.count*t}const o=new e(r),a=new yn(o,t,n);let c=0;for(let l=0;l<s.length;++l){const u=s[l];if(u.isInterleavedBufferAttribute){const h=c/t;for(let d=0,f=u.count;d<f;d++)for(let p=0;p<t;p++){const x=u.getComponent(d,p);a.setComponent(d+h,p,x)}}else o.set(u.array,c);c+=u.count*t}return i!==void 0&&(a.gpuType=i),a}function UN(s){return s.isInstancedInterleavedBufferAttribute||s.isInterleavedBufferAttribute?Th(s):s.isInstancedBufferAttribute?new Br().copy(s):new yn().copy(s)}function IN(s){let e,t=0,n=0;for(let l=0,u=s.length;l<u;++l){const h=s[l];if(e===void 0&&(e=h.array.constructor),e!==h.array.constructor)return console.error("AttributeBuffers of different types cannot be interleaved"),null;t+=h.array.length,n+=h.itemSize}const i=new im(new e(t),n);let r=0;const o=[],a=["getX","getY","getZ","getW"],c=["setX","setY","setZ","setW"];for(let l=0,u=s.length;l<u;l++){const h=s[l],d=h.itemSize,f=h.count,p=new Ds(i,d,r,h.normalized);o.push(p),r+=d;for(let x=0;x<f;x++)for(let g=0;g<d;g++)p[c[g]](x,h[a[g]](x))}return o}function Th(s){const e=s.data.array.constructor,t=s.count,n=s.itemSize,i=s.normalized,r=new e(t*n);let o;s.isInstancedInterleavedBufferAttribute?o=new Br(r,n,i,s.meshPerAttribute):o=new yn(r,n,i);for(let a=0;a<t;a++)o.setX(a,s.getX(a)),n>=2&&o.setY(a,s.getY(a)),n>=3&&o.setZ(a,s.getZ(a)),n>=4&&o.setW(a,s.getW(a));return o}function FN(s){const e=s.attributes,t=s.morphTargets,n=new Map;for(const i in e){const r=e[i];r.isInterleavedBufferAttribute&&(n.has(r)||n.set(r,Th(r)),e[i]=n.get(r))}for(const i in t){const r=t[i];r.isInterleavedBufferAttribute&&(n.has(r)||n.set(r,Th(r)),t[i]=n.get(r))}}function BN(s){let e=0;for(const n in s.attributes){const i=s.getAttribute(n);e+=i.count*i.itemSize*i.array.BYTES_PER_ELEMENT}const t=s.getIndex();return e+=t?t.count*t.itemSize*t.array.BYTES_PER_ELEMENT:0,e}function ON(s,e=1e-4){e=Math.max(e,Number.EPSILON);const t={},n=s.getIndex(),i=s.getAttribute("position"),r=n?n.count:i.count;let o=0;const a=Object.keys(s.attributes),c={},l={},u=[],h=["getX","getY","getZ","getW"],d=["setX","setY","setZ","setW"];for(let b=0,y=a.length;b<y;b++){const v=a[b],w=s.attributes[v];c[v]=new w.constructor(new w.array.constructor(w.count*w.itemSize),w.itemSize,w.normalized);const S=s.morphAttributes[v];S&&(l[v]||(l[v]=[]),S.forEach((E,C)=>{const T=new E.array.constructor(E.count*E.itemSize);l[v][C]=new E.constructor(T,E.itemSize,E.normalized)}))}const f=e*.5,p=Math.log10(1/e),x=Math.pow(10,p),g=f*x;for(let b=0;b<r;b++){const y=n?n.getX(b):b;let v="";for(let w=0,S=a.length;w<S;w++){const E=a[w],C=s.getAttribute(E),T=C.itemSize;for(let M=0;M<T;M++)v+=`${~~(C[h[M]](y)*x+g)},`}if(v in t)u.push(t[v]);else{for(let w=0,S=a.length;w<S;w++){const E=a[w],C=s.getAttribute(E),T=s.morphAttributes[E],M=C.itemSize,I=c[E],G=l[E];for(let z=0;z<M;z++){const $=h[z],Y=d[z];if(I[Y](o,C[$](y)),T)for(let q=0,he=T.length;q<he;q++)G[q][Y](o,T[q][$](y))}}t[v]=o,u.push(o),o++}}const m=s.clone();for(const b in s.attributes){const y=c[b];if(m.setAttribute(b,new y.constructor(y.array.slice(0,o*y.itemSize),y.itemSize,y.normalized)),b in l)for(let v=0;v<l[b].length;v++){const w=l[b][v];m.morphAttributes[b][v]=new w.constructor(w.array.slice(0,o*w.itemSize),w.itemSize,w.normalized)}}return m.setIndex(u),m}function VN(s,e){if(e===PM)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),s;if(e===Zg||e===LM){let t=s.getIndex();if(t===null){const o=[],a=s.getAttribute("position");if(a!==void 0){for(let c=0;c<a.count;c++)o.push(c);s.setIndex(o),t=s.getIndex()}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),s}const n=t.count-2,i=[];if(e===Zg)for(let o=1;o<=n;o++)i.push(t.getX(0)),i.push(t.getX(o)),i.push(t.getX(o+1));else for(let o=0;o<n;o++)o%2===0?(i.push(t.getX(o)),i.push(t.getX(o+1)),i.push(t.getX(o+2))):(i.push(t.getX(o+2)),i.push(t.getX(o+1)),i.push(t.getX(o)));i.length/3!==n&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const r=s.clone();return r.setIndex(i),r.clearGroups(),r}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),s}function GN(s){const e=new P,t=new P,n=new P,i=new P,r=new P,o=new P,a=new P,c=new P,l=new P;function u(ue,ye,Ie,yt,pt,Mt,wt,re){e.fromBufferAttribute(ye,pt),t.fromBufferAttribute(ye,Mt),n.fromBufferAttribute(ye,wt);const ce=ue.morphTargetInfluences;if(Ie&&ce){a.set(0,0,0),c.set(0,0,0),l.set(0,0,0);for(let Fe=0,Je=Ie.length;Fe<Je;Fe++){const ze=ce[Fe],bt=Ie[Fe];ze!==0&&(i.fromBufferAttribute(bt,pt),r.fromBufferAttribute(bt,Mt),o.fromBufferAttribute(bt,wt),yt?(a.addScaledVector(i,ze),c.addScaledVector(r,ze),l.addScaledVector(o,ze)):(a.addScaledVector(i.sub(e),ze),c.addScaledVector(r.sub(t),ze),l.addScaledVector(o.sub(n),ze)))}e.add(a),t.add(c),n.add(l)}ue.isSkinnedMesh&&(ue.applyBoneTransform(pt,e),ue.applyBoneTransform(Mt,t),ue.applyBoneTransform(wt,n)),re[pt*3+0]=e.x,re[pt*3+1]=e.y,re[pt*3+2]=e.z,re[Mt*3+0]=t.x,re[Mt*3+1]=t.y,re[Mt*3+2]=t.z,re[wt*3+0]=n.x,re[wt*3+1]=n.y,re[wt*3+2]=n.z}const h=s.geometry,d=s.material;let f,p,x;const g=h.index,m=h.attributes.position,b=h.morphAttributes.position,y=h.morphTargetsRelative,v=h.attributes.normal,w=h.morphAttributes.position,S=h.groups,E=h.drawRange;let C,T,M,I,G,z,$;const Y=new Float32Array(m.count*m.itemSize),q=new Float32Array(v.count*v.itemSize);if(g!==null)if(Array.isArray(d))for(C=0,M=S.length;C<M;C++)for(G=S[C],z=Math.max(G.start,E.start),$=Math.min(G.start+G.count,E.start+E.count),T=z,I=$;T<I;T+=3)f=g.getX(T),p=g.getX(T+1),x=g.getX(T+2),u(s,m,b,y,f,p,x,Y),u(s,v,w,y,f,p,x,q);else for(z=Math.max(0,E.start),$=Math.min(g.count,E.start+E.count),C=z,M=$;C<M;C+=3)f=g.getX(C),p=g.getX(C+1),x=g.getX(C+2),u(s,m,b,y,f,p,x,Y),u(s,v,w,y,f,p,x,q);else if(Array.isArray(d))for(C=0,M=S.length;C<M;C++)for(G=S[C],z=Math.max(G.start,E.start),$=Math.min(G.start+G.count,E.start+E.count),T=z,I=$;T<I;T+=3)f=T,p=T+1,x=T+2,u(s,m,b,y,f,p,x,Y),u(s,v,w,y,f,p,x,q);else for(z=Math.max(0,E.start),$=Math.min(m.count,E.start+E.count),C=z,M=$;C<M;C+=3)f=C,p=C+1,x=C+2,u(s,m,b,y,f,p,x,Y),u(s,v,w,y,f,p,x,q);const he=new Dt(Y,3),K=new Dt(q,3);return{positionAttribute:m,normalAttribute:v,morphedPositionAttribute:he,morphedNormalAttribute:K}}function zN(s){if(s.groups.length===0)return console.warn("THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge."),s;let e=s.groups;if(e=e.sort((o,a)=>o.materialIndex!==a.materialIndex?o.materialIndex-a.materialIndex:o.start-a.start),s.getIndex()===null){const o=s.getAttribute("position"),a=[];for(let c=0;c<o.count;c+=3)a.push(c,c+1,c+2);s.setIndex(a)}const t=s.getIndex(),n=[];for(let o=0;o<e.length;o++){const a=e[o],c=a.start,l=c+a.count;for(let u=c;u<l;u++)n.push(t.getX(u))}s.dispose(),s.setIndex(n);let i=0;for(let o=0;o<e.length;o++){const a=e[o];a.start=i,i+=a.count}let r=e[0];s.groups=[r];for(let o=1;o<e.length;o++){const a=e[o];r.materialIndex===a.materialIndex?r.count+=a.count:(r=a,s.groups.push(r))}return s}function kN(s,e=Math.PI/3){const t=Math.cos(e),n=(1+1e-10)*100,i=[new P,new P,new P],r=new P,o=new P,a=new P,c=new P;function l(x){const g=~~(x.x*n),m=~~(x.y*n),b=~~(x.z*n);return`${g},${m},${b}`}const u=s.index?s.toNonIndexed():s,h=u.attributes.position,d={};for(let x=0,g=h.count/3;x<g;x++){const m=3*x,b=i[0].fromBufferAttribute(h,m+0),y=i[1].fromBufferAttribute(h,m+1),v=i[2].fromBufferAttribute(h,m+2);r.subVectors(v,y),o.subVectors(b,y);const w=new P().crossVectors(r,o).normalize();for(let S=0;S<3;S++){const E=i[S],C=l(E);C in d||(d[C]=[]),d[C].push(w)}}const f=new Float32Array(h.count*3),p=new yn(f,3,!1);for(let x=0,g=h.count/3;x<g;x++){const m=3*x,b=i[0].fromBufferAttribute(h,m+0),y=i[1].fromBufferAttribute(h,m+1),v=i[2].fromBufferAttribute(h,m+2);r.subVectors(v,y),o.subVectors(b,y),a.crossVectors(r,o).normalize();for(let w=0;w<3;w++){const S=i[w],E=l(S),C=d[E];c.set(0,0,0);for(let T=0,M=C.length;T<M;T++){const I=C[T];a.dot(I)>t&&c.add(I)}c.normalize(),p.setXYZ(m+w,c.x,c.y,c.z)}}return u.setAttribute("normal",p),u}const cG=Object.freeze(Object.defineProperty({__proto__:null,computeMikkTSpaceTangents:LN,computeMorphedAttributes:GN,deepCloneAttribute:UN,deinterleaveAttribute:Th,deinterleaveGeometry:FN,estimateBytesUsed:BN,interleaveAttributes:IN,mergeAttributes:sp,mergeGeometries:DN,mergeGroups:zN,mergeVertices:ON,toCreasedNormals:kN,toTrianglesDrawMode:VN},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const HN=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","aoMapIntensity","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveIntensity","emissiveMap","envMap","envMapIntensity","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","lightMapIntensity","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"],lf=new WeakMap;class WN{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=e.object.isSkinnedMesh===!0,this.refreshUniforms=HN,this.renderId=0}firstInitialization(e){return this.renderObjects.has(e)===!1?(this.getRenderObjectData(e),!0):!1}needsVelocity(e){const t=e.getMRT();return t!==null&&t.has("velocity")}getRenderObjectData(e){let t=this.renderObjects.get(e);if(t===void 0){const{geometry:n,material:i,object:r}=e;if(t={material:this.getMaterialData(i),geometry:{id:n.id,attributes:this.getAttributesData(n.attributes),indexVersion:n.index?n.index.version:null,drawRange:{start:n.drawRange.start,count:n.drawRange.count}},worldMatrix:r.matrixWorld.clone()},r.center&&(t.center=r.center.clone()),r.morphTargetInfluences&&(t.morphTargetInfluences=r.morphTargetInfluences.slice()),e.bundle!==null&&(t.version=e.bundle.version),t.material.transmission>0){const{width:o,height:a}=e.context;t.bufferWidth=o,t.bufferHeight=a}t.lights=this.getLightsData(e.lightsNode.getLights()),this.renderObjects.set(e,t)}return t}getAttributesData(e){const t={};for(const n in e){const i=e[n];t[n]={version:i.version}}return t}containsNode(e){const t=e.material;for(const n in t)if(t[n]&&t[n].isNode)return!0;return e.renderer.overrideNodes.modelViewMatrix!==null||e.renderer.overrideNodes.modelNormalViewMatrix!==null}getMaterialData(e){const t={};for(const n of this.refreshUniforms){const i=e[n];i!=null&&(typeof i=="object"&&i.clone!==void 0?i.isTexture===!0?t[n]={id:i.id,version:i.version}:t[n]=i.clone():t[n]=i)}return t}equals(e,t){const{object:n,material:i,geometry:r}=e,o=this.getRenderObjectData(e);if(o.worldMatrix.equals(n.matrixWorld)!==!0)return o.worldMatrix.copy(n.matrixWorld),!1;const a=o.material;for(const g in a){const m=a[g],b=i[g];if(m.equals!==void 0){if(m.equals(b)===!1)return m.copy(b),!1}else if(b.isTexture===!0){if(m.id!==b.id||m.version!==b.version)return m.id=b.id,m.version=b.version,!1}else if(m!==b)return a[g]=b,!1}if(a.transmission>0){const{width:g,height:m}=e.context;if(o.bufferWidth!==g||o.bufferHeight!==m)return o.bufferWidth=g,o.bufferHeight=m,!1}const c=o.geometry,l=r.attributes,u=c.attributes,h=Object.keys(u),d=Object.keys(l);if(c.id!==r.id)return c.id=r.id,!1;if(h.length!==d.length)return o.geometry.attributes=this.getAttributesData(l),!1;for(const g of h){const m=u[g],b=l[g];if(b===void 0)return delete u[g],!1;if(m.version!==b.version)return m.version=b.version,!1}const f=r.index,p=c.indexVersion,x=f?f.version:null;if(p!==x)return c.indexVersion=x,!1;if(c.drawRange.start!==r.drawRange.start||c.drawRange.count!==r.drawRange.count)return c.drawRange.start=r.drawRange.start,c.drawRange.count=r.drawRange.count,!1;if(o.morphTargetInfluences){let g=!1;for(let m=0;m<o.morphTargetInfluences.length;m++)o.morphTargetInfluences[m]!==n.morphTargetInfluences[m]&&(o.morphTargetInfluences[m]=n.morphTargetInfluences[m],g=!0);if(g)return!1}if(o.lights){for(let g=0;g<t.length;g++)if(o.lights[g].map!==t[g].map)return!1}return o.center&&o.center.equals(n.center)===!1?(o.center.copy(n.center),!0):(e.bundle!==null&&(o.version=e.bundle.version),!0)}getLightsData(e){const t=[];for(const n of e)n.isSpotLight===!0&&n.map!==null&&t.push({map:n.map.version});return t}getLights(e,t){if(lf.has(e)){const i=lf.get(e);if(i.renderId===t)return i.lightsData}const n=this.getLightsData(e.getLights());return lf.set(e,{renderId:t,lightsData:n}),n}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e)||this.needsVelocity(t.renderer))return!0;const{renderId:n}=t;if(this.renderId!==n)return this.renderId=n,!0;const i=e.object.static===!0,r=e.bundle!==null&&e.bundle.static===!0&&this.getRenderObjectData(e).version===e.bundle.version;if(i||r)return!1;const o=this.getLights(e.lightsNode,n);return this.equals(e,o)!==!0}}function xm(s,e=0){let t=3735928559^e,n=1103547991^e;if(s instanceof Array)for(let i=0,r;i<s.length;i++)r=s[i],t=Math.imul(t^r,2654435761),n=Math.imul(n^r,1597334677);else for(let i=0,r;i<s.length;i++)r=s.charCodeAt(i),t=Math.imul(t^r,2654435761),n=Math.imul(n^r,1597334677);return t=Math.imul(t^t>>>16,2246822507),t^=Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(t^t>>>13,3266489909),4294967296*(2097151&n)+(t>>>0)}const zl=s=>xm(s),dc=s=>xm(s),Qc=(...s)=>xm(s),$N=new Map([[1,"float"],[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),cx=new WeakMap;function My(s){return $N.get(s)}function Mh(s){if(/[iu]?vec\d/.test(s))return s.startsWith("ivec")?Int32Array:s.startsWith("uvec")?Uint32Array:Float32Array;if(/mat\d/.test(s)||/float/.test(s))return Float32Array;if(/uint/.test(s))return Uint32Array;if(/int/.test(s))return Int32Array;throw new Error(`THREE.NodeUtils: Unsupported type: ${s}`)}function Ey(s){if(/float|int|uint/.test(s))return 1;if(/vec2/.test(s))return 2;if(/vec3/.test(s))return 3;if(/vec4/.test(s)||/mat2/.test(s))return 4;if(/mat3/.test(s))return 9;if(/mat4/.test(s))return 16;ge("TSL: Unsupported type:",s)}function XN(s){if(/float|int|uint/.test(s))return 1;if(/vec2/.test(s))return 2;if(/vec3/.test(s))return 3;if(/vec4/.test(s)||/mat2/.test(s))return 4;if(/mat3/.test(s))return 12;if(/mat4/.test(s))return 16;ge("TSL: Unsupported type:",s)}function qN(s){if(/float|int|uint/.test(s))return 4;if(/vec2/.test(s))return 8;if(/vec3/.test(s)||/vec4/.test(s))return 16;if(/mat2/.test(s))return 8;if(/mat3/.test(s))return 48;if(/mat4/.test(s))return 64;ge("TSL: Unsupported type:",s)}function Pr(s){if(s==null)return null;const e=typeof s;return s.isNode===!0?"node":e==="number"?"float":e==="boolean"?"bool":e==="string"?"string":e==="function"?"shader":s.isVector2===!0?"vec2":s.isVector3===!0?"vec3":s.isVector4===!0?"vec4":s.isMatrix2===!0?"mat2":s.isMatrix3===!0?"mat3":s.isMatrix4===!0?"mat4":s.isColor===!0?"color":s instanceof ArrayBuffer?"ArrayBuffer":null}function _m(s,...e){const t=s?s.slice(-4):void 0;return e.length===1&&(t==="vec2"?e=[e[0],e[0]]:t==="vec3"?e=[e[0],e[0],e[0]]:t==="vec4"&&(e=[e[0],e[0],e[0],e[0]])),s==="color"?new Ze(...e):t==="vec2"?new oe(...e):t==="vec3"?new P(...e):t==="vec4"?new Ke(...e):t==="mat2"?new $h(...e):t==="mat3"?new gt(...e):t==="mat4"?new ht(...e):s==="bool"?e[0]||!1:s==="float"||s==="int"||s==="uint"?e[0]||0:s==="string"?e[0]||"":s==="ArrayBuffer"?Ry(e[0]):null}function Ay(s){let e=cx.get(s);return e===void 0&&(e={},cx.set(s,e)),e}function wy(s){let e="";const t=new Uint8Array(s);for(let n=0;n<t.length;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function Ry(s){return Uint8Array.from(atob(s),e=>e.charCodeAt(0)).buffer}const $c={VERTEX:"vertex",FRAGMENT:"fragment"},at={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},YN={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX2:"mat2",MATRIX3:"mat3",MATRIX4:"mat4"},$n={READ_ONLY:"readOnly",WRITE_ONLY:"writeOnly",READ_WRITE:"readWrite"},Ny=["fragment","vertex"],rp=["setup","analyze","generate"],op=[...Ny,"compute"],Io=["x","y","z","w"],jN={analyze:"setup",generate:"analyze"};let KN=0;class De extends xs{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=at.NONE,this.updateBeforeType=at.NONE,this.updateAfterType=at.NONE,this.uuid=ec.generateUUID(),this.version=0,this.name="",this.global=!1,this.parents=!1,this.isNode=!0,this._beforeNodes=null,this._cacheKey=null,this._cacheKeyVersion=0,Object.defineProperty(this,"id",{value:KN++})}set needsUpdate(e){e===!0&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this),this}onFrameUpdate(e){return this.onUpdate(e,at.FRAME)}onRenderUpdate(e){return this.onUpdate(e,at.RENDER)}onObjectUpdate(e){return this.onUpdate(e,at.OBJECT)}onReference(e){return this.updateReference=e.bind(this),this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of this._getChildren())yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}_getChildren(e=new Set){const t=[];e.add(this);for(const n of Object.getOwnPropertyNames(this)){const i=this[n];if(!(n.startsWith("_")===!0||e.has(i))){if(Array.isArray(i)===!0)for(let r=0;r<i.length;r++){const o=i[r];o&&o.isNode===!0&&t.push({property:n,index:r,childNode:o})}else if(i&&i.isNode===!0)t.push({property:n,childNode:i});else if(i&&Object.getPrototypeOf(i)===Object.prototype)for(const r in i){if(r.startsWith("_")===!0)continue;const o=i[r];o&&o.isNode===!0&&t.push({property:n,index:r,childNode:o})}}}return t}getCacheKey(e=!1,t=null){if(e=e||this.version!==this._cacheKeyVersion,e===!0||this._cacheKey===null){t===null&&(t=new Set);const n=[];for(const{property:i,childNode:r}of this._getChildren(t))n.push(zl(i.slice(0,-4)),r.getCacheKey(e,t));this._cacheKey=Qc(dc(n),this.customCacheKey()),this._cacheKeyVersion=this.version}return this._cacheKey}customCacheKey(){return this.id}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getMemberType(){return"void"}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}getArrayCount(){return null}setup(e){const t=e.getNodeProperties(this);let n=0;for(const i of this.getChildren())t["node"+n++]=i;return t.outputNode||null}analyze(e,t=null){const n=e.increaseUsage(this);if(this.parents===!0){const i=e.getDataFromNode(this,"any");i.stages=i.stages||{},i.stages[e.shaderStage]=i.stages[e.shaderStage]||[],i.stages[e.shaderStage].push(t)}if(n===1){const i=e.getNodeProperties(this);for(const r of Object.values(i))r&&r.isNode===!0&&r.build(e,this)}}generate(e,t){const{outputNode:n}=e.getNodeProperties(this);if(n&&n.isNode===!0)return n.build(e,t)}updateBefore(){te("Abstract function.")}updateAfter(){te("Abstract function.")}update(){te("Abstract function.")}before(e){return this._beforeNodes===null&&(this._beforeNodes=[]),this._beforeNodes.push(e),this}build(e,t=null){const n=this.getShared(e);if(this!==n)return n.build(e,t);if(this._beforeNodes!==null){const c=this._beforeNodes;this._beforeNodes=null;for(const l of c)l.build(e,t);this._beforeNodes=c}const i=e.getDataFromNode(this);i.buildStages=i.buildStages||{},i.buildStages[e.buildStage]=!0;const r=jN[e.buildStage];if(r&&i.buildStages[r]!==!0){const c=e.getBuildStage();e.setBuildStage(r),this.build(e),e.setBuildStage(c)}e.addNode(this),e.addChain(this);let o=null;const a=e.getBuildStage();if(a==="setup"){this.updateReference(e);const c=e.getNodeProperties(this);if(c.initialized!==!0){c.initialized=!0,c.outputNode=this.setup(e)||c.outputNode||null;for(const l of Object.values(c))if(l&&l.isNode===!0){if(l.parents===!0){const u=e.getNodeProperties(l);u.parents=u.parents||[],u.parents.push(this)}l.build(e)}}o=c.outputNode}else if(a==="analyze")this.analyze(e,t);else if(a==="generate"){if(this.generate.length<2){const l=this.getNodeType(e),u=e.getDataFromNode(this);o=u.snippet,o===void 0?u.generated===void 0?(u.generated=!0,o=this.generate(e)||"",u.snippet=o):(te("Node: Recursion detected.",this),o="/* Recursion detected. */"):u.flowCodes!==void 0&&e.context.nodeBlock!==void 0&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),o=e.format(o,l,t)}else o=this.generate(e,t)||"";o===""&&t!==null&&t!=="void"&&t!=="OutputType"&&(ge(`TSL: Invalid generated code, expected a "${t}".`),o=e.generateConst(t))}return e.removeChain(this),e.addSequentialNode(this),o}getSerializeChildren(){return this._getChildren()}serialize(e){const t=this.getSerializeChildren(),n={};for(const{property:i,index:r,childNode:o}of t)r!==void 0?(n[i]===void 0&&(n[i]=Number.isInteger(r)?[]:{}),n[i][r]=o.toJSON(e.meta).uuid):n[i]=o.toJSON(e.meta).uuid;Object.keys(n).length>0&&(e.inputNodes=n)}deserialize(e){if(e.inputNodes!==void 0){const t=e.meta.nodes;for(const n in e.inputNodes)if(Array.isArray(e.inputNodes[n])){const i=[];for(const r of e.inputNodes[n])i.push(t[r]);this[n]=i}else if(typeof e.inputNodes[n]=="object"){const i={};for(const r in e.inputNodes[n]){const o=e.inputNodes[n][r];i[r]=t[o]}this[n]=i}else{const i=e.inputNodes[n];this[n]=t[i]}}}toJSON(e){const{uuid:t,type:n}=this,i=e===void 0||typeof e=="string";i&&(e={textures:{},images:{},nodes:{}});let r=e.nodes[t];r===void 0&&(r={uuid:t,type:n,meta:e,metadata:{version:4.7,type:"Node",generator:"Node.toJSON"}},i!==!0&&(e.nodes[r.uuid]=r),this.serialize(r),delete r.meta);function o(a){const c=[];for(const l in a){const u=a[l];delete u.metadata,c.push(u)}return c}if(i){const a=o(e.textures),c=o(e.images),l=o(e.nodes);a.length>0&&(r.textures=a),c.length>0&&(r.images=c),l.length>0&&(r.nodes=l)}return r}}class Fo extends De{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=this.indexNode.getNodeType(e),n=this.node.build(e),i=this.indexNode.build(e,!e.isVector(t)&&e.isInteger(t)?t:"uint");return`${n}[ ${i} ]`}}class Cy extends De{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let n=null;for(const i of this.convertTo.split("|"))(n===null||e.getTypeLength(t)===e.getTypeLength(i))&&(n=i);return n}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const n=this.node,i=this.getNodeType(e),r=n.build(e,i);return e.format(r,i,t)}}class vn extends De{static get type(){return"TempNode"}constructor(e=null){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if(e.getBuildStage()==="generate"){const i=e.getVectorType(this.getNodeType(e,t)),r=e.getDataFromNode(this);if(r.propertyName!==void 0)return e.format(r.propertyName,i,t);if(i!=="void"&&t!=="void"&&this.hasDependencies(e)){const o=super.build(e,i),a=e.getVarFromNode(this,null,i),c=e.getPropertyName(a);return e.addLineFlowCode(`${c} = ${o}`,this),r.snippet=o,r.propertyName=c,e.format(r.propertyName,i,t)}}return super.build(e,t)}}class ZN extends vn{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return this.nodeType!==null?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((t,n)=>t+e.getTypeLength(n.getNodeType(e)),0))}generate(e,t){const n=this.getNodeType(e),i=e.getTypeLength(n),r=this.nodes,o=e.getComponentType(n),a=[];let c=0;for(const u of r){if(c>=i){ge(`TSL: Length of parameters exceeds maximum length of function '${n}()' type.`);break}let h=u.getNodeType(e),d=e.getTypeLength(h),f;if(c+d>i&&(ge(`TSL: Length of '${n}()' data exceeds maximum length of output type.`),d=i-c,h=e.getTypeFromLength(d)),c+=d,f=u.build(e,h),e.getComponentType(h)!==o){const x=e.getTypeFromLength(d,o);f=e.format(f,h,x)}a.push(f)}const l=`${e.getType(n)}( ${a.join(", ")} )`;return e.format(l,n,t)}}const QN=Io.join("");class Py extends De{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(Io.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}getScope(){return this.node.getScope()}generate(e,t){const n=this.node,i=e.getTypeLength(n.getNodeType(e));let r=null;if(i>1){let o=null;this.getVectorLength()>=i&&(o=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const c=n.build(e,o);this.components.length===i&&this.components===QN.slice(0,this.components.length)?r=e.format(c,o,t):r=e.format(`${c}.${this.components}`,this.getNodeType(e),t)}else r=n.build(e,t);return r}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class JN extends vn{static get type(){return"SetNode"}constructor(e,t,n){super(),this.sourceNode=e,this.components=t,this.targetNode=n}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:n,targetNode:i}=this,r=this.getNodeType(e),o=e.getComponentType(i.getNodeType(e)),a=e.getTypeFromLength(n.length,o),c=i.build(e,a),l=t.build(e,r),u=e.getTypeLength(r),h=[];for(let d=0;d<u;d++){const f=Io[d];f===n[0]?(h.push(c),d+=n.length-1):h.push(l+"."+f)}return`${e.getType(r)}( ${h.join(", ")} )`}}class eC extends vn{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:n}=this,i=this.getNodeType(e),r=n.build(e),o=e.getVarFromNode(this),a=e.getPropertyName(o);e.addLineFlowCode(a+" = "+r,this);const c=e.getTypeLength(i),l=[];let u=0;for(let h=0;h<c;h++){const d=Io[h];d===t[u]?(l.push("1.0 - "+(a+"."+d)),u++):l.push(a+"."+d)}return`${e.getType(i)}( ${l.join(", ")} )`}}class ym extends De{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return this.nodeType===null?Pr(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=Pr(this.value),e.nodeType=this.nodeType,e.valueType==="ArrayBuffer"&&(e.value=wy(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?_m(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){te("Abstract function.")}}const lx=/float|u?int/;class ts extends ym{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const n=this.getNodeType(e);return lx.test(n)&&lx.test(t)?e.generateConst(t,this.value):e.format(this.generateConst(e),n,t)}}class tC extends De{static get type(){return"MemberNode"}constructor(e,t){super(),this.structNode=e,this.property=t,this.isMemberNode=!0}hasMember(e){return this.structNode.isMemberNode&&this.structNode.hasMember(e)===!1?!1:this.structNode.getMemberType(e,this.property)!=="void"}getNodeType(e){return this.hasMember(e)===!1?"float":this.structNode.getMemberType(e,this.property)}getMemberType(e,t){if(this.hasMember(e)===!1)return"float";const n=this.getNodeType(e);return e.getStructTypeNode(n).getMemberType(e,t)}generate(e){if(this.hasMember(e)===!1){te(`TSL: Member "${this.property}" does not exist in struct.`);const n=this.getNodeType(e);return e.generateConst(n)}return this.structNode.build(e)+"."+this.property}}let kr=null;const ap=new Map;function Z(s,e){if(ap.has(s)){te(`TSL: Redefinition of method chaining '${s}'.`);return}if(typeof e!="function")throw new Error(`THREE.TSL: Node element ${s} is not a function`);ap.set(s,e),s!=="assign"&&(De.prototype[s]=function(...t){return this.isStackNode?this.addToStack(e(...t)):e(this,...t)},De.prototype[s+"Assign"]=function(...t){return this.isStackNode?this.assign(t[0],e(...t)):this.assign(e(this,...t))})}const nC=s=>s.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),ux=s=>nC(s).split("").sort().join("");De.prototype.assign=function(...s){if(this.isStackNode!==!0)return kr!==null?kr.assign(this,...s):ge("TSL: No stack defined for assign operation. Make sure the assign is inside a Fn()."),this;{const e=ap.get("assign");return this.addToStack(e(...s))}};De.prototype.toVarIntent=function(){return this};De.prototype.get=function(s){return new tC(this,s)};const Jc={};function Lu(s,e,t){Jc[s]=Jc[e]=Jc[t]={get(){this._cache=this._cache||{};let o=this._cache[s];return o===void 0&&(o=new Py(this,s),this._cache[s]=o),o},set(o){this[s].assign(ee(o))}};const n=s.toUpperCase(),i=e.toUpperCase(),r=t.toUpperCase();De.prototype["set"+n]=De.prototype["set"+i]=De.prototype["set"+r]=function(o){const a=ux(s);return new JN(this,a,ee(o))},De.prototype["flip"+n]=De.prototype["flip"+i]=De.prototype["flip"+r]=function(){const o=ux(s);return new eC(this,o)}}const vs=["x","y","z","w"],Ss=["r","g","b","a"],Ts=["s","t","p","q"];for(let s=0;s<4;s++){let e=vs[s],t=Ss[s],n=Ts[s];Lu(e,t,n);for(let i=0;i<4;i++){e=vs[s]+vs[i],t=Ss[s]+Ss[i],n=Ts[s]+Ts[i],Lu(e,t,n);for(let r=0;r<4;r++){e=vs[s]+vs[i]+vs[r],t=Ss[s]+Ss[i]+Ss[r],n=Ts[s]+Ts[i]+Ts[r],Lu(e,t,n);for(let o=0;o<4;o++)e=vs[s]+vs[i]+vs[r]+vs[o],t=Ss[s]+Ss[i]+Ss[r]+Ss[o],n=Ts[s]+Ts[i]+Ts[r]+Ts[o],Lu(e,t,n)}}}for(let s=0;s<32;s++)Jc[s]={get(){this._cache=this._cache||{};let e=this._cache[s];return e===void 0&&(e=new Fo(this,new ts(s,"uint")),this._cache[s]=e),e},set(e){this[s].assign(ee(e))}};Object.defineProperties(De.prototype,Jc);const hx=new WeakMap,iC=function(s,e=null){const t=Pr(s);return t==="node"?s:e===null&&(t==="float"||t==="boolean")||t&&t!=="shader"&&t!=="string"?ee(cp(s,e)):t==="shader"?s.isFn?s:O(s):s},sC=function(s,e=null){for(const t in s)s[t]=ee(s[t],e);return s},rC=function(s,e=null){const t=s.length;for(let n=0;n<t;n++)s[n]=ee(s[n],e);return s},Ly=function(s,e=null,t=null,n=null){function i(u){return n!==null?(u=ee(Object.assign(u,n)),n.intent===!0&&(u=u.toVarIntent())):u=ee(u),u}let r,o=e,a,c;function l(u){let h;return o?h=/[a-z]/i.test(o)?o+"()":o:h=s.type,a!==void 0&&u.length<a?(ge(`TSL: "${h}" parameter length is less than minimum required.`),u.concat(new Array(a-u.length).fill(0))):c!==void 0&&u.length>c?(ge(`TSL: "${h}" parameter length exceeds limit.`),u.slice(0,c)):u}return e===null?r=(...u)=>i(new s(...bo(l(u)))):t!==null?(t=ee(t),r=(...u)=>i(new s(e,...bo(l(u)),t))):r=(...u)=>i(new s(e,...bo(l(u)))),r.setParameterLength=(...u)=>(u.length===1?a=c=u[0]:u.length===2&&([a,c]=u),r),r.setName=u=>(o=u,r),r},oC=function(s,...e){return ee(new s(...bo(e)))};class aC extends De{constructor(e,t){super(),this.shaderNode=e,this.rawInputs=t,this.isShaderCallNodeInternal=!0}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}getElementType(e){return this.getOutputNode(e).getElementType(e)}getMemberType(e,t){return this.getOutputNode(e).getMemberType(e,t)}call(e){const{shaderNode:t,rawInputs:n}=this,i=e.getNodeProperties(t),r=e.getClosestSubBuild(t.subBuilds)||"",o=r||"default";if(i[o])return i[o];const a=e.subBuildFn,c=e.fnCall;e.subBuildFn=r,e.fnCall=this;let l=null;if(t.layout){let u=hx.get(e.constructor);u===void 0&&(u=new WeakMap,hx.set(e.constructor,u));let h=u.get(t);h===void 0&&(h=ee(e.buildFunctionNode(t)),u.set(t,h)),e.addInclude(h);const d=n?cC(n):null;l=ee(h.call(d))}else{const u=new Proxy(e,{get:(x,g,m)=>{let b;return Symbol.iterator===g?b=function*(){yield void 0}:b=Reflect.get(x,g,m),b}}),h=n?lC(n):null,d=Array.isArray(n)?n.length>0:n!==null,f=t.jsFunc,p=d||f.length>1?f(h,u):f(u);l=ee(p)}return e.subBuildFn=a,e.fnCall=c,t.once&&(i[o]=l),l}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}getOutputNode(e){const t=e.getNodeProperties(this),n=e.getSubBuildOutput(this);return t[n]=t[n]||this.setupOutput(e),t[n].subBuild=e.getClosestSubBuild(this),t[n]}build(e,t=null){let n=null;const i=e.getBuildStage(),r=e.getNodeProperties(this),o=e.getSubBuildOutput(this),a=this.getOutputNode(e),c=e.fnCall;if(e.fnCall=this,i==="setup"){const l=e.getSubBuildProperty("initialized",this);if(r[l]!==!0&&(r[l]=!0,r[o]=this.getOutputNode(e),r[o].build(e),this.shaderNode.subBuilds))for(const u of e.chaining){const h=e.getDataFromNode(u,"any");h.subBuilds=h.subBuilds||new Set;for(const d of this.shaderNode.subBuilds)h.subBuilds.add(d)}n=r[o]}else i==="analyze"?a.build(e,t):i==="generate"&&(n=a.build(e,t)||"");return e.fnCall=c,n}}function cC(s){let e;return Kh(s),s[0]&&(s[0].isNode||Object.getPrototypeOf(s[0])!==Object.prototype)?e=[...s]:e=s[0],e}function lC(s){let e=0;return Kh(s),new Proxy(s,{get:(t,n,i)=>{let r;if(n==="length")return r=s.length,r;if(Symbol.iterator===n)r=function*(){for(const o of s)yield ee(o)};else{if(s.length>0)if(Object.getPrototypeOf(s[0])===Object.prototype){const o=s[0];o[n]===void 0?r=o[e++]:r=Reflect.get(o,n,i)}else s[0]instanceof De&&(s[n]===void 0?r=s[e++]:r=Reflect.get(s,n,i));else r=Reflect.get(t,n,i);r=ee(r)}return r}})}class uC extends De{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}getLayout(){return this.layout}call(e=null){return new aC(this,e)}setup(){return this.call()}}const hC=[!1,!0],dC=[0,1,2,3],fC=[-1,-2],Dy=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],bm=new Map;for(const s of hC)bm.set(s,new ts(s));const vm=new Map;for(const s of dC)vm.set(s,new ts(s,"uint"));const Sm=new Map([...vm].map(s=>new ts(s.value,"int")));for(const s of fC)Sm.set(s,new ts(s,"int"));const Yh=new Map([...Sm].map(s=>new ts(s.value)));for(const s of Dy)Yh.set(s,new ts(s));for(const s of Dy)Yh.set(-s,new ts(-s));const jh={bool:bm,uint:vm,ints:Sm,float:Yh},dx=new Map([...bm,...Yh]),cp=(s,e)=>dx.has(s)?dx.get(s):s.isNode===!0?s:new ts(s,e),Nn=function(s,e=null){return(...t)=>{for(const i of t)if(i===void 0)return ge(`TSL: Invalid parameter for the type "${s}".`),ee(new ts(0,s));if((t.length===0||!["bool","float","int","uint"].includes(s)&&t.every(i=>{const r=typeof i;return r!=="object"&&r!=="function"}))&&(t=[_m(s,...t)]),t.length===1&&e!==null&&e.has(t[0]))return Xc(e.get(t[0]));if(t.length===1){const i=cp(t[0],s);return i.nodeType===s?Xc(i):Xc(new Cy(i,s))}const n=t.map(i=>cp(i));return Xc(new ZN(n,s))}},Tl=s=>typeof s=="object"&&s!==null?s.value:s,Uy=s=>s!=null?s.nodeType||s.convertTo||(typeof s=="string"?s:null):null;function xa(s,e){return new uC(s,e)}const ee=(s,e=null)=>iC(s,e),Xc=(s,e=null)=>ee(s,e).toVarIntent(),Kh=(s,e=null)=>new sC(s,e),bo=(s,e=null)=>new rC(s,e),it=(s,e=null,t=null,n=null)=>new Ly(s,e,t,n),Se=(s,...e)=>new oC(s,...e),xe=(s,e=null,t=null,n={})=>new Ly(s,e,t,{...n,intent:!0});let pC=0;class mC extends De{constructor(e,t=null){super();let n=null;t!==null&&(typeof t=="object"?n=t.return:(typeof t=="string"?n=t:ge("TSL: Invalid layout type."),t=null)),this.shaderNode=new xa(e,n),t!==null&&this.setLayout(t),this.isFn=!0}setLayout(e){const t=this.shaderNode.nodeType;if(typeof e.inputs!="object"){const n={name:"fn"+pC++,type:t,inputs:[]};for(const i in e)i!=="return"&&n.inputs.push({name:i,type:e[i]});e=n}return this.shaderNode.setLayout(e),this}getNodeType(e){return this.shaderNode.getNodeType(e)||"float"}call(...e){const t=this.shaderNode.call(e);return this.shaderNode.nodeType==="void"&&t.toStack(),t.toVarIntent()}once(e=null){return this.shaderNode.once=!0,this.shaderNode.subBuilds=e,this}generate(e){const t=this.getNodeType(e);return ge('TSL: "Fn()" was declared but not invoked. Try calling it like "Fn()( ...params )".'),e.generateConst(t)}}function O(s,e=null){const t=new mC(s,e);return new Proxy(()=>{},{apply(n,i,r){return t.call(...r)},get(n,i,r){return Reflect.get(t,i,r)},set(n,i,r,o){return Reflect.set(t,i,r,o)}})}const Ml=s=>{kr=s},Tm=()=>kr,je=(...s)=>kr.If(...s),gC=(...s)=>kr.Switch(...s);function Zh(s){return kr&&kr.addToStack(s),s}Z("toStack",Zh);const Iy=new Nn("color"),R=new Nn("float",jh.float),U=new Nn("int",jh.ints),me=new Nn("uint",jh.uint),Qi=new Nn("bool",jh.bool),ie=new Nn("vec2"),Pn=new Nn("ivec2"),Fy=new Nn("uvec2"),By=new Nn("bvec2"),F=new Nn("vec3"),Oy=new Nn("ivec3"),fc=new Nn("uvec3"),Mm=new Nn("bvec3"),$e=new Nn("vec4"),Vy=new Nn("ivec4"),Gy=new Nn("uvec4"),zy=new Nn("bvec4"),Qh=new Nn("mat2"),ei=new Nn("mat3"),vo=new Nn("mat4"),xC=(s="")=>ee(new ts(s,"string")),_C=s=>ee(new ts(s,"ArrayBuffer"));Z("toColor",Iy);Z("toFloat",R);Z("toInt",U);Z("toUint",me);Z("toBool",Qi);Z("toVec2",ie);Z("toIVec2",Pn);Z("toUVec2",Fy);Z("toBVec2",By);Z("toVec3",F);Z("toIVec3",Oy);Z("toUVec3",fc);Z("toBVec3",Mm);Z("toVec4",$e);Z("toIVec4",Vy);Z("toUVec4",Gy);Z("toBVec4",zy);Z("toMat2",Qh);Z("toMat3",ei);Z("toMat4",vo);const ky=it(Fo).setParameterLength(2),Hy=(s,e)=>ee(new Cy(ee(s),e)),yC=(s,e)=>ee(new Py(ee(s),e));Z("element",ky);Z("convert",Hy);const bC=s=>(te("TSL: append() has been renamed to Stack()."),Zh(s));Z("append",s=>(te("TSL: .append() has been renamed to .toStack()."),Zh(s)));class Bt extends De{static get type(){return"PropertyNode"}constructor(e,t=null,n=!1){super(e),this.name=t,this.varying=n,this.isPropertyNode=!0,this.global=!0}customCacheKey(){return zl(this.type+":"+(this.name||"")+":"+(this.varying?"1":"0"))}getHash(e){return this.name||super.getHash(e)}generate(e){let t;return this.varying===!0?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const lr=(s,e)=>ee(new Bt(s,e)),El=(s,e)=>ee(new Bt(s,e,!0)),Nt=Se(Bt,"vec4","DiffuseColor"),lp=Se(Bt,"vec3","EmissiveColor"),Cs=Se(Bt,"float","Roughness"),Al=Se(Bt,"float","Metalness"),Eh=Se(Bt,"float","Clearcoat"),wl=Se(Bt,"float","ClearcoatRoughness"),mo=Se(Bt,"vec3","Sheen"),Jh=Se(Bt,"float","SheenRoughness"),ed=Se(Bt,"float","Iridescence"),Em=Se(Bt,"float","IridescenceIOR"),Am=Se(Bt,"float","IridescenceThickness"),Ah=Se(Bt,"float","AlphaT"),Ar=Se(Bt,"float","Anisotropy"),el=Se(Bt,"vec3","AnisotropyT"),So=Se(Bt,"vec3","AnisotropyB"),$i=Se(Bt,"color","SpecularColor"),Rl=Se(Bt,"float","SpecularF90"),wh=Se(Bt,"float","Shininess"),Sa=Se(Bt,"vec4","Output"),uh=Se(Bt,"float","dashSize"),up=Se(Bt,"float","gapSize"),vC=Se(Bt,"float","pointWidth"),tl=Se(Bt,"float","IOR"),Rh=Se(Bt,"float","Transmission"),wm=Se(Bt,"float","Thickness"),Rm=Se(Bt,"float","AttenuationDistance"),Nm=Se(Bt,"color","AttenuationColor"),Cm=Se(Bt,"float","Dispersion");class Wy extends De{static get type(){return"UniformGroupNode"}constructor(e,t=!1,n=1){super("string"),this.name=e,this.shared=t,this.order=n,this.isUniformGroup=!0}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const $y=s=>new Wy(s),td=(s,e=0)=>new Wy(s,!0,e),Xy=td("frame"),ke=td("render"),Pm=$y("object");class kl extends ym{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=Pm}setName(e){return this.name=e,this}label(e){return te('TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){return e=e.bind(this),super.onUpdate(n=>{const i=e(n,this);i!==void 0&&(this.value=i)},t)}getInputType(e){let t=super.getInputType(e);return t==="bool"&&(t="uint"),t}generate(e,t){const n=this.getNodeType(e),i=this.getUniformHash(e);let r=e.getNodeFromHash(i);r===void 0&&(e.setHashNode(this,i),r=this);const o=r.getInputType(e),a=e.getUniformFromNode(r,o,e.shaderStage,this.name||e.context.nodeName),c=e.getPropertyName(a);e.context.nodeName!==void 0&&delete e.context.nodeName;let l=c;if(n==="bool"){const u=e.getDataFromNode(this);let h=u.propertyName;if(h===void 0){const d=e.getVarFromNode(this,null,"bool");h=e.getPropertyName(d),u.propertyName=h,l=e.format(c,o,n),e.addLineFlowCode(`${h} = ${l}`,this)}l=h}return e.format(l,n,t)}}const Ge=(s,e)=>{const t=Uy(e||s);return t===s&&(s=_m(t)),s=s&&s.isNode===!0?s.node&&s.node.value||s.value:s,ee(new kl(s,t))};class fx extends vn{static get type(){return"ArrayNode"}constructor(e,t,n=null){super(e),this.count=t,this.values=n,this.isArrayNode=!0}getArrayCount(){return this.count}getNodeType(e){return this.nodeType===null&&(this.nodeType=this.values[0].getNodeType(e)),this.nodeType}getElementType(e){return this.getNodeType(e)}generate(e){const t=this.getNodeType(e);return e.generateArray(t,this.count,this.values)}}const qy=(...s)=>{let e;if(s.length===1){const t=s[0];e=new fx(null,t.length,t)}else{const t=s[0],n=s[1];e=new fx(t,n)}return ee(e)};Z("toArray",(s,e)=>qy(Array(e).fill(s)));class SC extends vn{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t,this.isAssignNode=!0}hasDependencies(){return!1}getNodeType(e,t){return t!=="void"?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(e.isAvailable("swizzleAssign")===!1&&t.isSplitNode&&t.components.length>1){const n=e.getTypeLength(t.node.getNodeType(e));return Io.join("").slice(0,n)!==t.components}return!1}setup(e){const{targetNode:t,sourceNode:n}=this,i=t.getScope(),r=e.getNodeProperties(i);r.assign=!0;const o=e.getNodeProperties(this);o.sourceNode=n,o.targetNode=t.context({assign:!0})}generate(e,t){const{targetNode:n,sourceNode:i}=e.getNodeProperties(this),r=this.needsSplitAssign(e),o=n.build(e),a=n.getNodeType(e),c=i.build(e,a),l=i.getNodeType(e),u=e.getDataFromNode(this);let h;if(u.initialized===!0)t!=="void"&&(h=o);else if(r){const d=e.getVarFromNode(this,null,a),f=e.getPropertyName(d);e.addLineFlowCode(`${f} = ${c}`,this);const p=n.node,g=p.node.context({assign:!0}).build(e);for(let m=0;m<p.components.length;m++){const b=p.components[m];e.addLineFlowCode(`${g}.${b} = ${f}[ ${m} ]`,this)}t!=="void"&&(h=o)}else h=`${o} = ${c}`,(t==="void"||l==="void")&&(e.addLineFlowCode(h,this),t!=="void"&&(h=o));return u.initialized=!0,e.format(h,a,t)}}const Yy=it(SC).setParameterLength(2);Z("assign",Yy);class TC extends vn{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}getMemberType(e,t){return this.functionNode.getMemberType(e,t)}generate(e){const t=[],n=this.functionNode,i=n.getInputs(e),r=this.parameters,o=(c,l)=>{const u=l.type,h=u==="pointer";let d;return h?d="&"+c.build(e):d=c.build(e,u),d};if(Array.isArray(r)){if(r.length>i.length)ge("TSL: The number of provided parameters exceeds the expected number of inputs in 'Fn()'."),r.length=i.length;else if(r.length<i.length)for(ge("TSL: The number of provided parameters is less than the expected number of inputs in 'Fn()'.");r.length<i.length;)r.push(R(0));for(let c=0;c<r.length;c++)t.push(o(r[c],i[c]))}else for(const c of i){const l=r[c.name];l!==void 0?t.push(o(l,c)):(ge(`TSL: Input '${c.name}' not found in 'Fn()'.`),t.push(o(R(0),c)))}return`${n.build(e,"property")}( ${t.join(", ")} )`}}const jy=(s,...e)=>(e=e.length>1||e[0]&&e[0].isNode===!0?bo(e):Kh(e[0]),new TC(ee(s),e));Z("call",jy);const MC={"==":"equal","!=":"notEqual","<":"lessThan",">":"greaterThan","<=":"lessThanEqual",">=":"greaterThanEqual","%":"mod"};class sn extends vn{static get type(){return"OperatorNode"}constructor(e,t,n,...i){if(super(),i.length>0){let r=new sn(e,t,n);for(let o=0;o<i.length-1;o++)r=new sn(e,r,i[o]);t=r,n=i[i.length-1]}this.op=e,this.aNode=t,this.bNode=n,this.isOperatorNode=!0}getOperatorMethod(e,t){return e.getMethod(MC[this.op],t)}getNodeType(e,t=null){const n=this.op,i=this.aNode,r=this.bNode,o=i.getNodeType(e),a=r?r.getNodeType(e):null;if(o==="void"||a==="void")return t||"void";if(n==="%")return o;if(n==="~"||n==="&"||n==="|"||n==="^"||n===">>"||n==="<<")return e.getIntegerType(o);if(n==="!"||n==="&&"||n==="||"||n==="^^")return"bool";if(n==="=="||n==="!="||n==="<"||n===">"||n==="<="||n===">="){const c=Math.max(e.getTypeLength(o),e.getTypeLength(a));return c>1?`bvec${c}`:"bool"}else{if(e.isMatrix(o)){if(a==="float")return o;if(e.isVector(a))return e.getVectorFromMatrix(o);if(e.isMatrix(a))return o}else if(e.isMatrix(a)){if(o==="float")return a;if(e.isVector(o))return e.getVectorFromMatrix(a)}return e.getTypeLength(a)>e.getTypeLength(o)?a:o}}generate(e,t){const n=this.op,{aNode:i,bNode:r}=this,o=this.getNodeType(e,t);let a=null,c=null;o!=="void"?(a=i.getNodeType(e),c=r?r.getNodeType(e):null,n==="<"||n===">"||n==="<="||n===">="||n==="=="||n==="!="?e.isVector(a)?c=a:e.isVector(c)?a=c:a!==c&&(a=c="float"):n===">>"||n==="<<"?(a=o,c=e.changeComponentType(c,"uint")):n==="%"?(a=o,c=e.isInteger(a)&&e.isInteger(c)?c:a):e.isMatrix(a)?c==="float"?c="float":e.isVector(c)?c=e.getVectorFromMatrix(a):e.isMatrix(c)||(a=c=o):e.isMatrix(c)?a==="float"?a="float":e.isVector(a)?a=e.getVectorFromMatrix(c):a=c=o:a=c=o):a=c=o;const l=i.build(e,a),u=r?r.build(e,c):null,h=e.getFunctionOperator(n);if(t!=="void"){const d=e.renderer.coordinateSystem===ai;if(n==="=="||n==="!="||n==="<"||n===">"||n==="<="||n===">=")return d?e.isVector(a)?e.format(`${this.getOperatorMethod(e,t)}( ${l}, ${u} )`,o,t):e.format(`( ${l} ${n} ${u} )`,o,t):e.format(`( ${l} ${n} ${u} )`,o,t);if(n==="%")return e.isInteger(c)?e.format(`( ${l} % ${u} )`,o,t):e.format(`${this.getOperatorMethod(e,o)}( ${l}, ${u} )`,o,t);if(n==="!"||n==="~")return e.format(`(${n}${l})`,a,t);if(h)return e.format(`${h}( ${l}, ${u} )`,o,t);if(e.isMatrix(a)&&c==="float")return e.format(`( ${u} ${n} ${l} )`,o,t);if(a==="float"&&e.isMatrix(c))return e.format(`${l} ${n} ${u}`,o,t);{let f=`( ${l} ${n} ${u} )`;return!d&&o==="bool"&&e.isVector(a)&&e.isVector(c)&&(f=`all${f}`),e.format(f,o,t)}}else if(a!=="void")return h?e.format(`${h}( ${l}, ${u} )`,o,t):e.isMatrix(a)&&c==="float"?e.format(`${u} ${n} ${l}`,o,t):e.format(`${l} ${n} ${u}`,o,t)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const Mn=xe(sn,"+").setParameterLength(2,1/0).setName("add"),Tt=xe(sn,"-").setParameterLength(2,1/0).setName("sub"),st=xe(sn,"*").setParameterLength(2,1/0).setName("mul"),Gi=xe(sn,"/").setParameterLength(2,1/0).setName("div"),Hl=xe(sn,"%").setParameterLength(2).setName("mod"),Lm=xe(sn,"==").setParameterLength(2).setName("equal"),Ky=xe(sn,"!=").setParameterLength(2).setName("notEqual"),Zy=xe(sn,"<").setParameterLength(2).setName("lessThan"),Dm=xe(sn,">").setParameterLength(2).setName("greaterThan"),Qy=xe(sn,"<=").setParameterLength(2).setName("lessThanEqual"),Jy=xe(sn,">=").setParameterLength(2).setName("greaterThanEqual"),eb=xe(sn,"&&").setParameterLength(2,1/0).setName("and"),tb=xe(sn,"||").setParameterLength(2,1/0).setName("or"),nb=xe(sn,"!").setParameterLength(1).setName("not"),ib=xe(sn,"^^").setParameterLength(2).setName("xor"),sb=xe(sn,"&").setParameterLength(2).setName("bitAnd"),rb=xe(sn,"~").setParameterLength(1).setName("bitNot"),ob=xe(sn,"|").setParameterLength(2).setName("bitOr"),ab=xe(sn,"^").setParameterLength(2).setName("bitXor"),cb=xe(sn,"<<").setParameterLength(2).setName("shiftLeft"),lb=xe(sn,">>").setParameterLength(2).setName("shiftRight"),ub=O(([s])=>(s.addAssign(1),s)),hb=O(([s])=>(s.subAssign(1),s)),db=O(([s])=>{const e=U(s).toConst();return s.addAssign(1),e}),fb=O(([s])=>{const e=U(s).toConst();return s.subAssign(1),e});Z("add",Mn);Z("sub",Tt);Z("mul",st);Z("div",Gi);Z("mod",Hl);Z("equal",Lm);Z("notEqual",Ky);Z("lessThan",Zy);Z("greaterThan",Dm);Z("lessThanEqual",Qy);Z("greaterThanEqual",Jy);Z("and",eb);Z("or",tb);Z("not",nb);Z("xor",ib);Z("bitAnd",sb);Z("bitNot",rb);Z("bitOr",ob);Z("bitXor",ab);Z("shiftLeft",cb);Z("shiftRight",lb);Z("incrementBefore",ub);Z("decrementBefore",hb);Z("increment",db);Z("decrement",fb);const pb=(s,e)=>(te('TSL: "modInt()" is deprecated. Use "mod( int( ... ) )" instead.'),Hl(U(s),U(e)));Z("modInt",pb);class k extends vn{static get type(){return"MathNode"}constructor(e,t,n=null,i=null){if(super(),(e===k.MAX||e===k.MIN)&&arguments.length>3){let r=new k(e,t,n);for(let o=2;o<arguments.length-1;o++)r=new k(e,r,arguments[o]);t=r,n=arguments[arguments.length-1],i=null}this.method=e,this.aNode=t,this.bNode=n,this.cNode=i,this.isMathNode=!0}getInputType(e){const t=this.aNode.getNodeType(e),n=this.bNode?this.bNode.getNodeType(e):null,i=this.cNode?this.cNode.getNodeType(e):null,r=e.isMatrix(t)?0:e.getTypeLength(t),o=e.isMatrix(n)?0:e.getTypeLength(n),a=e.isMatrix(i)?0:e.getTypeLength(i);return r>o&&r>a?t:o>a?n:a>r?i:t}getNodeType(e){const t=this.method;return t===k.LENGTH||t===k.DISTANCE||t===k.DOT?"float":t===k.CROSS?"vec3":t===k.ALL||t===k.ANY?"bool":t===k.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):this.getInputType(e)}setup(e){const{aNode:t,bNode:n,method:i}=this;let r=null;if(i===k.ONE_MINUS)r=Tt(1,t);else if(i===k.RECIPROCAL)r=Gi(1,t);else if(i===k.DIFFERENCE)r=$t(Tt(t,n));else if(i===k.TRANSFORM_DIRECTION){let o=t,a=n;e.isMatrix(o.getNodeType(e))?a=$e(F(a),0):o=$e(F(o),0);const c=st(o,a).xyz;r=Si(c)}return r!==null?r:super.setup(e)}generate(e,t){if(e.getNodeProperties(this).outputNode)return super.generate(e,t);let i=this.method;const r=this.getNodeType(e),o=this.getInputType(e),a=this.aNode,c=this.bNode,l=this.cNode,u=e.renderer.coordinateSystem;if(i===k.NEGATE)return e.format("( - "+a.build(e,o)+" )",r,t);{const h=[];return i===k.CROSS?h.push(a.build(e,r),c.build(e,r)):u===ai&&i===k.STEP?h.push(a.build(e,e.getTypeLength(a.getNodeType(e))===1?"float":o),c.build(e,o)):u===ai&&(i===k.MIN||i===k.MAX)?h.push(a.build(e,o),c.build(e,e.getTypeLength(c.getNodeType(e))===1?"float":o)):i===k.REFRACT?h.push(a.build(e,o),c.build(e,o),l.build(e,"float")):i===k.MIX?h.push(a.build(e,o),c.build(e,o),l.build(e,e.getTypeLength(l.getNodeType(e))===1?"float":o)):(u===ks&&i===k.ATAN&&c!==null&&(i="atan2"),e.shaderStage!=="fragment"&&(i===k.DFDX||i===k.DFDY)&&(te(`TSL: '${i}' is not supported in the ${e.shaderStage} stage.`),i="/*"+i+"*/"),h.push(a.build(e,o)),c!==null&&h.push(c.build(e,o)),l!==null&&h.push(l.build(e,o))),e.format(`${e.getMethod(i,r)}( ${h.join(", ")} )`,r,t)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}k.ALL="all";k.ANY="any";k.RADIANS="radians";k.DEGREES="degrees";k.EXP="exp";k.EXP2="exp2";k.LOG="log";k.LOG2="log2";k.SQRT="sqrt";k.INVERSE_SQRT="inversesqrt";k.FLOOR="floor";k.CEIL="ceil";k.NORMALIZE="normalize";k.FRACT="fract";k.SIN="sin";k.COS="cos";k.TAN="tan";k.ASIN="asin";k.ACOS="acos";k.ATAN="atan";k.ABS="abs";k.SIGN="sign";k.LENGTH="length";k.NEGATE="negate";k.ONE_MINUS="oneMinus";k.DFDX="dFdx";k.DFDY="dFdy";k.ROUND="round";k.RECIPROCAL="reciprocal";k.TRUNC="trunc";k.FWIDTH="fwidth";k.TRANSPOSE="transpose";k.DETERMINANT="determinant";k.INVERSE="inverse";k.EQUALS="equals";k.MIN="min";k.MAX="max";k.STEP="step";k.REFLECT="reflect";k.DISTANCE="distance";k.DIFFERENCE="difference";k.DOT="dot";k.CROSS="cross";k.POW="pow";k.TRANSFORM_DIRECTION="transformDirection";k.MIX="mix";k.CLAMP="clamp";k.REFRACT="refract";k.SMOOTHSTEP="smoothstep";k.FACEFORWARD="faceforward";const Um=R(1e-6),EC=R(1e6),Nh=R(Math.PI),AC=R(Math.PI*2),wC=R(Math.PI*2),RC=R(Math.PI*.5),mb=xe(k,k.ALL).setParameterLength(1),gb=xe(k,k.ANY).setParameterLength(1),xb=xe(k,k.RADIANS).setParameterLength(1),_b=xe(k,k.DEGREES).setParameterLength(1),Im=xe(k,k.EXP).setParameterLength(1),ic=xe(k,k.EXP2).setParameterLength(1),nd=xe(k,k.LOG).setParameterLength(1),Is=xe(k,k.LOG2).setParameterLength(1),_i=xe(k,k.SQRT).setParameterLength(1),Fm=xe(k,k.INVERSE_SQRT).setParameterLength(1),Fs=xe(k,k.FLOOR).setParameterLength(1),id=xe(k,k.CEIL).setParameterLength(1),Si=xe(k,k.NORMALIZE).setParameterLength(1),fs=xe(k,k.FRACT).setParameterLength(1),pi=xe(k,k.SIN).setParameterLength(1),Ns=xe(k,k.COS).setParameterLength(1),yb=xe(k,k.TAN).setParameterLength(1),bb=xe(k,k.ASIN).setParameterLength(1),Bm=xe(k,k.ACOS).setParameterLength(1),sd=xe(k,k.ATAN).setParameterLength(1,2),$t=xe(k,k.ABS).setParameterLength(1),Nl=xe(k,k.SIGN).setParameterLength(1),Bs=xe(k,k.LENGTH).setParameterLength(1),vb=xe(k,k.NEGATE).setParameterLength(1),Sb=xe(k,k.ONE_MINUS).setParameterLength(1),Om=xe(k,k.DFDX).setParameterLength(1),Vm=xe(k,k.DFDY).setParameterLength(1),Tb=xe(k,k.ROUND).setParameterLength(1),Mb=xe(k,k.RECIPROCAL).setParameterLength(1),Gm=xe(k,k.TRUNC).setParameterLength(1),zm=xe(k,k.FWIDTH).setParameterLength(1),Eb=xe(k,k.TRANSPOSE).setParameterLength(1),Ab=xe(k,k.DETERMINANT).setParameterLength(1),wb=xe(k,k.INVERSE).setParameterLength(1),Rb=(s,e)=>(te('TSL: "equals" is deprecated. Use "equal" inside a vector instead, like: "bvec*( equal( ... ) )"'),Lm(s,e)),Mi=xe(k,k.MIN).setParameterLength(2,1/0),Jt=xe(k,k.MAX).setParameterLength(2,1/0),rd=xe(k,k.STEP).setParameterLength(2),Nb=xe(k,k.REFLECT).setParameterLength(2),Cb=xe(k,k.DISTANCE).setParameterLength(2),Pb=xe(k,k.DIFFERENCE).setParameterLength(2),ps=xe(k,k.DOT).setParameterLength(2),Co=xe(k,k.CROSS).setParameterLength(2),Xi=xe(k,k.POW).setParameterLength(2),km=s=>st(s,s),Lb=s=>st(s,s,s),Hm=s=>st(s,s,s,s),Db=xe(k,k.TRANSFORM_DIRECTION).setParameterLength(2),Ub=s=>st(Nl(s),Xi($t(s),1/3)),Wm=s=>ps(s,s),Ct=xe(k,k.MIX).setParameterLength(3),Ji=(s,e=0,t=1)=>ee(new k(k.CLAMP,ee(s),ee(e),ee(t))),$m=s=>Ji(s),Xm=xe(k,k.REFRACT).setParameterLength(3),ms=xe(k,k.SMOOTHSTEP).setParameterLength(3),qm=xe(k,k.FACEFORWARD).setParameterLength(3),Ib=O(([s])=>{const n=43758.5453,i=ps(s.xy,ie(12.9898,78.233)),r=Hl(i,Nh);return fs(pi(r).mul(n))}),Fb=(s,e,t)=>Ct(e,t,s),Bb=(s,e,t)=>ms(e,t,s),Ob=(s,e)=>rd(e,s),Vb=(s,e)=>(te('TSL: "atan2" is overloaded. Use "atan" instead.'),sd(s,e)),NC=qm,CC=Fm;Z("all",mb);Z("any",gb);Z("equals",Rb);Z("radians",xb);Z("degrees",_b);Z("exp",Im);Z("exp2",ic);Z("log",nd);Z("log2",Is);Z("sqrt",_i);Z("inverseSqrt",Fm);Z("floor",Fs);Z("ceil",id);Z("normalize",Si);Z("fract",fs);Z("sin",pi);Z("cos",Ns);Z("tan",yb);Z("asin",bb);Z("acos",Bm);Z("atan",sd);Z("abs",$t);Z("sign",Nl);Z("length",Bs);Z("lengthSq",Wm);Z("negate",vb);Z("oneMinus",Sb);Z("dFdx",Om);Z("dFdy",Vm);Z("round",Tb);Z("reciprocal",Mb);Z("trunc",Gm);Z("fwidth",zm);Z("atan2",Vb);Z("min",Mi);Z("max",Jt);Z("step",Ob);Z("reflect",Nb);Z("distance",Cb);Z("dot",ps);Z("cross",Co);Z("pow",Xi);Z("pow2",km);Z("pow3",Lb);Z("pow4",Hm);Z("transformDirection",Db);Z("mix",Fb);Z("clamp",Ji);Z("refract",Xm);Z("smoothstep",Bb);Z("faceForward",qm);Z("difference",Pb);Z("saturate",$m);Z("cbrt",Ub);Z("transpose",Eb);Z("determinant",Ab);Z("inverse",wb);Z("rand",Ib);class PC extends De{static get type(){return"ConditionalNode"}constructor(e,t,n=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=n}getNodeType(e){const{ifNode:t,elseNode:n}=e.getNodeProperties(this);if(t===void 0)return e.flowBuildStage(this,"setup"),this.getNodeType(e);const i=t.getNodeType(e);if(n!==null){const r=n.getNodeType(e);if(e.getTypeLength(r)>e.getTypeLength(i))return r}return i}setup(e){const t=this.condNode,n=this.ifNode.isolate(),i=this.elseNode?this.elseNode.isolate():null,r=e.context.nodeBlock;e.getDataFromNode(n).parentNodeBlock=r,i!==null&&(e.getDataFromNode(i).parentNodeBlock=r);const o=e.context.uniformFlow,a=e.getNodeProperties(this);a.condNode=t,a.ifNode=o?n:n.context({nodeBlock:n}),a.elseNode=i?o?i:i.context({nodeBlock:i}):null}generate(e,t){const n=this.getNodeType(e),i=e.getDataFromNode(this);if(i.nodeProperty!==void 0)return i.nodeProperty;const{condNode:r,ifNode:o,elseNode:a}=e.getNodeProperties(this),c=e.currentFunctionNode,l=t!=="void",u=l?lr(n).build(e):"";i.nodeProperty=u;const h=r.build(e,"bool");if(e.context.uniformFlow&&a!==null){const p=o.build(e,n),x=a.build(e,n),g=e.getTernary(h,p,x);return e.format(g,n,t)}e.addFlowCode(`
${e.tab}if ( ${h} ) {

`).addFlowTab();let f=o.build(e,n);if(f&&(l?f=u+" = "+f+";":(f="return "+f+";",c===null&&(te("TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),f="// "+f))),e.removeFlowTab().addFlowCode(e.tab+"	"+f+`

`+e.tab+"}"),a!==null){e.addFlowCode(` else {

`).addFlowTab();let p=a.build(e,n);p&&(l?p=u+" = "+p+";":(p="return "+p+";",c===null&&(te("TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),p="// "+p))),e.removeFlowTab().addFlowCode(e.tab+"	"+p+`

`+e.tab+`}

`)}else e.addFlowCode(`

`);return e.format(u,n,t)}}const wn=it(PC).setParameterLength(2,3);Z("select",wn);class Gb extends De{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}getMemberType(e,t){return this.node.getMemberType(e,t)}analyze(e){const t=e.addContext(this.value);this.node.build(e),e.setContext(t)}setup(e){const t=e.addContext(this.value);this.node.build(e),e.setContext(t)}generate(e,t){const n=e.addContext(this.value),i=this.node.build(e,t);return e.setContext(n),i}}const Wl=it(Gb).setParameterLength(1,2),zb=s=>Wl(s,{uniformFlow:!0}),Ym=(s,e)=>Wl(s,{nodeName:e});function kb(s,e){return te('TSL: "label()" has been deprecated. Use "setName()" instead.'),Ym(s,e)}Z("context",Wl);Z("label",kb);Z("uniformFlow",zb);Z("setName",Ym);class hh extends De{static get type(){return"VarNode"}constructor(e,t=null,n=!1){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0,this.readOnly=n,this.parents=!0,this.intent=!1}setIntent(e){return this.intent=e,this}getIntent(){return this.intent}getMemberType(e,t){return this.node.getMemberType(e,t)}getElementType(e){return this.node.getElementType(e)}getNodeType(e){return this.node.getNodeType(e)}getArrayCount(e){return this.node.getArrayCount(e)}isAssign(e){let n=e.getNodeProperties(this).assign;return n!==!0&&this.node.isShaderCallNodeInternal&&this.node.shaderNode.getLayout()===null&&e.fnCall&&e.fnCall.shaderNode&&e.getDataFromNode(this.node.shaderNode).hasLoop&&(n=!0),n}build(...e){const t=e[0];return this._hasStack(t)===!1&&t.buildStage==="setup"&&(t.context.nodeLoop||t.context.nodeBlock)&&t.getBaseStack().addToStack(this),this.intent===!0&&this.isAssign(t)!==!0?this.node.build(...e):super.build(...e)}generate(e){const{node:t,name:n,readOnly:i}=this,{renderer:r}=e,o=r.backend.isWebGPUBackend===!0;let a=!1,c=!1;i&&(a=e.isDeterministic(t),c=o?i:a);const l=this.getNodeType(e);if(l=="void")return this.intent!==!0&&ge('TSL: ".toVar()" can not be used with void type.'),t.build(e);const u=e.getVectorType(l),h=t.build(e,u),d=e.getVarFromNode(this,n,u,void 0,c),f=e.getPropertyName(d);let p=f;if(c)if(o)p=a?`const ${f}`:`let ${f}`;else{const x=t.getArrayCount(e);p=`const ${e.getVar(d.type,f,x)}`}return e.addLineFlowCode(`${p} = ${h}`,this),f}_hasStack(e){return e.getDataFromNode(this).stack!==void 0}}const jm=it(hh),Hb=(s,e=null)=>jm(s,e).toStack(),Wb=(s,e=null)=>jm(s,e,!0).toStack(),$b=s=>jm(s).setIntent(!0).toStack();Z("toVar",Hb);Z("toConst",Wb);Z("toVarIntent",$b);class LC extends De{static get type(){return"SubBuild"}constructor(e,t,n=null){super(n),this.node=e,this.name=t,this.isSubBuildNode=!0}getNodeType(e){if(this.nodeType!==null)return this.nodeType;e.addSubBuild(this.name);const t=this.node.getNodeType(e);return e.removeSubBuild(),t}build(e,...t){e.addSubBuild(this.name);const n=this.node.build(e,...t);return e.removeSubBuild(),n}}const Ta=(s,e,t=null)=>ee(new LC(ee(s),e,t));class DC extends De{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0,this.interpolationType=null,this.interpolationSampling=null,this.global=!0}setInterpolation(e,t=null){return this.interpolationType=e,this.interpolationSampling=t,this}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let n=t.varying;if(n===void 0){const i=this.name,r=this.getNodeType(e),o=this.interpolationType,a=this.interpolationSampling;t.varying=n=e.getVaryingFromNode(this,i,r,o,a),t.node=Ta(this.node,"VERTEX")}return n.needsInterpolation||(n.needsInterpolation=e.shaderStage==="fragment"),n}setup(e){this.setupVarying(e),e.flowNodeFromShaderStage($c.VERTEX,this.node)}analyze(e){this.setupVarying(e),e.flowNodeFromShaderStage($c.VERTEX,this.node)}generate(e){const t=e.getSubBuildProperty("property",e.currentStack),n=e.getNodeProperties(this),i=this.setupVarying(e);if(n[t]===void 0){const r=this.getNodeType(e),o=e.getPropertyName(i,$c.VERTEX);e.flowNodeFromShaderStage($c.VERTEX,n.node,r,o),n[t]=o}return e.getPropertyName(i)}}const Xs=it(DC).setParameterLength(1,2),Xb=s=>Xs(s);Z("toVarying",Xs);Z("toVertexStage",Xb);Z("varying",(...s)=>(te("TSL: .varying() has been renamed to .toVarying()."),Xs(...s)));Z("vertexStage",(...s)=>(te("TSL: .vertexStage() has been renamed to .toVertexStage()."),Xs(...s)));const qb=O(([s])=>{const e=s.mul(.9478672986).add(.0521327014).pow(2.4),t=s.mul(.0773993808),n=s.lessThanEqual(.04045);return Ct(e,t,n)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Yb=O(([s])=>{const e=s.pow(.41666).mul(1.055).sub(.055),t=s.mul(12.92),n=s.lessThanEqual(.0031308);return Ct(e,t,n)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Km="WorkingColorSpace",UC="OutputColorSpace";class Zm extends vn{static get type(){return"ColorSpaceNode"}constructor(e,t,n){super("vec4"),this.colorNode=e,this.source=t,this.target=n}resolveColorSpace(e,t){return t===Km?et.workingColorSpace:t===UC?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{colorNode:t}=this,n=this.resolveColorSpace(e,this.source),i=this.resolveColorSpace(e,this.target);let r=t;return et.enabled===!1||n===i||!n||!i||(et.getTransfer(n)===Ue&&(r=$e(qb(r.rgb),r.a)),et.getPrimaries(n)!==et.getPrimaries(i)&&(r=$e(ei(et._getMatrix(new gt,n,i)).mul(r.rgb),r.a)),et.getTransfer(i)===Ue&&(r=$e(Yb(r.rgb),r.a))),r}}const jb=(s,e)=>ee(new Zm(ee(s),Km,e)),od=(s,e)=>ee(new Zm(ee(s),e,Km)),IC=(s,e,t)=>ee(new Zm(ee(s),e,t));Z("workingToColorSpace",jb);Z("colorSpaceToWorking",od);let FC=class extends Fo{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),n=this.referenceNode.getNodeType(),i=this.getNodeType();return e.format(t,n,i)}};class Kb extends De{static get type(){return"ReferenceBaseNode"}constructor(e,t,n=null,i=null){super(),this.property=e,this.uniformType=t,this.object=n,this.count=i,this.properties=e.split("."),this.reference=n,this.node=null,this.group=null,this.updateType=at.OBJECT}setGroup(e){return this.group=e,this}element(e){return ee(new FC(this,ee(e)))}setNodeType(e){const t=Ge(null,e);this.group!==null&&t.setGroup(this.group),this.node=t}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let n=e[t[0]];for(let i=1;i<t.length;i++)n=n[t[i]];return n}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const BC=(s,e,t)=>ee(new Kb(s,e,t));class OC extends Kb{static get type(){return"RendererReferenceNode"}constructor(e,t,n=null){super(e,t,n),this.renderer=n,this.setGroup(ke)}updateReference(e){return this.reference=this.renderer!==null?this.renderer:e.renderer,this.reference}}const Zb=(s,e,t=null)=>ee(new OC(s,e,t));class VC extends vn{static get type(){return"ToneMappingNode"}constructor(e,t=Jb,n=null){super("vec3"),this._toneMapping=e,this.exposureNode=t,this.colorNode=n}customCacheKey(){return Qc(this._toneMapping)}setToneMapping(e){return this._toneMapping=e,this}getToneMapping(){return this._toneMapping}setup(e){const t=this.colorNode||e.context.color,n=this._toneMapping;if(n===oi)return t;let i=null;const r=e.renderer.library.getToneMappingFunction(n);return r!==null?i=$e(r(t.rgb,this.exposureNode),t.a):(ge("ToneMappingNode: Unsupported Tone Mapping configuration.",n),i=t),i}}const Qb=(s,e,t)=>ee(new VC(s,ee(e),ee(t))),Jb=Zb("toneMappingExposure","float");Z("toneMapping",(s,e,t)=>Qb(e,t,s));class GC extends ym{static get type(){return"BufferAttributeNode"}constructor(e,t=null,n=0,i=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=n,this.bufferOffset=i,this.usage=_h,this.instanced=!1,this.attribute=null,this.global=!0,e&&e.isBufferAttribute===!0&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(this.bufferStride===0&&this.bufferOffset===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return this.bufferType===null&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(this.attribute!==null)return;const t=this.getNodeType(e),n=this.value,i=e.getTypeLength(t),r=this.bufferStride||i,o=this.bufferOffset,a=n.isInterleavedBuffer===!0?n:new im(n,r),c=new Ds(a,i,o);a.setUsage(this.usage),this.attribute=c,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),n=e.getBufferAttributeFromNode(this,t),i=e.getPropertyName(n);let r=null;return e.shaderStage==="vertex"||e.shaderStage==="compute"?(this.name=i,r=i):r=Xs(this).build(e,t),r}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const $l=(s,e=null,t=0,n=0)=>ee(new GC(s,e,t,n)),ev=(s,e=null,t=0,n=0)=>$l(s,e,t,n).setUsage(ga),Ch=(s,e=null,t=0,n=0)=>$l(s,e,t,n).setInstanced(!0),hp=(s,e=null,t=0,n=0)=>ev(s,e,t,n).setInstanced(!0);Z("toAttribute",s=>$l(s.value));class zC extends De{static get type(){return"ComputeNode"}constructor(e,t){super("void"),this.isComputeNode=!0,this.computeNode=e,this.workgroupSize=t,this.count=null,this.version=1,this.name="",this.updateBeforeType=at.OBJECT,this.onInitFunction=null}setCount(e){return this.count=e,this}getCount(){return this.count}dispose(){this.dispatchEvent({type:"dispose"})}setName(e){return this.name=e,this}label(e){return te('TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}setup(e){const t=this.computeNode.build(e);if(t){const n=e.getNodeProperties(this);n.outputComputeNode=t.outputNode,t.outputNode=null}return t}generate(e,t){const{shaderStage:n}=e;if(n==="compute"){const i=this.computeNode.build(e,"void");i!==""&&e.addLineFlowCode(i,this)}else{const r=e.getNodeProperties(this).outputComputeNode;if(r)return r.build(e,t)}}}const Qm=(s,e=[64])=>{(e.length===0||e.length>3)&&ge("TSL: compute() workgroupSize must have 1, 2, or 3 elements");for(let t=0;t<e.length;t++){const n=e[t];(typeof n!="number"||n<=0||!Number.isInteger(n))&&ge(`TSL: compute() workgroupSize element at index [ ${t} ] must be a positive integer`)}for(;e.length<3;)e.push(1);return ee(new zC(ee(s),e))},tv=(s,e,t)=>Qm(s,t).setCount(e);Z("compute",tv);Z("computeKernel",Qm);class kC extends De{static get type(){return"IsolateNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isIsolateNode=!0}getNodeType(e){const t=e.getCache(),n=e.getCacheFromNode(this,this.parent);e.setCache(n);const i=this.node.getNodeType(e);return e.setCache(t),i}build(e,...t){const n=e.getCache(),i=e.getCacheFromNode(this,this.parent);e.setCache(i);const r=this.node.build(e,...t);return e.setCache(n),r}setParent(e){return this.parent=e,this}getParent(){return this.parent}}const Ma=s=>new kC(ee(s));function nv(s,e=!0){return te('TSL: "cache()" has been deprecated. Use "isolate()" instead.'),Ma(s).setParent(e)}Z("cache",nv);Z("isolate",Ma);class HC extends De{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return t!==""&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const iv=it(HC).setParameterLength(2);Z("bypass",iv);class sv extends De{static get type(){return"RemapNode"}constructor(e,t,n,i=R(0),r=R(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=n,this.outLowNode=i,this.outHighNode=r,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:n,outLowNode:i,outHighNode:r,doClamp:o}=this;let a=e.sub(t).div(n.sub(t));return o===!0&&(a=a.clamp()),a.mul(r.sub(i)).add(i)}}const rv=it(sv,null,null,{doClamp:!1}).setParameterLength(3,5),ov=it(sv).setParameterLength(3,5);Z("remap",rv);Z("remapClamp",ov);class dh extends De{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const n=this.getNodeType(e),i=this.snippet;if(n==="void")e.addLineFlowCode(i,this);else return e.format(i,n,t)}}const fr=it(dh).setParameterLength(1,2),av=s=>(s?wn(s,fr("discard")):fr("discard")).toStack(),WC=()=>fr("return").toStack();Z("discard",av);class $C extends vn{static get type(){return"RenderOutputNode"}constructor(e,t,n){super("vec4"),this.colorNode=e,this._toneMapping=t,this.outputColorSpace=n,this.isRenderOutputNode=!0}setToneMapping(e){return this._toneMapping=e,this}getToneMapping(){return this._toneMapping}setup({context:e}){let t=this.colorNode||e.color;const n=(this._toneMapping!==null?this._toneMapping:e.toneMapping)||oi,i=(this.outputColorSpace!==null?this.outputColorSpace:e.outputColorSpace)||mi;return n!==oi&&(t=t.toneMapping(n)),i!==mi&&i!==et.workingColorSpace&&(t=t.workingToColorSpace(i)),t}}const cv=(s,e=null,t=null)=>ee(new $C(ee(s),e,t));Z("renderOutput",cv);class XC extends vn{static get type(){return"DebugNode"}constructor(e,t=null){super(),this.node=e,this.callback=t}getNodeType(e){return this.node.getNodeType(e)}setup(e){return this.node.build(e)}analyze(e){return this.node.build(e)}generate(e){const t=this.callback,n=this.node.build(e),i="--- TSL debug - "+e.shaderStage+" shader ---",r="-".repeat(i.length);let o="";return o+="// #"+i+`#
`,o+=e.flow.code.replace(/^\t/mg,"")+`
`,o+="/* ... */ "+n+` /* ... */
`,o+="// #"+r+`#
`,t!==null?t(e,o):yl(o),n}}const lv=(s,e=null)=>ee(new XC(ee(s),e)).toStack();Z("debug",lv);class uv{constructor(){this._renderer=null,this.currentFrame=null}get nodeFrame(){return this._renderer._nodes.nodeFrame}setRenderer(e){return this._renderer=e,this}getRenderer(){return this._renderer}init(){}begin(){}finish(){}inspect(){}computeAsync(){}beginCompute(){}finishCompute(){}beginRender(){}finishRender(){}copyTextureToTexture(){}copyFramebufferToTexture(){}}class qC extends De{static get type(){return"InspectorNode"}constructor(e,t="",n=null){super(),this.node=e,this.name=t,this.callback=n,this.updateType=at.FRAME,this.isInspectorNode=!0}getName(){return this.name||this.node.name}update(e){e.renderer.inspector.inspect(this)}getNodeType(e){return this.node.getNodeType(e)}setup(e){let t=this.node;return e.context.inspector===!0&&this.callback!==null&&(t=this.callback(t)),e.renderer.backend.isWebGPUBackend!==!0&&e.renderer.inspector.constructor!==uv&&Wt('TSL: ".toInspector()" is only available with WebGPU.'),t}}function hv(s,e="",t=null){return s=ee(s),s.before(new qC(s,e,t))}Z("toInspector",hv);function YC(s){te("TSL: AddNodeElement has been removed in favor of tree-shaking. Trying add",s)}class dv extends De{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(t===null){const n=this.getAttributeName(e);if(e.hasGeometryAttribute(n)){const i=e.geometry.getAttribute(n);t=e.getTypeFromAttribute(i)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),n=this.getNodeType(e);if(e.hasGeometryAttribute(t)===!0){const r=e.geometry.getAttribute(t),o=e.getTypeFromAttribute(r),a=e.getAttribute(t,o);return e.shaderStage==="vertex"?e.format(a.name,o,n):Xs(this).build(e,n)}else return te(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(n)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const pr=(s,e=null)=>ee(new dv(s,e)),Vt=(s=0)=>pr("uv"+(s>0?s:""),"vec2");class jC extends De{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const n=this.textureNode.build(e,"property"),i=this.levelNode===null?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${n}, ${i} )`,this.getNodeType(e),t)}}const ur=it(jC).setParameterLength(1,2);class KC extends kl{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=at.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,n=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(n&&n.width!==void 0){const{width:i,height:r}=n;this.value=Math.log2(Math.max(i,r))}}}const Jm=it(KC).setParameterLength(1),eg=new Rn;class Hs extends kl{static get type(){return"TextureNode"}constructor(e=eg,t=null,n=null,i=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=n,this.biasNode=i,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.offsetNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=at.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this._flipYUniform=null,this.setUpdateMatrix(t===null)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===Kt?"uvec4":this.value.type===On?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return Vt(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return this._matrixUniform===null&&(this._matrixUniform=Ge(this.value.matrix)),this._matrixUniform.mul(F(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this}setupUV(e,t){return e.isFlipY()&&(this._flipYUniform===null&&(this._flipYUniform=Ge(!1)),t=t.toVar(),this.sampler?t=this._flipYUniform.select(t.flipY(),t):t=this._flipYUniform.select(t.setY(U(ur(this,this.levelNode).y).sub(t.y).sub(1)),t)),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;const n=this.value;if(!n||n.isTexture!==!0)throw new Error("THREE.TSL: `texture( value )` function expects a valid instance of THREE.Texture().");const i=O(()=>{let o=this.uvNode;return(o===null||e.context.forceUVContext===!0)&&e.context.getUV&&(o=e.context.getUV(this,e)),o||(o=this.getDefaultUV()),this.updateMatrix===!0&&(o=this.getTransformedUV(o)),o=this.setupUV(e,o),this.updateType=this._matrixUniform!==null||this._flipYUniform!==null?at.OBJECT:at.NONE,o})();let r=this.levelNode;r===null&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),t.uvNode=i,t.levelNode=r,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode,t.offsetNode=this.offsetNode}generateUV(e,t){return t.build(e,this.sampler===!0?"vec2":"ivec2")}generateOffset(e,t){return t.build(e,"ivec2")}generateSnippet(e,t,n,i,r,o,a,c,l){const u=this.value;let h;return r?h=e.generateTextureBias(u,t,n,r,o,l):c?h=e.generateTextureGrad(u,t,n,c,o,l):a?h=e.generateTextureCompare(u,t,n,a,o,l):this.sampler===!1?h=e.generateTextureLoad(u,t,n,i,o,l):i?h=e.generateTextureLevel(u,t,n,i,o,l):h=e.generateTexture(u,t,n,o,l),h}generate(e,t){const n=this.value,i=e.getNodeProperties(this),r=super.generate(e,"property");if(/^sampler/.test(t))return r+"_sampler";if(e.isReference(t))return r;{const o=e.getDataFromNode(this);let a=o.propertyName;if(a===void 0){const{uvNode:u,levelNode:h,biasNode:d,compareNode:f,depthNode:p,gradNode:x,offsetNode:g}=i,m=this.generateUV(e,u),b=h?h.build(e,"float"):null,y=d?d.build(e,"float"):null,v=p?p.build(e,"int"):null,w=f?f.build(e,"float"):null,S=x?[x[0].build(e,"vec2"),x[1].build(e,"vec2")]:null,E=g?this.generateOffset(e,g):null,C=e.getVarFromNode(this);a=e.getPropertyName(C);const T=this.generateSnippet(e,r,m,b,y,v,w,S,E);e.addLineFlowCode(`${a} = ${T}`,this),o.snippet=T,o.propertyName=a}let c=a;const l=this.getNodeType(e);return e.needsToWorkingColorSpace(n)&&(c=od(fr(c,l),n.colorSpace).setup(e).build(e,l)),e.format(c,l,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){return te("TextureNode: .uv() has been renamed. Use .sample() instead."),this.sample(e)}sample(e){const t=this.clone();return t.uvNode=ee(e),t.referenceNode=this.getBase(),ee(t)}load(e){return this.sample(e).setSampler(!1)}blur(e){const t=this.clone();t.biasNode=ee(e).mul(Jm(t)),t.referenceNode=this.getBase();const n=t.value;return t.generateMipmaps===!1&&(n&&n.generateMipmaps===!1||n.minFilter===Qt||n.magFilter===Qt)&&(te("TSL: texture().blur() requires mipmaps and sampling. Use .generateMipmaps=true and .minFilter/.magFilter=THREE.LinearFilter in the Texture."),t.biasNode=null),ee(t)}level(e){const t=this.clone();return t.levelNode=ee(e),t.referenceNode=this.getBase(),ee(t)}size(e){return ur(this,e)}bias(e){const t=this.clone();return t.biasNode=ee(e),t.referenceNode=this.getBase(),ee(t)}getBase(){return this.referenceNode?this.referenceNode.getBase():this}compare(e){const t=this.clone();return t.compareNode=ee(e),t.referenceNode=this.getBase(),ee(t)}grad(e,t){const n=this.clone();return n.gradNode=[ee(e),ee(t)],n.referenceNode=this.getBase(),ee(n)}depth(e){const t=this.clone();return t.depthNode=ee(e),t.referenceNode=this.getBase(),ee(t)}offset(e){const t=this.clone();return t.offsetNode=ee(e),t.referenceNode=this.getBase(),ee(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;t!==null&&(t.value=e.matrix),e.matrixAutoUpdate===!0&&e.updateMatrix();const n=this._flipYUniform;n!==null&&(n.value=e.image instanceof ImageBitmap&&e.flipY===!0||e.isRenderTargetTexture===!0||e.isFramebufferTexture===!0||e.isDepthTexture===!0)}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e.offsetNode=this.offsetNode,e}}const ZC=it(Hs).setParameterLength(1,4).setName("texture"),xt=(s=eg,e=null,t=null,n=null)=>{let i;return s&&s.isTextureNode===!0?(i=ee(s.clone()),i.referenceNode=s.getBase(),e!==null&&(i.uvNode=ee(e)),t!==null&&(i.levelNode=ee(t)),n!==null&&(i.biasNode=ee(n))):i=ZC(s,e,t,n),i},QC=(s=eg)=>xt(s),an=(...s)=>xt(...s).setSampler(!1),JC=(s,e,t)=>xt(s,e).level(t),e2=s=>(s.isNode===!0?s:xt(s)).convert("sampler"),t2=s=>(s.isNode===!0?s:xt(s)).convert("samplerComparison");class tg extends kl{static get type(){return"BufferNode"}constructor(e,t,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=n}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const Xl=(s,e,t)=>ee(new tg(s,e,t));class n2 extends Fo{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),n=this.getNodeType(),i=this.node.getPaddedType();return e.format(t,i,n)}}class i2 extends tg{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null),this.array=e,this.elementType=t===null?Pr(e[0]):t,this.paddedType=this.getPaddedType(),this.updateType=at.RENDER,this.isArrayBufferNode=!0}getNodeType(){return this.paddedType}getElementType(){return this.elementType}getPaddedType(){const e=this.elementType;let t="vec4";return e==="mat2"?t="mat2":/mat/.test(e)===!0?t="mat4":e.charAt(0)==="i"?t="ivec4":e.charAt(0)==="u"&&(t="uvec4"),t}update(){const{array:e,value:t}=this,n=this.elementType;if(n==="float"||n==="int"||n==="uint")for(let i=0;i<e.length;i++){const r=i*4;t[r]=e[i]}else if(n==="color")for(let i=0;i<e.length;i++){const r=i*4,o=e[i];t[r]=o.r,t[r+1]=o.g,t[r+2]=o.b||0}else if(n==="mat2")for(let i=0;i<e.length;i++){const r=i*4,o=e[i];t[r]=o.elements[0],t[r+1]=o.elements[1],t[r+2]=o.elements[2],t[r+3]=o.elements[3]}else if(n==="mat3")for(let i=0;i<e.length;i++){const r=i*16,o=e[i];t[r]=o.elements[0],t[r+1]=o.elements[1],t[r+2]=o.elements[2],t[r+4]=o.elements[3],t[r+5]=o.elements[4],t[r+6]=o.elements[5],t[r+8]=o.elements[6],t[r+9]=o.elements[7],t[r+10]=o.elements[8],t[r+15]=1}else if(n==="mat4")for(let i=0;i<e.length;i++){const r=i*16,o=e[i];for(let a=0;a<o.elements.length;a++)t[r+a]=o.elements[a]}else for(let i=0;i<e.length;i++){const r=i*4,o=e[i];t[r]=o.x,t[r+1]=o.y,t[r+2]=o.z||0,t[r+3]=o.w||0}}setup(e){const t=this.array.length,n=this.elementType;let i=Float32Array;const r=this.paddedType,o=e.getTypeLength(r);return n.charAt(0)==="i"&&(i=Int32Array),n.charAt(0)==="u"&&(i=Uint32Array),this.value=new i(t*o),this.bufferCount=t,this.bufferType=r,super.setup(e)}element(e){return ee(new n2(this,ee(e)))}}const Zn=(s,e)=>ee(new i2(s,e));class s2 extends De{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}}const gr=it(s2).setParameterLength(1);let wc,Rc;class jt extends De{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this._output=null,this.isViewportNode=!0}getNodeType(){return this.scope===jt.DPR?"float":this.scope===jt.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=at.NONE;return(this.scope===jt.SIZE||this.scope===jt.VIEWPORT||this.scope===jt.DPR)&&(e=at.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===jt.VIEWPORT?t!==null?Rc.copy(t.viewport):(e.getViewport(Rc),Rc.multiplyScalar(e.getPixelRatio())):this.scope===jt.DPR?this._output.value=e.getPixelRatio():t!==null?(wc.width=t.width,wc.height=t.height):e.getDrawingBufferSize(wc)}setup(){const e=this.scope;let t=null;return e===jt.SIZE?t=Ge(wc||(wc=new oe)):e===jt.VIEWPORT?t=Ge(Rc||(Rc=new Ke)):e===jt.DPR?t=Ge(1):t=ie(ql.div(Po)),this._output=t,t}generate(e){if(this.scope===jt.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const n=e.getNodeProperties(Po).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${n}.y - ${t}.y )`}return t}return super.generate(e)}}jt.COORDINATE="coordinate";jt.VIEWPORT="viewport";jt.SIZE="size";jt.UV="uv";jt.DPR="dpr";const fv=Se(jt,jt.DPR),hr=Se(jt,jt.UV),Po=Se(jt,jt.SIZE),ql=Se(jt,jt.COORDINATE),ng=Se(jt,jt.VIEWPORT),ig=ng.zw,pv=ql.sub(ng.xy),r2=pv.div(ig),o2=O(()=>(te('TSL: "viewportResolution" is deprecated. Use "screenSize" instead.'),Po),"vec2").once()(),$r=Ge(0,"uint").setName("u_cameraIndex").setGroup(td("cameraIndex")).toVarying("v_cameraIndex"),wr=Ge("float").setName("cameraNear").setGroup(ke).onRenderUpdate(({camera:s})=>s.near),Rr=Ge("float").setName("cameraFar").setGroup(ke).onRenderUpdate(({camera:s})=>s.far),pc=O(({camera:s})=>{let e;if(s.isArrayCamera&&s.cameras.length>0){const t=[];for(const i of s.cameras)t.push(i.projectionMatrix);e=Zn(t).setGroup(ke).setName("cameraProjectionMatrices").element(s.isMultiViewCamera?gr("gl_ViewID_OVR"):$r).toConst("cameraProjectionMatrix")}else e=Ge("mat4").setName("cameraProjectionMatrix").setGroup(ke).onRenderUpdate(({camera:t})=>t.projectionMatrix);return e}).once()(),a2=O(({camera:s})=>{let e;if(s.isArrayCamera&&s.cameras.length>0){const t=[];for(const i of s.cameras)t.push(i.projectionMatrixInverse);e=Zn(t).setGroup(ke).setName("cameraProjectionMatricesInverse").element(s.isMultiViewCamera?gr("gl_ViewID_OVR"):$r).toConst("cameraProjectionMatrixInverse")}else e=Ge("mat4").setName("cameraProjectionMatrixInverse").setGroup(ke).onRenderUpdate(({camera:t})=>t.projectionMatrixInverse);return e}).once()(),ns=O(({camera:s})=>{let e;if(s.isArrayCamera&&s.cameras.length>0){const t=[];for(const i of s.cameras)t.push(i.matrixWorldInverse);e=Zn(t).setGroup(ke).setName("cameraViewMatrices").element(s.isMultiViewCamera?gr("gl_ViewID_OVR"):$r).toConst("cameraViewMatrix")}else e=Ge("mat4").setName("cameraViewMatrix").setGroup(ke).onRenderUpdate(({camera:t})=>t.matrixWorldInverse);return e}).once()(),c2=O(({camera:s})=>{let e;if(s.isArrayCamera&&s.cameras.length>0){const t=[];for(const i of s.cameras)t.push(i.matrixWorld);e=Zn(t).setGroup(ke).setName("cameraWorldMatrices").element(s.isMultiViewCamera?gr("gl_ViewID_OVR"):$r).toConst("cameraWorldMatrix")}else e=Ge("mat4").setName("cameraWorldMatrix").setGroup(ke).onRenderUpdate(({camera:t})=>t.matrixWorld);return e}).once()(),l2=O(({camera:s})=>{let e;if(s.isArrayCamera&&s.cameras.length>0){const t=[];for(const i of s.cameras)t.push(i.normalMatrix);e=Zn(t).setGroup(ke).setName("cameraNormalMatrices").element(s.isMultiViewCamera?gr("gl_ViewID_OVR"):$r).toConst("cameraNormalMatrix")}else e=Ge("mat3").setName("cameraNormalMatrix").setGroup(ke).onRenderUpdate(({camera:t})=>t.normalMatrix);return e}).once()(),mv=O(({camera:s})=>{let e;if(s.isArrayCamera&&s.cameras.length>0){const t=[];for(let i=0,r=s.cameras.length;i<r;i++)t.push(new P);e=Zn(t).setGroup(ke).setName("cameraPositions").onRenderUpdate(({camera:i},r)=>{const o=i.cameras,a=r.array;for(let c=0,l=o.length;c<l;c++)a[c].setFromMatrixPosition(o[c].matrixWorld)}).element(s.isMultiViewCamera?gr("gl_ViewID_OVR"):$r).toConst("cameraPosition")}else e=Ge(new P).setName("cameraPosition").setGroup(ke).onRenderUpdate(({camera:t},n)=>n.value.setFromMatrixPosition(t.matrixWorld));return e}).once()(),u2=O(({camera:s})=>{let e;if(s.isArrayCamera&&s.cameras.length>0){const t=[];for(const i of s.cameras)t.push(i.viewport);e=Zn(t,"vec4").setGroup(ke).setName("cameraViewports").element($r).toConst("cameraViewport")}else e=$e(0,0,Po.x,Po.y).toConst("cameraViewport");return e}).once()(),px=new Wr;class Et extends De{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=at.OBJECT,this.uniformNode=new kl(null)}getNodeType(){const e=this.scope;if(e===Et.WORLD_MATRIX)return"mat4";if(e===Et.POSITION||e===Et.VIEW_POSITION||e===Et.DIRECTION||e===Et.SCALE)return"vec3";if(e===Et.RADIUS)return"float"}update(e){const t=this.object3d,n=this.uniformNode,i=this.scope;if(i===Et.WORLD_MATRIX)n.value=t.matrixWorld;else if(i===Et.POSITION)n.value=n.value||new P,n.value.setFromMatrixPosition(t.matrixWorld);else if(i===Et.SCALE)n.value=n.value||new P,n.value.setFromMatrixScale(t.matrixWorld);else if(i===Et.DIRECTION)n.value=n.value||new P,t.getWorldDirection(n.value);else if(i===Et.VIEW_POSITION){const r=e.camera;n.value=n.value||new P,n.value.setFromMatrixPosition(t.matrixWorld),n.value.applyMatrix4(r.matrixWorldInverse)}else if(i===Et.RADIUS){const r=e.object.geometry;r.boundingSphere===null&&r.computeBoundingSphere(),px.copy(r.boundingSphere).applyMatrix4(t.matrixWorld),n.value=px.radius}}generate(e){const t=this.scope;return t===Et.WORLD_MATRIX?this.uniformNode.nodeType="mat4":t===Et.POSITION||t===Et.VIEW_POSITION||t===Et.DIRECTION||t===Et.SCALE?this.uniformNode.nodeType="vec3":t===Et.RADIUS&&(this.uniformNode.nodeType="float"),this.uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Et.WORLD_MATRIX="worldMatrix";Et.POSITION="position";Et.SCALE="scale";Et.VIEW_POSITION="viewPosition";Et.DIRECTION="direction";Et.RADIUS="radius";const h2=it(Et,Et.DIRECTION).setParameterLength(1),d2=it(Et,Et.WORLD_MATRIX).setParameterLength(1),gv=it(Et,Et.POSITION).setParameterLength(1),f2=it(Et,Et.SCALE).setParameterLength(1),p2=it(Et,Et.VIEW_POSITION).setParameterLength(1),m2=it(Et,Et.RADIUS).setParameterLength(1);class es extends Et{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}const g2=Se(es,es.DIRECTION),qi=Se(es,es.WORLD_MATRIX),x2=Se(es,es.POSITION),_2=Se(es,es.SCALE),y2=Se(es,es.VIEW_POSITION),b2=Se(es,es.RADIUS),xv=Ge(new gt).onObjectUpdate(({object:s},e)=>e.value.getNormalMatrix(s.matrixWorld)),v2=Ge(new ht).onObjectUpdate(({object:s},e)=>e.value.copy(s.matrixWorld).invert()),Bo=O(s=>s.renderer.overrideNodes.modelViewMatrix||_v).once()().toVar("modelViewMatrix"),_v=ns.mul(qi),dp=O(s=>(s.context.isHighPrecisionModelViewMatrix=!0,Ge("mat4").onObjectUpdate(({object:e,camera:t})=>e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld)))).once()().toVar("highpModelViewMatrix"),fp=O(s=>{const e=s.context.isHighPrecisionModelViewMatrix;return Ge("mat3").onObjectUpdate(({object:t,camera:n})=>(e!==!0&&t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix)))}).once()().toVar("highpModelNormalViewMatrix"),Yl=pr("position","vec3"),gn=Yl.toVarying("positionLocal"),Ph=Yl.toVarying("positionPrevious"),Os=O(s=>qi.mul(gn).xyz.toVarying(s.getSubBuildProperty("v_positionWorld")),"vec3").once(["POSITION"])(),sg=O(()=>gn.transformDirection(qi).toVarying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),"vec3").once(["POSITION"])(),xn=O(s=>s.context.setupPositionView().toVarying("v_positionView"),"vec3").once(["POSITION"])(),Zt=O(s=>{let e;return s.camera.isOrthographicCamera?e=F(0,0,1):e=xn.negate().toVarying("v_positionViewDirection").normalize(),e.toVar("positionViewDirection")},"vec3").once(["POSITION"])();class S2 extends De{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){if(e.shaderStage!=="fragment")return"true";const{material:t}=e;return t.side===Xt?"false":e.getFrontFacing()}}const yv=Se(S2),rg=R(yv).mul(2).sub(1),mc=O(([s],{material:e})=>{const t=e.side;return t===Xt?s=s.mul(-1):t===jn&&(s=s.mul(rg)),s}),ad=pr("normal","vec3"),Ei=O(s=>s.geometry.hasAttribute("normal")===!1?(te('TSL: Vertex attribute "normal" not found on geometry.'),F(0,1,0)):ad,"vec3").once()().toVar("normalLocal"),bv=xn.dFdx().cross(xn.dFdy()).normalize().toVar("normalFlat"),sc=O(s=>{let e;return s.material.flatShading===!0?e=bv:e=og(Ei).toVarying("v_normalViewGeometry").normalize(),e},"vec3").once()().toVar("normalViewGeometry"),vv=O(s=>{let e=sc.transformDirection(ns);return s.material.flatShading!==!0&&(e=e.toVarying("v_normalWorldGeometry")),e.normalize().toVar("normalWorldGeometry")},"vec3").once()(),Lt=O(({subBuildFn:s,material:e,context:t})=>{let n;return s==="NORMAL"||s==="VERTEX"?(n=sc,e.flatShading!==!0&&(n=mc(n))):n=t.setupNormal().context({getUV:null}),n},"vec3").once(["NORMAL","VERTEX"])().toVar("normalView"),Xr=Lt.transformDirection(ns).toVar("normalWorld"),go=O(({subBuildFn:s,context:e})=>{let t;return s==="NORMAL"||s==="VERTEX"?t=Lt:t=e.setupClearcoatNormal().context({getUV:null}),t},"vec3").once(["NORMAL","VERTEX"])().toVar("clearcoatNormalView"),Sv=O(([s,e=qi])=>{const t=ei(e),n=s.div(F(t[0].dot(t[0]),t[1].dot(t[1]),t[2].dot(t[2])));return t.mul(n).xyz}),og=O(([s],e)=>{const t=e.renderer.overrideNodes.modelNormalViewMatrix;if(t!==null)return t.transformDirection(s);const n=xv.mul(s);return ns.transformDirection(n)}),T2=O(()=>(te('TSL: "transformedNormalView" is deprecated. Use "normalView" instead.'),Lt)).once(["NORMAL","VERTEX"])(),M2=O(()=>(te('TSL: "transformedNormalWorld" is deprecated. Use "normalWorld" instead.'),Xr)).once(["NORMAL","VERTEX"])(),E2=O(()=>(te('TSL: "transformedClearcoatNormalView" is deprecated. Use "clearcoatNormalView" instead.'),go)).once(["NORMAL","VERTEX"])(),mx=new Ti,uf=new ht,Tv=Ge(0).onReference(({material:s})=>s).onObjectUpdate(({material:s})=>s.refractionRatio),fh=Ge(1).onReference(({material:s})=>s).onObjectUpdate(function({material:s,scene:e}){return s.envMap?s.envMapIntensity:e.environmentIntensity}),ag=Ge(new ht).onReference(function(s){return s.material}).onObjectUpdate(function({material:s,scene:e}){const t=e.environment!==null&&s.envMap===null?e.environmentRotation:s.envMapRotation;return t?(mx.copy(t),uf.makeRotationFromEuler(mx)):uf.identity(),uf}),Mv=Zt.negate().reflect(Lt),Ev=Zt.negate().refract(Lt,Tv),Av=Mv.transformDirection(ns).toVar("reflectVector"),wv=Ev.transformDirection(ns).toVar("reflectVector"),Rv=new Bl;class A2 extends Hs{static get type(){return"CubeTextureNode"}constructor(e,t=null,n=null,i=null){super(e,t,n,i),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===Gs?Av:e.mapping===zs?wv:(ge('CubeTextureNode: Mapping "%s" not supported.',e.mapping),F(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const n=this.value;return(e.renderer.coordinateSystem===ks||!n.isRenderTargetTexture)&&(t=F(t.x.negate(),t.yz)),ag.mul(t)}generateUV(e,t){return t.build(e,this.sampler===!0?"vec3":"ivec3")}}const cg=it(A2).setParameterLength(1,4).setName("cubeTexture"),rc=(s=Rv,e=null,t=null,n=null)=>{let i;return s&&s.isCubeTextureNode===!0?(i=ee(s.clone()),i.referenceNode=s,e!==null&&(i.uvNode=ee(e)),t!==null&&(i.levelNode=ee(t)),n!==null&&(i.biasNode=ee(n))):i=cg(s,e,t,n),i},w2=(s=Rv)=>cg(s);class R2 extends Fo{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),n=this.referenceNode.getNodeType(),i=this.getNodeType();return e.format(t,n,i)}}class cd extends De{static get type(){return"ReferenceNode"}constructor(e,t,n=null,i=null){super(),this.property=e,this.uniformType=t,this.object=n,this.count=i,this.properties=e.split("."),this.reference=n,this.node=null,this.group=null,this.name=null,this.updateType=at.OBJECT}element(e){return ee(new R2(this,ee(e)))}setGroup(e){return this.group=e,this}setName(e){return this.name=e,this}label(e){return te('TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setNodeType(e){let t=null;this.count!==null?t=Xl(null,e,this.count):Array.isArray(this.getValueFromReference())?t=Zn(null,e):e==="texture"?t=xt(null):e==="cubeTexture"?t=rc(null):t=Ge(null,e),this.group!==null&&t.setGroup(this.group),this.name!==null&&t.setName(this.name),this.node=t}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let n=e[t[0]];for(let i=1;i<t.length;i++)n=n[t[i]];return n}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const Gt=(s,e,t)=>ee(new cd(s,e,t)),pp=(s,e,t,n)=>ee(new cd(s,e,n,t));class N2 extends cd{static get type(){return"MaterialReferenceNode"}constructor(e,t,n=null){super(e,t,n),this.material=n,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=this.material!==null?this.material:e.material,this.reference}}const or=(s,e,t=null)=>ee(new N2(s,e,t)),Nv=Vt(),C2=xn.dFdx(),P2=xn.dFdy(),Cv=Nv.dFdx(),Pv=Nv.dFdy(),Lv=Lt,Dv=P2.cross(Lv),Uv=Lv.cross(C2),mp=Dv.mul(Cv.x).add(Uv.mul(Pv.x)),gp=Dv.mul(Cv.y).add(Uv.mul(Pv.y)),gx=mp.dot(mp).max(gp.dot(gp)),Iv=gx.equal(0).select(0,gx.inverseSqrt()),L2=mp.mul(Iv).toVar("tangentViewFrame"),D2=gp.mul(Iv).toVar("bitangentViewFrame"),ld=O(s=>(s.geometry.hasAttribute("tangent")===!1&&s.geometry.computeTangents(),pr("tangent","vec4")))(),jl=ld.xyz.toVar("tangentLocal"),ud=O(({subBuildFn:s,geometry:e,material:t})=>{let n;return s==="VERTEX"||e.hasAttribute("tangent")?n=Bo.mul($e(jl,0)).xyz.toVarying("v_tangentView").normalize():n=L2,t.flatShading!==!0&&(n=mc(n)),n},"vec3").once(["NORMAL","VERTEX"])().toVar("tangentView"),Fv=ud.transformDirection(ns).toVarying("v_tangentWorld").normalize().toVar("tangentWorld"),hd=O(([s,e],{subBuildFn:t,material:n})=>{let i=s.mul(ld.w).xyz;return t==="NORMAL"&&n.flatShading!==!0&&(i=i.toVarying(e)),i}).once(["NORMAL"]),U2=hd(ad.cross(ld),"v_bitangentGeometry").normalize().toVar("bitangentGeometry"),I2=hd(Ei.cross(jl),"v_bitangentLocal").normalize().toVar("bitangentLocal"),Bv=O(({subBuildFn:s,geometry:e,material:t})=>{let n;return s==="VERTEX"||e.hasAttribute("tangent")?n=hd(Lt.cross(ud),"v_bitangentView").normalize():n=D2,t.flatShading!==!0&&(n=mc(n)),n},"vec3").once(["NORMAL","VERTEX"])().toVar("bitangentView"),F2=hd(Xr.cross(Fv),"v_bitangentWorld").normalize().toVar("bitangentWorld"),xo=ei(ud,Bv,Lt).toVar("TBNViewMatrix"),Ov=Zt.mul(xo),B2=(s,e)=>s.sub(Ov.mul(e)),Vv=O(()=>{let s=So.cross(Zt);return s=s.cross(So).normalize(),s=Ct(s,Lt,Ar.mul(Cs.oneMinus()).oneMinus().pow2().pow2()).normalize(),s}).once()();class O2 extends vn{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=dr}setup({material:e}){const{normalMapType:t,scaleNode:n}=this;let i=this.node.mul(2).sub(1);if(n!==null){let o=n;e.flatShading===!0&&(o=mc(o)),i=F(i.xy.mul(o),i.z)}let r=null;return t===Z_?r=og(i):t===dr?r=xo.mul(i).normalize():(ge(`NodeMaterial: Unsupported normal map type: ${t}`),r=Lt),r}}const xp=it(O2).setParameterLength(1,2),V2=O(({textureNode:s,bumpScale:e})=>{const t=i=>s.isolate().context({getUV:r=>i(r.uvNode||Vt()),forceUVContext:!0}),n=R(t(i=>i));return ie(R(t(i=>i.add(i.dFdx()))).sub(n),R(t(i=>i.add(i.dFdy()))).sub(n)).mul(e)}),G2=O(s=>{const{surf_pos:e,surf_norm:t,dHdxy:n}=s,i=e.dFdx().normalize(),r=e.dFdy().normalize(),o=t,a=r.cross(o),c=o.cross(i),l=i.dot(a).mul(rg),u=l.sign().mul(n.x.mul(a).add(n.y.mul(c)));return l.abs().mul(t).sub(u).normalize()});class z2 extends vn{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=this.scaleNode!==null?this.scaleNode:1,t=V2({textureNode:this.textureNode,bumpScale:e});return G2({surf_pos:xn,surf_norm:Lt,dHdxy:t})}}const lg=it(z2).setParameterLength(1,2),xx=new Map;class J extends De{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let n=xx.get(e);return n===void 0&&(n=or(e,t),xx.set(e,n)),n}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache(e==="map"?"map":e+"Map","texture")}setup(e){const t=e.context.material,n=this.scope;let i=null;if(n===J.COLOR){const r=t.color!==void 0?this.getColor(n):F();t.map&&t.map.isTexture===!0?i=r.mul(this.getTexture("map")):i=r}else if(n===J.OPACITY){const r=this.getFloat(n);t.alphaMap&&t.alphaMap.isTexture===!0?i=r.mul(this.getTexture("alpha")):i=r}else if(n===J.SPECULAR_STRENGTH)t.specularMap&&t.specularMap.isTexture===!0?i=this.getTexture("specular").r:i=R(1);else if(n===J.SPECULAR_INTENSITY){const r=this.getFloat(n);t.specularIntensityMap&&t.specularIntensityMap.isTexture===!0?i=r.mul(this.getTexture(n).a):i=r}else if(n===J.SPECULAR_COLOR){const r=this.getColor(n);t.specularColorMap&&t.specularColorMap.isTexture===!0?i=r.mul(this.getTexture(n).rgb):i=r}else if(n===J.ROUGHNESS){const r=this.getFloat(n);t.roughnessMap&&t.roughnessMap.isTexture===!0?i=r.mul(this.getTexture(n).g):i=r}else if(n===J.METALNESS){const r=this.getFloat(n);t.metalnessMap&&t.metalnessMap.isTexture===!0?i=r.mul(this.getTexture(n).b):i=r}else if(n===J.EMISSIVE){const r=this.getFloat("emissiveIntensity"),o=this.getColor(n).mul(r);t.emissiveMap&&t.emissiveMap.isTexture===!0?i=o.mul(this.getTexture(n)):i=o}else if(n===J.NORMAL)t.normalMap?(i=xp(this.getTexture("normal"),this.getCache("normalScale","vec2")),i.normalMapType=t.normalMapType):t.bumpMap?i=lg(this.getTexture("bump").r,this.getFloat("bumpScale")):i=Lt;else if(n===J.CLEARCOAT){const r=this.getFloat(n);t.clearcoatMap&&t.clearcoatMap.isTexture===!0?i=r.mul(this.getTexture(n).r):i=r}else if(n===J.CLEARCOAT_ROUGHNESS){const r=this.getFloat(n);t.clearcoatRoughnessMap&&t.clearcoatRoughnessMap.isTexture===!0?i=r.mul(this.getTexture(n).r):i=r}else if(n===J.CLEARCOAT_NORMAL)t.clearcoatNormalMap?i=xp(this.getTexture(n),this.getCache(n+"Scale","vec2")):i=Lt;else if(n===J.SHEEN){const r=this.getColor("sheenColor").mul(this.getFloat("sheen"));t.sheenColorMap&&t.sheenColorMap.isTexture===!0?i=r.mul(this.getTexture("sheenColor").rgb):i=r}else if(n===J.SHEEN_ROUGHNESS){const r=this.getFloat(n);t.sheenRoughnessMap&&t.sheenRoughnessMap.isTexture===!0?i=r.mul(this.getTexture(n).a):i=r,i=i.clamp(.07,1)}else if(n===J.ANISOTROPY)if(t.anisotropyMap&&t.anisotropyMap.isTexture===!0){const r=this.getTexture(n);i=Qh(fa.x,fa.y,fa.y.negate(),fa.x).mul(r.rg.mul(2).sub(ie(1)).normalize().mul(r.b))}else i=fa;else if(n===J.IRIDESCENCE_THICKNESS){const r=Gt("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const o=Gt("0","float",t.iridescenceThicknessRange);i=r.sub(o).mul(this.getTexture(n).g).add(o)}else i=r}else if(n===J.TRANSMISSION){const r=this.getFloat(n);t.transmissionMap?i=r.mul(this.getTexture(n).r):i=r}else if(n===J.THICKNESS){const r=this.getFloat(n);t.thicknessMap?i=r.mul(this.getTexture(n).g):i=r}else if(n===J.IOR)i=this.getFloat(n);else if(n===J.LIGHT_MAP)i=this.getTexture(n).rgb.mul(this.getFloat("lightMapIntensity"));else if(n===J.AO)i=this.getTexture(n).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else if(n===J.LINE_DASH_OFFSET)i=t.dashOffset?this.getFloat(n):R(0);else{const r=this.getNodeType(e);i=this.getCache(n,r)}return i}}J.ALPHA_TEST="alphaTest";J.COLOR="color";J.OPACITY="opacity";J.SHININESS="shininess";J.SPECULAR="specular";J.SPECULAR_STRENGTH="specularStrength";J.SPECULAR_INTENSITY="specularIntensity";J.SPECULAR_COLOR="specularColor";J.REFLECTIVITY="reflectivity";J.ROUGHNESS="roughness";J.METALNESS="metalness";J.NORMAL="normal";J.CLEARCOAT="clearcoat";J.CLEARCOAT_ROUGHNESS="clearcoatRoughness";J.CLEARCOAT_NORMAL="clearcoatNormal";J.EMISSIVE="emissive";J.ROTATION="rotation";J.SHEEN="sheen";J.SHEEN_ROUGHNESS="sheenRoughness";J.ANISOTROPY="anisotropy";J.IRIDESCENCE="iridescence";J.IRIDESCENCE_IOR="iridescenceIOR";J.IRIDESCENCE_THICKNESS="iridescenceThickness";J.IOR="ior";J.TRANSMISSION="transmission";J.THICKNESS="thickness";J.ATTENUATION_DISTANCE="attenuationDistance";J.ATTENUATION_COLOR="attenuationColor";J.LINE_SCALE="scale";J.LINE_DASH_SIZE="dashSize";J.LINE_GAP_SIZE="gapSize";J.LINE_WIDTH="linewidth";J.LINE_DASH_OFFSET="dashOffset";J.POINT_SIZE="size";J.DISPERSION="dispersion";J.LIGHT_MAP="light";J.AO="ao";const Gv=Se(J,J.ALPHA_TEST),zv=Se(J,J.COLOR),kv=Se(J,J.SHININESS),Hv=Se(J,J.EMISSIVE),ug=Se(J,J.OPACITY),Wv=Se(J,J.SPECULAR),_p=Se(J,J.SPECULAR_INTENSITY),$v=Se(J,J.SPECULAR_COLOR),nl=Se(J,J.SPECULAR_STRENGTH),ph=Se(J,J.REFLECTIVITY),Xv=Se(J,J.ROUGHNESS),qv=Se(J,J.METALNESS),Yv=Se(J,J.NORMAL),jv=Se(J,J.CLEARCOAT),Kv=Se(J,J.CLEARCOAT_ROUGHNESS),Zv=Se(J,J.CLEARCOAT_NORMAL),Qv=Se(J,J.ROTATION),Jv=Se(J,J.SHEEN),eS=Se(J,J.SHEEN_ROUGHNESS),tS=Se(J,J.ANISOTROPY),nS=Se(J,J.IRIDESCENCE),iS=Se(J,J.IRIDESCENCE_IOR),sS=Se(J,J.IRIDESCENCE_THICKNESS),rS=Se(J,J.TRANSMISSION),oS=Se(J,J.THICKNESS),aS=Se(J,J.IOR),cS=Se(J,J.ATTENUATION_DISTANCE),lS=Se(J,J.ATTENUATION_COLOR),uS=Se(J,J.LINE_SCALE),hS=Se(J,J.LINE_DASH_SIZE),dS=Se(J,J.LINE_GAP_SIZE),k2=Se(J,J.LINE_WIDTH),fS=Se(J,J.LINE_DASH_OFFSET),pS=Se(J,J.POINT_SIZE),mS=Se(J,J.DISPERSION),hg=Se(J,J.LIGHT_MAP),gS=Se(J,J.AO),fa=Ge(new oe).onReference(function(s){return s.material}).onRenderUpdate(function({material:s}){this.value.set(s.anisotropy*Math.cos(s.anisotropyRotation),s.anisotropy*Math.sin(s.anisotropyRotation))}),dg=O(s=>s.context.setupModelViewProjection(),"vec4").once()().toVarying("v_modelViewProjection");class tn extends De{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isIndexNode=!0}generate(e){const t=this.getNodeType(e),n=this.scope;let i;if(n===tn.VERTEX)i=e.getVertexIndex();else if(n===tn.INSTANCE)i=e.getInstanceIndex();else if(n===tn.DRAW)i=e.getDrawIndex();else if(n===tn.INVOCATION_LOCAL)i=e.getInvocationLocalIndex();else if(n===tn.INVOCATION_SUBGROUP)i=e.getInvocationSubgroupIndex();else if(n===tn.SUBGROUP)i=e.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+n);let r;return e.shaderStage==="vertex"||e.shaderStage==="compute"?r=i:r=Xs(this).build(e,t),r}}tn.VERTEX="vertex";tn.INSTANCE="instance";tn.SUBGROUP="subgroup";tn.INVOCATION_LOCAL="invocationLocal";tn.INVOCATION_SUBGROUP="invocationSubgroup";tn.DRAW="draw";const xS=Se(tn,tn.VERTEX),Or=Se(tn,tn.INSTANCE),H2=Se(tn,tn.SUBGROUP),W2=Se(tn,tn.INVOCATION_SUBGROUP),$2=Se(tn,tn.INVOCATION_LOCAL),_S=Se(tn,tn.DRAW);class yS extends De{static get type(){return"InstanceNode"}constructor(e,t,n=null){super("void"),this.count=e,this.instanceMatrix=t,this.instanceColor=n,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=at.FRAME,this.buffer=null,this.bufferColor=null}setup(e){const{instanceMatrix:t,instanceColor:n}=this,{count:i}=t;let{instanceMatrixNode:r,instanceColorNode:o}=this;if(r===null){if(i<=1e3)r=Xl(t.array,"mat4",Math.max(i,1)).element(Or);else{const c=new Sh(t.array,16,1);this.buffer=c;const l=t.usage===ga?hp:Ch,u=[l(c,"vec4",16,0),l(c,"vec4",16,4),l(c,"vec4",16,8),l(c,"vec4",16,12)];r=vo(...u)}this.instanceMatrixNode=r}if(n&&o===null){const c=new Br(n.array,3),l=n.usage===ga?hp:Ch;this.bufferColor=c,o=F(l(c,"vec3",3,0)),this.instanceColorNode=o}const a=r.mul(gn).xyz;if(gn.assign(a),e.hasGeometryAttribute("normal")){const c=Sv(Ei,r);Ei.assign(c)}this.instanceColorNode!==null&&El("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.buffer!==null&&(this.buffer.clearUpdateRanges(),this.buffer.updateRanges.push(...this.instanceMatrix.updateRanges),this.instanceMatrix.usage!==ga&&this.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMatrix.version)),this.instanceColor&&this.bufferColor!==null&&(this.bufferColor.clearUpdateRanges(),this.bufferColor.updateRanges.push(...this.instanceColor.updateRanges),this.instanceColor.usage!==ga&&this.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceColor.version))}}const X2=it(yS).setParameterLength(2,3);class q2 extends yS{static get type(){return"InstancedMeshNode"}constructor(e){const{count:t,instanceMatrix:n,instanceColor:i}=e;super(t,n,i),this.instancedMesh=e}}const bS=it(q2).setParameterLength(1);class Y2 extends De{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){this.batchingIdNode===null&&(e.getDrawIndex()===null?this.batchingIdNode=Or:this.batchingIdNode=_S);const n=O(([p])=>{const x=U(ur(an(this.batchMesh._indirectTexture),0).x),g=U(p).mod(x),m=U(p).div(x);return an(this.batchMesh._indirectTexture,Pn(g,m)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]})(U(this.batchingIdNode)),i=this.batchMesh._matricesTexture,r=U(ur(an(i),0).x),o=R(n).mul(4).toInt().toVar(),a=o.mod(r),c=o.div(r),l=vo(an(i,Pn(a,c)),an(i,Pn(a.add(1),c)),an(i,Pn(a.add(2),c)),an(i,Pn(a.add(3),c))),u=this.batchMesh._colorsTexture;if(u!==null){const x=O(([g])=>{const m=U(ur(an(u),0).x),b=g,y=b.mod(m),v=b.div(m);return an(u,Pn(y,v)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]})(n);El("vec3","vBatchColor").assign(x)}const h=ei(l);gn.assign(l.mul(gn));const d=Ei.div(F(h[0].dot(h[0]),h[1].dot(h[1]),h[2].dot(h[2]))),f=h.mul(d).xyz;Ei.assign(f),e.hasGeometryAttribute("tangent")&&jl.mulAssign(h)}}const vS=it(Y2).setParameterLength(1);class j2 extends Fo{static get type(){return"StorageArrayElementNode"}constructor(e,t){super(e,t),this.isStorageArrayElementNode=!0}set storageBufferNode(e){this.node=e}get storageBufferNode(){return this.node}getMemberType(e,t){const n=this.storageBufferNode.structTypeNode;return n?n.getMemberType(e,t):"void"}setup(e){return e.isAvailable("storageBuffer")===!1&&this.node.isPBO===!0&&e.setupPBO(this.node),super.setup(e)}generate(e,t){let n;const i=e.context.assign;if(e.isAvailable("storageBuffer")===!1?this.node.isPBO===!0&&i!==!0&&(this.node.value.isInstancedBufferAttribute||e.shaderStage!=="compute")?n=e.generatePBO(this):n=this.node.build(e):n=super.generate(e),i!==!0){const r=this.getNodeType(e);n=e.format(n,r,t)}return n}}const K2=it(j2).setParameterLength(2);class Z2 extends tg{static get type(){return"StorageBufferNode"}constructor(e,t=null,n=0){let i,r=null;t&&t.isStruct?(i="struct",r=t.layout,(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)&&(n=e.count)):t===null&&(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)?(i=My(e.itemSize),n=e.count):i=t,super(e,i,n),this.isStorageBufferNode=!0,this.structTypeNode=r,this.access=$n.READ_WRITE,this.isAtomic=!1,this.isPBO=!1,this._attribute=null,this._varying=null,this.global=!0,e.isStorageBufferAttribute!==!0&&e.isStorageInstancedBufferAttribute!==!0&&(e.isInstancedBufferAttribute?e.isStorageInstancedBufferAttribute=!0:e.isStorageBufferAttribute=!0)}getHash(e){if(this.bufferCount===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getInputType(){return this.value.isIndirectStorageBufferAttribute?"indirectStorageBuffer":"storageBuffer"}element(e){return K2(this,e)}setPBO(e){return this.isPBO=e,this}getPBO(){return this.isPBO}setAccess(e){return this.access=e,this}toReadOnly(){return this.setAccess($n.READ_ONLY)}setAtomic(e){return this.isAtomic=e,this}toAtomic(){return this.setAtomic(!0)}getAttributeData(){return this._attribute===null&&(this._attribute=$l(this.value),this._varying=Xs(this._attribute)),{attribute:this._attribute,varying:this._varying}}getNodeType(e){if(this.structTypeNode!==null)return this.structTypeNode.getNodeType(e);if(e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.getNodeType(e);const{attribute:t}=this.getAttributeData();return t.getNodeType(e)}getMemberType(e,t){return this.structTypeNode!==null?this.structTypeNode.getMemberType(e,t):"void"}generate(e){if(this.structTypeNode!==null&&this.structTypeNode.build(e),e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.generate(e);const{attribute:t,varying:n}=this.getAttributeData(),i=n.build(e);return e.registerTransform(i,t),i}}const To=(s,e=null,t=0)=>ee(new Z2(s,e,t)),Q2=(s,e,t)=>(te('TSL: "storageObject()" is deprecated. Use "storage().setPBO( true )" instead.'),To(s,e,t).setPBO(!0)),_x=new WeakMap;class SS extends De{static get type(){return"SkinningNode"}constructor(e){super("void"),this.skinnedMesh=e,this.updateType=at.OBJECT,this.skinIndexNode=pr("skinIndex","uvec4"),this.skinWeightNode=pr("skinWeight","vec4"),this.bindMatrixNode=Gt("bindMatrix","mat4"),this.bindMatrixInverseNode=Gt("bindMatrixInverse","mat4"),this.boneMatricesNode=pp("skeleton.boneMatrices","mat4",e.skeleton.bones.length),this.positionNode=gn,this.toPositionNode=gn,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=this.positionNode){const{skinIndexNode:n,skinWeightNode:i,bindMatrixNode:r,bindMatrixInverseNode:o}=this,a=e.element(n.x),c=e.element(n.y),l=e.element(n.z),u=e.element(n.w),h=r.mul(t),d=Mn(a.mul(i.x).mul(h),c.mul(i.y).mul(h),l.mul(i.z).mul(h),u.mul(i.w).mul(h));return o.mul(d).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=Ei){const{skinIndexNode:n,skinWeightNode:i,bindMatrixNode:r,bindMatrixInverseNode:o}=this,a=e.element(n.x),c=e.element(n.y),l=e.element(n.z),u=e.element(n.w);let h=Mn(i.x.mul(a),i.y.mul(c),i.z.mul(l),i.w.mul(u));return h=o.mul(h).mul(r),h.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return this.previousBoneMatricesNode===null&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=pp("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,Ph)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")||Ay(e.object).useVelocity===!0}setup(e){this.needsPreviousBoneMatrices(e)&&Ph.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(this.toPositionNode&&this.toPositionNode.assign(t),e.hasGeometryAttribute("normal")){const n=this.getSkinnedNormal();Ei.assign(n),e.hasGeometryAttribute("tangent")&&jl.assign(n)}return t}generate(e,t){if(t!=="void")return super.generate(e,t)}update(e){const t=e.object&&e.object.skeleton?e.object.skeleton:this.skinnedMesh.skeleton;_x.get(t)!==e.frameId&&(_x.set(t,e.frameId),this.previousBoneMatricesNode!==null&&t.previousBoneMatrices.set(t.boneMatrices),t.update())}}const TS=s=>ee(new SS(s)),J2=(s,e=null)=>{const t=new SS(s);return t.positionNode=To(new Br(s.geometry.getAttribute("position").array,3),"vec3").setPBO(!0).toReadOnly().element(Or).toVar(),t.skinIndexNode=To(new Br(new Uint32Array(s.geometry.getAttribute("skinIndex").array),4),"uvec4").setPBO(!0).toReadOnly().element(Or).toVar(),t.skinWeightNode=To(new Br(s.geometry.getAttribute("skinWeight").array,4),"vec4").setPBO(!0).toReadOnly().element(Or).toVar(),t.bindMatrixNode=Ge(s.bindMatrix,"mat4"),t.bindMatrixInverseNode=Ge(s.bindMatrixInverse,"mat4"),t.boneMatricesNode=Xl(s.skeleton.boneMatrices,"mat4",s.skeleton.bones.length),t.toPositionNode=e,ee(t)};class eP extends De{static get type(){return"LoopNode"}constructor(e=[]){super("void"),this.params=e}getVarName(e){return String.fromCharCode(105+e)}getProperties(e){const t=e.getNodeProperties(this);if(t.stackNode!==void 0)return t;const n={};for(let a=0,c=this.params.length-1;a<c;a++){const l=this.params[a],u=l.isNode!==!0&&l.name||this.getVarName(a),h=l.isNode!==!0&&l.type||"int";n[u]=fr(u,h)}const i=e.addStack(),r=this.params[this.params.length-1](n);t.returnsNode=r.context({nodeLoop:r}),t.stackNode=i;const o=this.params[0];if(o.isNode!==!0&&typeof o.update=="function"){const a=O(this.params[0].update)(n);t.updateNode=a.context({nodeLoop:a})}return e.removeStack(),t}setup(e){if(this.getProperties(e),e.fnCall){const t=e.getDataFromNode(e.fnCall.shaderNode);t.hasLoop=!0}}generate(e){const t=this.getProperties(e),n=this.params,i=t.stackNode;for(let o=0,a=n.length-1;o<a;o++){const c=n[o];let l=!1,u=null,h=null,d=null,f=null,p=null,x=null;c.isNode?c.getNodeType(e)==="bool"?(l=!0,f="bool",h=c.build(e,f)):(f="int",d=this.getVarName(o),u="0",h=c.build(e,f),p="<"):(f=c.type||"int",d=c.name||this.getVarName(o),u=c.start,h=c.end,p=c.condition,x=c.update,typeof u=="number"?u=e.generateConst(f,u):u&&u.isNode&&(u=u.build(e,f)),typeof h=="number"?h=e.generateConst(f,h):h&&h.isNode&&(h=h.build(e,f)),u!==void 0&&h===void 0?(u=u+" - 1",h="0",p=">="):h!==void 0&&u===void 0&&(u="0",p="<"),p===void 0&&(Number(u)>Number(h)?p=">=":p="<"));let g;if(l)g=`while ( ${h} )`;else{const m={start:u,end:h},b=m.start,y=m.end;let v;const w=()=>p.includes("<")?"+=":"-=";if(x!=null)switch(typeof x){case"function":v=e.flowStagesNode(t.updateNode,"void").code.replace(/\t|;/g,"");break;case"number":v=d+" "+w()+" "+e.generateConst(f,x);break;case"string":v=d+" "+x;break;default:x.isNode?v=d+" "+w()+" "+x.build(e):(ge("TSL: 'Loop( { update: ... } )' is not a function, string or number."),v="break /* invalid update */")}else f==="int"||f==="uint"?x=p.includes("<")?"++":"--":x=w()+" 1.",v=d+" "+x;const S=e.getVar(f,d)+" = "+b,E=d+" "+p+" "+y;g=`for ( ${S}; ${E}; ${v} )`}e.addFlowCode((o===0?`
`:"")+e.tab+g+` {

`).addFlowTab()}const r=i.build(e,"void");t.returnsNode.build(e,"void"),e.removeFlowTab().addFlowCode(`
`+e.tab+r);for(let o=0,a=this.params.length-1;o<a;o++)e.addFlowCode((o===0?"":e.tab)+`}

`).removeFlowTab();e.addFlowTab()}}const Ft=(...s)=>new eP(bo(s,"int")).toStack(),tP=()=>fr("continue").toStack(),MS=()=>fr("break").toStack(),hf=new WeakMap,Pi=new Ke,yx=O(({bufferMap:s,influence:e,stride:t,width:n,depth:i,offset:r})=>{const o=U(xS).mul(t).add(r),a=o.div(n),c=o.sub(a.mul(n));return an(s,Pn(c,a)).depth(i).xyz.mul(e)});function nP(s){const e=s.morphAttributes.position!==void 0,t=s.morphAttributes.normal!==void 0,n=s.morphAttributes.color!==void 0,i=s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color,r=i!==void 0?i.length:0;let o=hf.get(s);if(o===void 0||o.count!==r){let m=function(){x.dispose(),hf.delete(s),s.removeEventListener("dispose",m)};o!==void 0&&o.texture.dispose();const a=s.morphAttributes.position||[],c=s.morphAttributes.normal||[],l=s.morphAttributes.color||[];let u=0;e===!0&&(u=1),t===!0&&(u=2),n===!0&&(u=3);let h=s.attributes.position.count*u,d=1;const f=4096;h>f&&(d=Math.ceil(h/f),h=f);const p=new Float32Array(h*d*4*r),x=new Zp(p,h,d,r);x.type=Sn,x.needsUpdate=!0;const g=u*4;for(let b=0;b<r;b++){const y=a[b],v=c[b],w=l[b],S=h*d*4*b;for(let E=0;E<y.count;E++){const C=E*g;e===!0&&(Pi.fromBufferAttribute(y,E),p[S+C+0]=Pi.x,p[S+C+1]=Pi.y,p[S+C+2]=Pi.z,p[S+C+3]=0),t===!0&&(Pi.fromBufferAttribute(v,E),p[S+C+4]=Pi.x,p[S+C+5]=Pi.y,p[S+C+6]=Pi.z,p[S+C+7]=0),n===!0&&(Pi.fromBufferAttribute(w,E),p[S+C+8]=Pi.x,p[S+C+9]=Pi.y,p[S+C+10]=Pi.z,p[S+C+11]=w.itemSize===4?Pi.w:1)}}o={count:r,texture:x,stride:u,size:new oe(h,d)},hf.set(s,o),s.addEventListener("dispose",m)}return o}class iP extends De{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=Ge(1),this.updateType=at.OBJECT}setup(e){const{geometry:t}=e,n=t.morphAttributes.position!==void 0,i=t.hasAttribute("normal")&&t.morphAttributes.normal!==void 0,r=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,o=r!==void 0?r.length:0,{texture:a,stride:c,size:l}=nP(t);n===!0&&gn.mulAssign(this.morphBaseInfluence),i===!0&&Ei.mulAssign(this.morphBaseInfluence);const u=U(l.width);Ft(o,({i:h})=>{const d=R(0).toVar();this.mesh.count>1&&this.mesh.morphTexture!==null&&this.mesh.morphTexture!==void 0?d.assign(an(this.mesh.morphTexture,Pn(U(h).add(1),U(Or))).r):d.assign(Gt("morphTargetInfluences","float").element(h).toVar()),je(d.notEqual(0),()=>{n===!0&&gn.addAssign(yx({bufferMap:a,influence:d,stride:c,width:u,depth:h,offset:U(0)})),i===!0&&Ei.addAssign(yx({bufferMap:a,influence:d,stride:c,width:u,depth:h,offset:U(1)}))})})}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce((t,n)=>t+n,0)}}const ES=it(iP).setParameterLength(1);class gc extends De{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}}class sP extends gc{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class rP extends Gb{static get type(){return"LightingContextNode"}constructor(e,t=null,n=null,i=null){super(e),this.lightingModel=t,this.backdropNode=n,this.backdropAlphaNode=i,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,n=F().toVar("directDiffuse"),i=F().toVar("directSpecular"),r=F().toVar("indirectDiffuse"),o=F().toVar("indirectSpecular"),a={directDiffuse:n,directSpecular:i,indirectDiffuse:r,indirectSpecular:o};return{radiance:F().toVar("radiance"),irradiance:F().toVar("irradiance"),iblIrradiance:F().toVar("iblIrradiance"),ambientOcclusion:R(1).toVar("ambientOcclusion"),reflectedLight:a,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const AS=it(rP);class oP extends gc{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}const ia=new oe;class dd extends Hs{static get type(){return"ViewportTextureNode"}constructor(e=hr,t=null,n=null){let i=null;n===null?(i=new am,i.minFilter=xi,n=i):i=n,super(n,e,t),this.generateMipmaps=!1,this.defaultFramebuffer=i,this.isOutputTextureNode=!0,this.updateBeforeType=at.FRAME,this._cacheTextures=new WeakMap}getTextureForReference(e=null){let t,n;if(this.referenceNode?(t=this.referenceNode.defaultFramebuffer,n=this.referenceNode._cacheTextures):(t=this.defaultFramebuffer,n=this._cacheTextures),e===null)return t;if(n.has(e)===!1){const i=t.clone();n.set(e,i)}return n.get(e)}updateReference(e){const t=e.renderer.getRenderTarget();return this.value=this.getTextureForReference(t),this.value}updateBefore(e){const t=e.renderer,n=t.getRenderTarget();n===null?t.getDrawingBufferSize(ia):ia.set(n.width,n.height);const i=this.getTextureForReference(n);(i.image.width!==ia.width||i.image.height!==ia.height)&&(i.image.width=ia.width,i.image.height=ia.height,i.needsUpdate=!0);const r=i.generateMipmaps;i.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(i),i.generateMipmaps=r}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const aP=it(dd).setParameterLength(0,3),fg=it(dd,null,null,{generateMipmaps:!0}).setParameterLength(0,3);let Du=null;class cP extends dd{static get type(){return"ViewportDepthTextureNode"}constructor(e=hr,t=null){Du===null&&(Du=new Vi),super(e,t,Du)}getTextureForReference(){return Du}}const pg=it(cP).setParameterLength(0,2);class yi extends De{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===yi.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,n=this.valueNode;let i=null;if(t===yi.DEPTH_BASE)n!==null&&(i=RS().assign(n));else if(t===yi.DEPTH)e.isPerspectiveCamera?i=wS(xn.z,wr,Rr):i=Ea(xn.z,wr,Rr);else if(t===yi.LINEAR_DEPTH)if(n!==null)if(e.isPerspectiveCamera){const r=mg(n,wr,Rr);i=Ea(r,wr,Rr)}else i=n;else i=Ea(xn.z,wr,Rr);return i}}yi.DEPTH_BASE="depthBase";yi.DEPTH="depth";yi.LINEAR_DEPTH="linearDepth";const Ea=(s,e,t)=>s.add(e).div(e.sub(t)),lP=(s,e,t)=>e.sub(t).mul(s).sub(e),wS=(s,e,t)=>e.add(s).mul(t).div(t.sub(e).mul(s)),mg=(s,e,t)=>e.mul(t).div(t.sub(e).mul(s).sub(t)),gg=(s,e,t)=>{e=e.max(1e-6).toVar();const n=Is(s.negate().div(e)),i=Is(t.div(e));return n.div(i)},uP=(s,e,t)=>{const n=s.mul(nd(t.div(e)));return R(Math.E).pow(n).mul(e).negate()},RS=it(yi,yi.DEPTH_BASE),xg=Se(yi,yi.DEPTH),Lh=it(yi,yi.LINEAR_DEPTH).setParameterLength(0,1),hP=Lh(pg());xg.assign=s=>RS(s);class Ki extends De{static get type(){return"ClippingNode"}constructor(e=Ki.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{intersectionPlanes:n,unionPlanes:i}=t;return this.hardwareClipping=e.material.hardwareClipping,this.scope===Ki.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(n,i):this.scope===Ki.HARDWARE?this.setupHardwareClipping(i,e):this.setupDefault(n,i)}setupAlphaToCoverage(e,t){return O(()=>{const n=R().toVar("distanceToPlane"),i=R().toVar("distanceToGradient"),r=R(1).toVar("clipOpacity"),o=t.length;if(this.hardwareClipping===!1&&o>0){const c=Zn(t).setGroup(ke);Ft(o,({i:l})=>{const u=c.element(l);n.assign(xn.dot(u.xyz).negate().add(u.w)),i.assign(n.fwidth().div(2)),r.mulAssign(ms(i.negate(),i,n))})}const a=e.length;if(a>0){const c=Zn(e).setGroup(ke),l=R(1).toVar("intersectionClipOpacity");Ft(a,({i:u})=>{const h=c.element(u);n.assign(xn.dot(h.xyz).negate().add(h.w)),i.assign(n.fwidth().div(2)),l.mulAssign(ms(i.negate(),i,n).oneMinus())}),r.mulAssign(l.oneMinus())}Nt.a.mulAssign(r),Nt.a.equal(0).discard()})()}setupDefault(e,t){return O(()=>{const n=t.length;if(this.hardwareClipping===!1&&n>0){const r=Zn(t).setGroup(ke);Ft(n,({i:o})=>{const a=r.element(o);xn.dot(a.xyz).greaterThan(a.w).discard()})}const i=e.length;if(i>0){const r=Zn(e).setGroup(ke),o=Qi(!0).toVar("clipped");Ft(i,({i:a})=>{const c=r.element(a);o.assign(xn.dot(c.xyz).greaterThan(c.w).and(o))}),o.discard()}})()}setupHardwareClipping(e,t){const n=e.length;return t.enableHardwareClipping(n),O(()=>{const i=Zn(e).setGroup(ke),r=gr(t.getClipDistance());Ft(n,({i:o})=>{const a=i.element(o),c=xn.dot(a.xyz).sub(a.w).negate();r.element(o).assign(c)})})()}}Ki.ALPHA_TO_COVERAGE="alphaToCoverage";Ki.DEFAULT="default";Ki.HARDWARE="hardware";const dP=()=>ee(new Ki),fP=()=>ee(new Ki(Ki.ALPHA_TO_COVERAGE)),pP=()=>ee(new Ki(Ki.HARDWARE)),mP=.05,bx=O(([s])=>fs(st(1e4,pi(st(17,s.x).add(st(.1,s.y)))).mul(Mn(.1,$t(pi(st(13,s.y).add(s.x))))))),vx=O(([s])=>bx(ie(bx(s.xy),s.z))),gP=O(([s])=>{const e=Jt(Bs(Om(s.xyz)),Bs(Vm(s.xyz))),t=R(1).div(R(mP).mul(e)).toVar("pixScale"),n=ie(ic(Fs(Is(t))),ic(id(Is(t)))),i=ie(vx(Fs(n.x.mul(s.xyz))),vx(Fs(n.y.mul(s.xyz)))),r=fs(Is(t)),o=Mn(st(r.oneMinus(),i.x),st(r,i.y)),a=Mi(r,r.oneMinus()),c=F(o.mul(o).div(st(2,a).mul(Tt(1,a))),o.sub(st(.5,a)).div(Tt(1,a)),Tt(1,Tt(1,o).mul(Tt(1,o)).div(st(2,a).mul(Tt(1,a))))),l=o.lessThan(a.oneMinus()).select(o.lessThan(a).select(c.x,c.y),c.z);return Ji(l,1e-6,1)}).setLayout({name:"getAlphaHashThreshold",type:"float",inputs:[{name:"position",type:"vec3"}]});class xP extends dv{static get type(){return"VertexColorNode"}constructor(e){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const t=this.getAttributeName(e),n=e.hasGeometryAttribute(t);let i;return n===!0?i=super.generate(e):i=e.generateConst(this.nodeType,new Ke(1,1,1,1)),i}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const NS=(s=0)=>ee(new xP(s)),CS=O(([s,e])=>Mi(1,s.oneMinus().div(e)).oneMinus()).setLayout({name:"blendBurn",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),PS=O(([s,e])=>Mi(s.div(e.oneMinus()),1)).setLayout({name:"blendDodge",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),LS=O(([s,e])=>s.oneMinus().mul(e.oneMinus()).oneMinus()).setLayout({name:"blendScreen",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),DS=O(([s,e])=>Ct(s.mul(2).mul(e),s.oneMinus().mul(2).mul(e.oneMinus()).oneMinus(),rd(.5,s))).setLayout({name:"blendOverlay",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),_P=O(([s,e])=>{const t=e.a.add(s.a.mul(e.a.oneMinus()));return $e(e.rgb.mul(e.a).add(s.rgb.mul(s.a).mul(e.a.oneMinus())).div(t),t)}).setLayout({name:"blendColor",type:"vec4",inputs:[{name:"base",type:"vec4"},{name:"blend",type:"vec4"}]}),US=O(([s])=>$e(s.rgb.mul(s.a),s.a),{color:"vec4",return:"vec4"}),yP=O(([s])=>(je(s.a.equal(0),()=>$e(0)),$e(s.rgb.div(s.a),s.a)),{color:"vec4",return:"vec4"}),bP=(...s)=>(te('TSL: "burn" has been renamed. Use "blendBurn" instead.'),CS(s)),vP=(...s)=>(te('TSL: "dodge" has been renamed. Use "blendDodge" instead.'),PS(s)),SP=(...s)=>(te('TSL: "screen" has been renamed. Use "blendScreen" instead.'),LS(s)),TP=(...s)=>(te('TSL: "overlay" has been renamed. Use "blendOverlay" instead.'),DS(s));class fn extends Jn{static get type(){return"NodeMaterial"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isNodeMaterial=!0,this.fog=!0,this.lights=!1,this.hardwareClipping=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.maskNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.receivedShadowPositionNode=null,this.castShadowPositionNode=null,this.receivedShadowNode=null,this.castShadowNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null,Object.defineProperty(this,"shadowPositionNode",{get:()=>this.receivedShadowPositionNode,set:e=>{te('NodeMaterial: ".shadowPositionNode" was renamed to ".receivedShadowPositionNode".'),this.receivedShadowPositionNode=e}})}_getNodeChildren(){const e=[];for(const t of Object.getOwnPropertyNames(this)){if(t.startsWith("_")===!0)continue;const n=this[t];n&&n.isNode===!0&&e.push({property:t,childNode:n})}return e}customProgramCacheKey(){const e=[];for(const{property:t,childNode:n}of this._getNodeChildren())e.push(zl(t.slice(0,-4)),n.getCacheKey());return this.type+dc(e)}build(e){this.setup(e)}setupObserver(e){return new WN(e)}setup(e){e.context.setupNormal=()=>Ta(this.setupNormal(e),"NORMAL","vec3"),e.context.setupPositionView=()=>this.setupPositionView(e),e.context.setupModelViewProjection=()=>this.setupModelViewProjection(e);const t=e.renderer,n=t.getRenderTarget();e.addStack();const i=Ta(this.setupVertex(e),"VERTEX"),r=this.vertexNode||i;e.stack.outputNode=r,this.setupHardwareClipping(e),this.geometryNode!==null&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();let o;const a=this.setupClipping(e);if((this.depthWrite===!0||this.depthTest===!0)&&(n!==null?n.depthBuffer===!0&&this.setupDepth(e):t.depth===!0&&this.setupDepth(e)),this.fragmentNode===null){this.setupDiffuseColor(e),this.setupVariants(e);const c=this.setupLighting(e);a!==null&&e.stack.addToStack(a);const l=$e(c,Nt.a).max(0);o=this.setupOutput(e,l),Sa.assign(o);const u=this.outputNode!==null;if(u&&(o=this.outputNode),n!==null){const h=t.getMRT(),d=this.mrtNode;h!==null?(u&&Sa.assign(o),o=h,d!==null&&(o=h.merge(d))):d!==null&&(o=d)}}else{let c=this.fragmentNode;c.isOutputStructNode!==!0&&(c=$e(c)),o=this.setupOutput(e,c)}e.stack.outputNode=o,e.addFlow("fragment",e.removeStack()),e.observer=this.setupObserver(e)}setupClipping(e){if(e.clippingContext===null)return null;const{unionPlanes:t,intersectionPlanes:n}=e.clippingContext;let i=null;if(t.length>0||n.length>0){const r=e.renderer.currentSamples;this.alphaToCoverage&&r>1?i=fP():e.stack.addToStack(dP())}return i}setupHardwareClipping(e){if(this.hardwareClipping=!1,e.clippingContext===null)return;const t=e.clippingContext.unionPlanes.length;t>0&&t<=8&&e.isAvailable("clipDistance")&&(e.stack.addToStack(pP()),this.hardwareClipping=!0)}setupDepth(e){const{renderer:t,camera:n}=e;let i=this.depthNode;if(i===null){const r=t.getMRT();r&&r.has("depth")?i=r.get("depth"):t.logarithmicDepthBuffer===!0&&(n.isPerspectiveCamera?i=gg(xn.z,wr,Rr):i=Ea(xn.z,wr,Rr))}i!==null&&xg.assign(i).toStack()}setupPositionView(){return Bo.mul(gn).xyz}setupModelViewProjection(){return pc.mul(xn)}setupVertex(e){return e.addStack(),this.setupPosition(e),e.context.vertex=e.removeStack(),dg}setupPosition(e){const{object:t,geometry:n}=e;if((n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color)&&ES(t).toStack(),t.isSkinnedMesh===!0&&TS(t).toStack(),this.displacementMap){const i=or("displacementMap","texture"),r=or("displacementScale","float"),o=or("displacementBias","float");gn.addAssign(Ei.normalize().mul(i.x.mul(r).add(o)))}return t.isBatchedMesh&&vS(t).toStack(),t.isInstancedMesh&&t.instanceMatrix&&t.instanceMatrix.isInstancedBufferAttribute===!0&&bS(t).toStack(),this.positionNode!==null&&gn.assign(Ta(this.positionNode,"POSITION","vec3")),gn}setupDiffuseColor(e){const{object:t,geometry:n}=e;this.maskNode!==null&&Qi(this.maskNode).not().discard();let i=this.colorNode?$e(this.colorNode):zv;this.vertexColors===!0&&n.hasAttribute("color")&&(i=i.mul(NS())),t.instanceColor&&(i=El("vec3","vInstanceColor").mul(i)),t.isBatchedMesh&&t._colorsTexture&&(i=El("vec3","vBatchColor").mul(i)),Nt.assign(i);const r=this.opacityNode?R(this.opacityNode):ug;Nt.a.assign(Nt.a.mul(r));let o=null;(this.alphaTestNode!==null||this.alphaTest>0)&&(o=this.alphaTestNode!==null?R(this.alphaTestNode):Gv,this.alphaToCoverage===!0?(Nt.a=ms(o,o.add(zm(Nt.a)),Nt.a),Nt.a.lessThanEqual(0).discard()):Nt.a.lessThanEqual(o).discard()),this.alphaHash===!0&&Nt.a.lessThan(gP(gn)).discard(),e.isOpaque()&&Nt.a.assign(1)}setupVariants(){}setupOutgoingLight(){return this.lights===!0?F(0):Nt.rgb}setupNormal(){return this.normalNode?F(this.normalNode):Yv}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?or("envMap","cubeTexture"):or("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new oP(hg)),t}setupLights(e){const t=[],n=this.setupEnvironment(e);n&&n.isLightingNode&&t.push(n);const i=this.setupLightMap(e);if(i&&i.isLightingNode&&t.push(i),this.aoNode!==null||e.material.aoMap){const o=this.aoNode!==null?this.aoNode:gS;t.push(new sP(o))}let r=this.lightsNode||e.lightsNode;return t.length>0&&(r=e.renderer.lighting.createNode([...r.getLights(),...t])),r}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:n,backdropAlphaNode:i,emissiveNode:r}=this,a=this.lights===!0||this.lightsNode!==null?this.setupLights(e):null;let c=this.setupOutgoingLight(e);if(a&&a.getScope().hasLights){const l=this.setupLightingModel(e)||null;c=AS(a,l,n,i)}else n!==null&&(c=F(i!==null?Ct(c,n,i):n));return(r&&r.isNode===!0||t.emissive&&t.emissive.isColor===!0)&&(lp.assign(F(r||Hv)),c=c.add(lp)),c}setupFog(e,t){const n=e.fogNode;return n&&(Sa.assign(t),t=$e(n.toVar())),t}setupPremultipliedAlpha(e,t){return US(t)}setupOutput(e,t){return this.fog===!0&&(t=this.setupFog(e,t)),this.premultipliedAlpha===!0&&(t=this.setupPremultipliedAlpha(e,t)),t}setDefaultValues(e){for(const n in e){const i=e[n];this[n]===void 0&&(this[n]=i,i&&i.clone&&(this[n]=i.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const n in t)Object.getOwnPropertyDescriptor(this.constructor.prototype,n)===void 0&&t[n].get!==void 0&&Object.defineProperty(this.constructor.prototype,n,t[n])}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{},nodes:{}});const n=Jn.prototype.toJSON.call(this,e);n.inputNodes={};for(const{property:r,childNode:o}of this._getNodeChildren())n.inputNodes[r]=o.toJSON(e).uuid;function i(r){const o=[];for(const a in r){const c=r[a];delete c.metadata,o.push(c)}return o}if(t){const r=i(e.textures),o=i(e.images),a=i(e.nodes);r.length>0&&(n.textures=r),o.length>0&&(n.images=o),a.length>0&&(n.nodes=a)}return n}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.aoNode=e.aoNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.maskNode=e.maskNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.receivedShadowPositionNode=e.receivedShadowPositionNode,this.castShadowPositionNode=e.castShadowPositionNode,this.receivedShadowNode=e.receivedShadowNode,this.castShadowNode=e.castShadowNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const MP=new om;class EP extends fn{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.setDefaultValues(MP),this.setValues(e)}}const AP=new AE;class wP extends fn{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.setDefaultValues(AP),this.dashOffset=0,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode?R(this.offsetNode):fS,t=this.dashScaleNode?R(this.dashScaleNode):uS,n=this.dashSizeNode?R(this.dashSizeNode):hS,i=this.gapSizeNode?R(this.gapSizeNode):dS;uh.assign(n),up.assign(i);const r=Xs(pr("lineDistance").mul(t));(e?r.add(e):r).mod(uh.add(up)).greaterThan(uh).discard()}}let Uu=null;class RP extends dd{static get type(){return"ViewportSharedTextureNode"}constructor(e=hr,t=null){Uu===null&&(Uu=new am),super(e,t,Uu)}getTextureForReference(){return Uu}updateReference(){return this}}const NP=it(RP).setParameterLength(0,2),IS=s=>ee(s).mul(.5).add(.5),CP=s=>ee(s).mul(2).sub(1),PP=new vE;class LP extends fn{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(PP),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?R(this.opacityNode):ug;Nt.assign(od($e(IS(Lt),e),di))}}const _g=O(([s=sg])=>{const e=s.z.atan(s.x).mul(1/(Math.PI*2)).add(.5),t=s.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return ie(e,t)});class FS extends iy{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const n=t.minFilter,i=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const r=new Do(5,5,5),o=_g(sg),a=new fn;a.colorNode=xt(t,o,0),a.side=Xt,a.blending=ci;const c=new Vn(r,a),l=new nm;l.add(c),t.minFilter===xi&&(t.minFilter=ln);const u=new ny(1,10,this),h=e.getMRT();return e.setMRT(null),u.update(e,l),e.setMRT(h),t.minFilter=n,t.currentGenerateMipmaps=i,c.geometry.dispose(),c.material.dispose(),this}}const il=new WeakMap;class DP extends vn{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=rc(null);const t=new Bl;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=at.RENDER}updateBefore(e){const{renderer:t,material:n}=e,i=this.envNode;if(i.isTextureNode||i.isMaterialReferenceNode){const r=i.isTextureNode?i.value:n[i.property];if(r&&r.isTexture){const o=r.mapping;if(o===Na||o===Ca){if(il.has(r)){const a=il.get(r);Sx(a,r.mapping),this._cubeTexture=a}else{const a=r.image;if(UP(a)){const c=new FS(a.height);c.fromEquirectangularTexture(t,r),Sx(c.texture,r.mapping),this._cubeTexture=c.texture,il.set(r,c.texture),r.addEventListener("dispose",BS)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function UP(s){return s==null?!1:s.height>0}function BS(s){const e=s.target;e.removeEventListener("dispose",BS);const t=il.get(e);t!==void 0&&(il.delete(e),t.dispose())}function Sx(s,e){e===Na?s.mapping=Gs:e===Ca&&(s.mapping=zs)}const OS=it(DP).setParameterLength(1);class yg extends gc{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=OS(this.envNode)}}class IP extends gc{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=R(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class fd{start(e){e.lightsNode.setupLights(e,e.lightsNode.getLightNodes(e)),this.indirect(e)}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class VS extends fd{constructor(){super()}indirect({context:e}){const t=e.ambientOcclusion,n=e.reflectedLight,i=e.irradianceLightMap;n.indirectDiffuse.assign($e(0)),i?n.indirectDiffuse.addAssign(i):n.indirectDiffuse.addAssign($e(1,1,1,0)),n.indirectDiffuse.mulAssign(t),n.indirectDiffuse.mulAssign(Nt.rgb)}finish(e){const{material:t,context:n}=e,i=n.outgoingLight,r=e.context.environment;if(r)switch(t.combine){case Dl:i.rgb.assign(Ct(i.rgb,i.rgb.mul(r.rgb),nl.mul(ph)));break;case H_:i.rgb.assign(Ct(i.rgb,r.rgb,nl.mul(ph)));break;case W_:i.rgb.addAssign(r.rgb.mul(nl.mul(ph)));break;default:te("BasicLightingModel: Unsupported .combine value:",t.combine);break}}}const FP=new sr;class BP extends fn{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(FP),this.setValues(e)}setupNormal(){return mc(sc)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new yg(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new IP(hg)),t}setupOutgoingLight(){return Nt.rgb}setupLightingModel(){return new VS}}const oc=O(({f0:s,f90:e,dotVH:t})=>{const n=t.mul(-5.55473).sub(6.98316).mul(t).exp2();return s.mul(n.oneMinus()).add(e.mul(n))}),Lo=O(s=>s.diffuseColor.mul(1/Math.PI)),OP=()=>R(.25),VP=O(({dotNH:s})=>wh.mul(R(.5)).add(1).mul(R(1/Math.PI)).mul(s.pow(wh))),GP=O(({lightDirection:s})=>{const e=s.add(Zt).normalize(),t=Lt.dot(e).clamp(),n=Zt.dot(e).clamp(),i=oc({f0:$i,f90:1,dotVH:n}),r=OP(),o=VP({dotNH:t});return i.mul(r).mul(o)});class GS extends VS{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:n}){const r=Lt.dot(e).clamp().mul(t);n.directDiffuse.addAssign(r.mul(Lo({diffuseColor:Nt.rgb}))),this.specular===!0&&n.directSpecular.addAssign(r.mul(GP({lightDirection:e})).mul(nl))}indirect(e){const{ambientOcclusion:t,irradiance:n,reflectedLight:i}=e.context;i.indirectDiffuse.addAssign(n.mul(Lo({diffuseColor:Nt}))),i.indirectDiffuse.mulAssign(t)}}const zP=new SE;class kP extends fn{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(zP),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new yg(t):null}setupLightingModel(){return new GS(!1)}}const HP=new yE;class WP extends fn{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(HP),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new yg(t):null}setupLightingModel(){return new GS}setupVariants(){const e=(this.shininessNode?R(this.shininessNode):kv).max(1e-4);wh.assign(e);const t=this.specularNode||Wv;$i.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const zS=O(s=>{if(s.geometry.hasAttribute("normal")===!1)return R(0);const e=sc.dFdx().abs().max(sc.dFdy().abs());return e.x.max(e.y).max(e.z)}),bg=O(s=>{const{roughness:e}=s,t=zS();let n=e.max(.0525);return n=n.add(t),n=n.min(1),n}),kS=O(({alpha:s,dotNL:e,dotNV:t})=>{const n=s.pow2(),i=e.mul(n.add(n.oneMinus().mul(t.pow2())).sqrt()),r=t.mul(n.add(n.oneMinus().mul(e.pow2())).sqrt());return Gi(.5,i.add(r).max(Um))}).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),$P=O(({alphaT:s,alphaB:e,dotTV:t,dotBV:n,dotTL:i,dotBL:r,dotNV:o,dotNL:a})=>{const c=a.mul(F(s.mul(t),e.mul(n),o).length()),l=o.mul(F(s.mul(i),e.mul(r),a).length());return Gi(.5,c.add(l)).saturate()}).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),HS=O(({alpha:s,dotNH:e})=>{const t=s.pow2(),n=e.pow2().mul(t.oneMinus()).oneMinus();return t.div(n.pow2()).mul(1/Math.PI)}).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),XP=R(1/Math.PI),qP=O(({alphaT:s,alphaB:e,dotNH:t,dotTH:n,dotBH:i})=>{const r=s.mul(e),o=F(e.mul(n),s.mul(i),r.mul(t)),a=o.dot(o),c=r.div(a);return XP.mul(r.mul(c.pow2()))}).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),vg=O(({lightDirection:s,f0:e,f90:t,roughness:n,f:i,normalView:r=Lt,USE_IRIDESCENCE:o,USE_ANISOTROPY:a})=>{const c=n.pow2(),l=s.add(Zt).normalize(),u=r.dot(s).clamp(),h=r.dot(Zt).clamp(),d=r.dot(l).clamp(),f=Zt.dot(l).clamp();let p=oc({f0:e,f90:t,dotVH:f}),x,g;if(Tl(o)&&(p=ed.mix(p,i)),Tl(a)){const m=el.dot(s),b=el.dot(Zt),y=el.dot(l),v=So.dot(s),w=So.dot(Zt),S=So.dot(l);x=$P({alphaT:Ah,alphaB:c,dotTV:b,dotBV:w,dotTL:m,dotBL:v,dotNV:h,dotNL:u}),g=qP({alphaT:Ah,alphaB:c,dotNH:d,dotTH:y,dotBH:S})}else x=kS({alpha:c,dotNL:u,dotNV:h}),g=HS({alpha:c,dotNH:d});return p.mul(x).mul(g)}),YP=new Uint16Array([11481,15204,11534,15171,11808,15015,12385,14843,12894,14716,13396,14600,13693,14483,13976,14366,14237,14171,14405,13961,14511,13770,14605,13598,14687,13444,14760,13305,14822,13066,14876,12857,14923,12675,14963,12517,14997,12379,15025,12230,15049,12023,15070,11843,15086,11687,15100,11551,15111,11433,15120,11330,15127,11217,15132,11060,15135,10922,15138,10801,15139,10695,15139,10600,13012,14923,13020,14917,13064,14886,13176,14800,13349,14666,13513,14526,13724,14398,13960,14230,14200,14020,14383,13827,14488,13651,14583,13491,14667,13348,14740,13132,14803,12908,14856,12713,14901,12542,14938,12394,14968,12241,14992,12017,15010,11822,15024,11654,15034,11507,15041,11380,15044,11269,15044,11081,15042,10913,15037,10764,15031,10635,15023,10520,15014,10419,15003,10330,13657,14676,13658,14673,13670,14660,13698,14622,13750,14547,13834,14442,13956,14317,14112,14093,14291,13889,14407,13704,14499,13538,14586,13389,14664,13201,14733,12966,14792,12758,14842,12577,14882,12418,14915,12272,14940,12033,14959,11826,14972,11646,14980,11490,14983,11355,14983,11212,14979,11008,14971,10830,14961,10675,14950,10540,14936,10420,14923,10315,14909,10204,14894,10041,14089,14460,14090,14459,14096,14452,14112,14431,14141,14388,14186,14305,14252,14130,14341,13941,14399,13756,14467,13585,14539,13430,14610,13272,14677,13026,14737,12808,14790,12617,14833,12449,14869,12303,14896,12065,14916,11845,14929,11655,14937,11490,14939,11347,14936,11184,14930,10970,14921,10783,14912,10621,14900,10480,14885,10356,14867,10247,14848,10062,14827,9894,14805,9745,14400,14208,14400,14206,14402,14198,14406,14174,14415,14122,14427,14035,14444,13913,14469,13767,14504,13613,14548,13463,14598,13324,14651,13082,14704,12858,14752,12658,14795,12483,14831,12330,14860,12106,14881,11875,14895,11675,14903,11501,14905,11351,14903,11178,14900,10953,14892,10757,14880,10589,14865,10442,14847,10313,14827,10162,14805,9965,14782,9792,14757,9642,14731,9507,14562,13883,14562,13883,14563,13877,14566,13862,14570,13830,14576,13773,14584,13689,14595,13582,14613,13461,14637,13336,14668,13120,14704,12897,14741,12695,14776,12516,14808,12358,14835,12150,14856,11910,14870,11701,14878,11519,14882,11361,14884,11187,14880,10951,14871,10748,14858,10572,14842,10418,14823,10286,14801,10099,14777,9897,14751,9722,14725,9567,14696,9430,14666,9309,14702,13604,14702,13604,14702,13600,14703,13591,14705,13570,14707,13533,14709,13477,14712,13400,14718,13305,14727,13106,14743,12907,14762,12716,14784,12539,14807,12380,14827,12190,14844,11943,14855,11727,14863,11539,14870,11376,14871,11204,14868,10960,14858,10748,14845,10565,14829,10406,14809,10269,14786,10058,14761,9852,14734,9671,14705,9512,14674,9374,14641,9253,14608,9076,14821,13366,14821,13365,14821,13364,14821,13358,14821,13344,14821,13320,14819,13252,14817,13145,14815,13011,14814,12858,14817,12698,14823,12539,14832,12389,14841,12214,14850,11968,14856,11750,14861,11558,14866,11390,14867,11226,14862,10972,14853,10754,14840,10565,14823,10401,14803,10259,14780,10032,14754,9820,14725,9635,14694,9473,14661,9333,14627,9203,14593,8988,14557,8798,14923,13014,14922,13014,14922,13012,14922,13004,14920,12987,14919,12957,14915,12907,14909,12834,14902,12738,14894,12623,14888,12498,14883,12370,14880,12203,14878,11970,14875,11759,14873,11569,14874,11401,14872,11243,14865,10986,14855,10762,14842,10568,14825,10401,14804,10255,14781,10017,14754,9799,14725,9611,14692,9445,14658,9301,14623,9139,14587,8920,14548,8729,14509,8562,15008,12672,15008,12672,15008,12671,15007,12667,15005,12656,15001,12637,14997,12605,14989,12556,14978,12490,14966,12407,14953,12313,14940,12136,14927,11934,14914,11742,14903,11563,14896,11401,14889,11247,14879,10992,14866,10767,14851,10570,14833,10400,14812,10252,14789,10007,14761,9784,14731,9592,14698,9424,14663,9279,14627,9088,14588,8868,14548,8676,14508,8508,14467,8360,15080,12386,15080,12386,15079,12385,15078,12383,15076,12378,15072,12367,15066,12347,15057,12315,15045,12253,15030,12138,15012,11998,14993,11845,14972,11685,14951,11530,14935,11383,14920,11228,14904,10981,14887,10762,14870,10567,14850,10397,14827,10248,14803,9997,14774,9771,14743,9578,14710,9407,14674,9259,14637,9048,14596,8826,14555,8632,14514,8464,14471,8317,14427,8182,15139,12008,15139,12008,15138,12008,15137,12007,15135,12003,15130,11990,15124,11969,15115,11929,15102,11872,15086,11794,15064,11693,15041,11581,15013,11459,14987,11336,14966,11170,14944,10944,14921,10738,14898,10552,14875,10387,14850,10239,14824,9983,14794,9758,14762,9563,14728,9392,14692,9244,14653,9014,14611,8791,14569,8597,14526,8427,14481,8281,14436,8110,14391,7885,15188,11617,15188,11617,15187,11617,15186,11618,15183,11617,15179,11612,15173,11601,15163,11581,15150,11546,15133,11495,15110,11427,15083,11346,15051,11246,15024,11057,14996,10868,14967,10687,14938,10517,14911,10362,14882,10206,14853,9956,14821,9737,14787,9543,14752,9375,14715,9228,14675,8980,14632,8760,14589,8565,14544,8395,14498,8248,14451,8049,14404,7824,14357,7630,15228,11298,15228,11298,15227,11299,15226,11301,15223,11303,15219,11302,15213,11299,15204,11290,15191,11271,15174,11217,15150,11129,15119,11015,15087,10886,15057,10744,15024,10599,14990,10455,14957,10318,14924,10143,14891,9911,14856,9701,14820,9516,14782,9352,14744,9200,14703,8946,14659,8725,14615,8533,14568,8366,14521,8220,14472,7992,14423,7770,14374,7578,14315,7408,15260,10819,15260,10819,15259,10822,15258,10826,15256,10832,15251,10836,15246,10841,15237,10838,15225,10821,15207,10788,15183,10734,15151,10660,15120,10571,15087,10469,15049,10359,15012,10249,14974,10041,14937,9837,14900,9647,14860,9475,14820,9320,14779,9147,14736,8902,14691,8688,14646,8499,14598,8335,14549,8189,14499,7940,14448,7720,14397,7529,14347,7363,14256,7218,15285,10410,15285,10411,15285,10413,15284,10418,15282,10425,15278,10434,15272,10442,15264,10449,15252,10445,15235,10433,15210,10403,15179,10358,15149,10301,15113,10218,15073,10059,15033,9894,14991,9726,14951,9565,14909,9413,14865,9273,14822,9073,14777,8845,14730,8641,14682,8459,14633,8300,14583,8129,14531,7883,14479,7670,14426,7482,14373,7321,14305,7176,14201,6939,15305,9939,15305,9940,15305,9945,15304,9955,15302,9967,15298,9989,15293,10010,15286,10033,15274,10044,15258,10045,15233,10022,15205,9975,15174,9903,15136,9808,15095,9697,15053,9578,15009,9451,14965,9327,14918,9198,14871,8973,14825,8766,14775,8579,14725,8408,14675,8259,14622,8058,14569,7821,14515,7615,14460,7435,14405,7276,14350,7108,14256,6866,14149,6653,15321,9444,15321,9445,15321,9448,15320,9458,15317,9470,15314,9490,15310,9515,15302,9540,15292,9562,15276,9579,15251,9577,15226,9559,15195,9519,15156,9463,15116,9389,15071,9304,15025,9208,14978,9023,14927,8838,14878,8661,14827,8496,14774,8344,14722,8206,14667,7973,14612,7749,14556,7555,14499,7382,14443,7229,14385,7025,14322,6791,14210,6588,14100,6409,15333,8920,15333,8921,15332,8927,15332,8943,15329,8965,15326,9002,15322,9048,15316,9106,15307,9162,15291,9204,15267,9221,15244,9221,15212,9196,15175,9134,15133,9043,15088,8930,15040,8801,14990,8665,14938,8526,14886,8391,14830,8261,14775,8087,14719,7866,14661,7664,14603,7482,14544,7322,14485,7178,14426,6936,14367,6713,14281,6517,14166,6348,14054,6198,15341,8360,15341,8361,15341,8366,15341,8379,15339,8399,15336,8431,15332,8473,15326,8527,15318,8585,15302,8632,15281,8670,15258,8690,15227,8690,15191,8664,15149,8612,15104,8543,15055,8456,15001,8360,14948,8259,14892,8122,14834,7923,14776,7734,14716,7558,14656,7397,14595,7250,14534,7070,14472,6835,14410,6628,14350,6443,14243,6283,14125,6135,14010,5889,15348,7715,15348,7717,15348,7725,15347,7745,15345,7780,15343,7836,15339,7905,15334,8e3,15326,8103,15310,8193,15293,8239,15270,8270,15240,8287,15204,8283,15163,8260,15118,8223,15067,8143,15014,8014,14958,7873,14899,7723,14839,7573,14778,7430,14715,7293,14652,7164,14588,6931,14524,6720,14460,6531,14396,6362,14330,6210,14207,6015,14086,5781,13969,5576,15352,7114,15352,7116,15352,7128,15352,7159,15350,7195,15348,7237,15345,7299,15340,7374,15332,7457,15317,7544,15301,7633,15280,7703,15251,7754,15216,7775,15176,7767,15131,7733,15079,7670,15026,7588,14967,7492,14906,7387,14844,7278,14779,7171,14714,6965,14648,6770,14581,6587,14515,6420,14448,6269,14382,6123,14299,5881,14172,5665,14049,5477,13929,5310,15355,6329,15355,6330,15355,6339,15355,6362,15353,6410,15351,6472,15349,6572,15344,6688,15337,6835,15323,6985,15309,7142,15287,7220,15260,7277,15226,7310,15188,7326,15142,7318,15090,7285,15036,7239,14976,7177,14914,7045,14849,6892,14782,6736,14714,6581,14645,6433,14576,6293,14506,6164,14438,5946,14369,5733,14270,5540,14140,5369,14014,5216,13892,5043,15357,5483,15357,5484,15357,5496,15357,5528,15356,5597,15354,5692,15351,5835,15347,6011,15339,6195,15328,6317,15314,6446,15293,6566,15268,6668,15235,6746,15197,6796,15152,6811,15101,6790,15046,6748,14985,6673,14921,6583,14854,6479,14785,6371,14714,6259,14643,6149,14571,5946,14499,5750,14428,5567,14358,5401,14242,5250,14109,5111,13980,4870,13856,4657,15359,4555,15359,4557,15358,4573,15358,4633,15357,4715,15355,4841,15353,5061,15349,5216,15342,5391,15331,5577,15318,5770,15299,5967,15274,6150,15243,6223,15206,6280,15161,6310,15111,6317,15055,6300,14994,6262,14928,6208,14860,6141,14788,5994,14715,5838,14641,5684,14566,5529,14492,5384,14418,5247,14346,5121,14216,4892,14079,4682,13948,4496,13822,4330,15359,3498,15359,3501,15359,3520,15359,3598,15358,3719,15356,3860,15355,4137,15351,4305,15344,4563,15334,4809,15321,5116,15303,5273,15280,5418,15250,5547,15214,5653,15170,5722,15120,5761,15064,5763,15002,5733,14935,5673,14865,5597,14792,5504,14716,5400,14640,5294,14563,5185,14486,5041,14410,4841,14335,4655,14191,4482,14051,4325,13918,4183,13790,4012,15360,2282,15360,2285,15360,2306,15360,2401,15359,2547,15357,2748,15355,3103,15352,3349,15345,3675,15336,4020,15324,4272,15307,4496,15285,4716,15255,4908,15220,5086,15178,5170,15128,5214,15072,5234,15010,5231,14943,5206,14871,5166,14796,5102,14718,4971,14639,4833,14559,4687,14480,4541,14402,4401,14315,4268,14167,4142,14025,3958,13888,3747,13759,3556,15360,923,15360,925,15360,946,15360,1052,15359,1214,15357,1494,15356,1892,15352,2274,15346,2663,15338,3099,15326,3393,15309,3679,15288,3980,15260,4183,15226,4325,15185,4437,15136,4517,15080,4570,15018,4591,14950,4581,14877,4545,14800,4485,14720,4411,14638,4325,14556,4231,14475,4136,14395,3988,14297,3803,14145,3628,13999,3465,13861,3314,13729,3177,15360,263,15360,264,15360,272,15360,325,15359,407,15358,548,15356,780,15352,1144,15347,1580,15339,2099,15328,2425,15312,2795,15292,3133,15264,3329,15232,3517,15191,3689,15143,3819,15088,3923,15025,3978,14956,3999,14882,3979,14804,3931,14722,3855,14639,3756,14554,3645,14470,3529,14388,3409,14279,3289,14124,3173,13975,3055,13834,2848,13701,2658,15360,49,15360,49,15360,52,15360,75,15359,111,15358,201,15356,283,15353,519,15348,726,15340,1045,15329,1415,15314,1795,15295,2173,15269,2410,15237,2649,15197,2866,15150,3054,15095,3140,15032,3196,14963,3228,14888,3236,14808,3224,14725,3191,14639,3146,14553,3088,14466,2976,14382,2836,14262,2692,14103,2549,13952,2409,13808,2278,13674,2154,15360,4,15360,4,15360,4,15360,13,15359,33,15358,59,15357,112,15353,199,15348,302,15341,456,15331,628,15316,827,15297,1082,15272,1332,15241,1601,15202,1851,15156,2069,15101,2172,15039,2256,14970,2314,14894,2348,14813,2358,14728,2344,14640,2311,14551,2263,14463,2203,14376,2133,14247,2059,14084,1915,13930,1761,13784,1609,13648,1464,15360,0,15360,0,15360,0,15360,3,15359,18,15358,26,15357,53,15354,80,15348,97,15341,165,15332,238,15318,326,15299,427,15275,529,15245,654,15207,771,15161,885,15108,994,15046,1089,14976,1170,14900,1229,14817,1266,14731,1284,14641,1282,14550,1260,14460,1223,14370,1174,14232,1116,14066,1050,13909,981,13761,910,13623,839]);let er=null;const Cl=O(({roughness:s,dotNV:e})=>{er===null&&(er=new sm(YP,32,32,hs,hn),er.minFilter=ln,er.magFilter=ln,er.wrapS=gi,er.wrapT=gi,er.generateMipmaps=!1,er.needsUpdate=!0);const t=ie(s,e);return xt(er,t).rg}),jP=O(({lightDirection:s,f0:e,f90:t,roughness:n,f:i,USE_IRIDESCENCE:r,USE_ANISOTROPY:o})=>{const a=vg({lightDirection:s,f0:e,f90:t,roughness:n,f:i,USE_IRIDESCENCE:r,USE_ANISOTROPY:o}),c=Lt.dot(s).clamp(),l=Lt.dot(Zt).clamp(),u=Cl({roughness:n,dotNV:l}),h=Cl({roughness:n,dotNV:c}),d=e.mul(u.x).add(t.mul(u.y)),f=e.mul(h.x).add(t.mul(h.y)),p=u.x.add(u.y),x=h.x.add(h.y),g=R(1).sub(p),m=R(1).sub(x),b=e.add(e.oneMinus().mul(.047619)),y=d.mul(f).mul(b).div(R(1).sub(g.mul(m).mul(b).mul(b)).add(Um)),v=g.mul(m),w=y.mul(v);return a.add(w)}),WS=O(s=>{const{dotNV:e,specularColor:t,specularF90:n,roughness:i}=s,r=Cl({dotNV:e,roughness:i});return t.mul(r.x).add(n.mul(r.y))}),$S=O(({f:s,f90:e,dotVH:t})=>{const n=t.oneMinus().saturate(),i=n.mul(n),r=n.mul(i,i).clamp(0,.9999);return s.sub(F(e).mul(r)).div(r.oneMinus())}).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),KP=O(({roughness:s,dotNH:e})=>{const t=s.pow2(),n=R(1).div(t),r=e.pow2().oneMinus().max(.0078125);return R(2).add(n).mul(r.pow(n.mul(.5))).div(2*Math.PI)}).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),ZP=O(({dotNV:s,dotNL:e})=>R(1).div(R(4).mul(e.add(s).sub(e.mul(s))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),QP=O(({lightDirection:s})=>{const e=s.add(Zt).normalize(),t=Lt.dot(s).clamp(),n=Lt.dot(Zt).clamp(),i=Lt.dot(e).clamp(),r=KP({roughness:Jh,dotNH:i}),o=ZP({dotNV:n,dotNL:t});return mo.mul(r).mul(o)}),JP=O(({N:s,V:e,roughness:t})=>{const r=.0078125,o=s.dot(e).saturate(),a=ie(t,o.oneMinus().sqrt());return a.assign(a.mul(.984375).add(r)),a}).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),eL=O(({f:s})=>{const e=s.length();return Jt(e.mul(e).add(s.z).div(e.add(1)),0)}).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),Iu=O(({v1:s,v2:e})=>{const t=s.dot(e),n=t.abs().toVar(),i=n.mul(.0145206).add(.4965155).mul(n).add(.8543985).toVar(),r=n.add(4.1616724).mul(n).add(3.417594).toVar(),o=i.div(r),a=t.greaterThan(0).select(o,Jt(t.mul(t).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(o));return s.cross(e).mul(a)}).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),Tx=O(({N:s,V:e,P:t,mInv:n,p0:i,p1:r,p2:o,p3:a})=>{const c=r.sub(i).toVar(),l=a.sub(i).toVar(),u=c.cross(l),h=F().toVar();return je(u.dot(t.sub(i)).greaterThanEqual(0),()=>{const d=e.sub(s.mul(e.dot(s))).normalize(),f=s.cross(d).negate(),p=n.mul(ei(d,f,s).transpose()).toVar(),x=p.mul(i.sub(t)).normalize().toVar(),g=p.mul(r.sub(t)).normalize().toVar(),m=p.mul(o.sub(t)).normalize().toVar(),b=p.mul(a.sub(t)).normalize().toVar(),y=F(0).toVar();y.addAssign(Iu({v1:x,v2:g})),y.addAssign(Iu({v1:g,v2:m})),y.addAssign(Iu({v1:m,v2:b})),y.addAssign(Iu({v1:b,v2:x})),h.assign(F(eL({f:y})))}),h}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),pd=1/6,XS=s=>st(pd,st(s,st(s,s.negate().add(3)).sub(3)).add(1)),yp=s=>st(pd,st(s,st(s,st(3,s).sub(6))).add(4)),qS=s=>st(pd,st(s,st(s,st(-3,s).add(3)).add(3)).add(1)),bp=s=>st(pd,Xi(s,3)),Mx=s=>XS(s).add(yp(s)),Ex=s=>qS(s).add(bp(s)),Ax=s=>Mn(-1,yp(s).div(XS(s).add(yp(s)))),wx=s=>Mn(1,bp(s).div(qS(s).add(bp(s)))),Rx=(s,e,t)=>{const n=s.uvNode,i=st(n,e.zw).add(.5),r=Fs(i),o=fs(i),a=Mx(o.x),c=Ex(o.x),l=Ax(o.x),u=wx(o.x),h=Ax(o.y),d=wx(o.y),f=ie(r.x.add(l),r.y.add(h)).sub(.5).mul(e.xy),p=ie(r.x.add(u),r.y.add(h)).sub(.5).mul(e.xy),x=ie(r.x.add(l),r.y.add(d)).sub(.5).mul(e.xy),g=ie(r.x.add(u),r.y.add(d)).sub(.5).mul(e.xy),m=Mx(o.y).mul(Mn(a.mul(s.sample(f).level(t)),c.mul(s.sample(p).level(t)))),b=Ex(o.y).mul(Mn(a.mul(s.sample(x).level(t)),c.mul(s.sample(g).level(t))));return m.add(b)},Sg=O(([s,e])=>{const t=ie(s.size(U(e))),n=ie(s.size(U(e.add(1)))),i=Gi(1,t),r=Gi(1,n),o=Rx(s,$e(i,t),Fs(e)),a=Rx(s,$e(r,n),id(e));return fs(e).mix(o,a)}),tL=O(([s,e])=>{const t=e.mul(Jm(s));return Sg(s,t)}),Nx=O(([s,e,t,n,i])=>{const r=F(Xm(e.negate(),Si(s),Gi(1,n))),o=F(Bs(i[0].xyz),Bs(i[1].xyz),Bs(i[2].xyz));return Si(r).mul(t.mul(o))}).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),nL=O(([s,e])=>s.mul(Ji(e.mul(2).sub(2),0,1))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),iL=fg(),sL=fg(),Cx=O(([s,e,t],{material:n})=>{const r=(n.side===Xt?iL:sL).sample(s),o=Is(Po.x).mul(nL(e,t));return Sg(r,o)}),Px=O(([s,e,t])=>(je(t.notEqual(0),()=>{const n=nd(e).negate().div(t);return Im(n.negate().mul(s))}),F(1))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),rL=O(([s,e,t,n,i,r,o,a,c,l,u,h,d,f,p])=>{let x,g;if(p){x=$e().toVar(),g=F().toVar();const w=u.sub(1).mul(p.mul(.025)),S=F(u.sub(w),u,u.add(w));Ft({start:0,end:3},({i:E})=>{const C=S.element(E),T=Nx(s,e,h,C,a),M=o.add(T),I=l.mul(c.mul($e(M,1))),G=ie(I.xy.div(I.w)).toVar();G.addAssign(1),G.divAssign(2),G.assign(ie(G.x,G.y.oneMinus()));const z=Cx(G,t,C);x.element(E).assign(z.element(E)),x.a.addAssign(z.a),g.element(E).assign(n.element(E).mul(Px(Bs(T),d,f).element(E)))}),x.a.divAssign(3)}else{const w=Nx(s,e,h,u,a),S=o.add(w),E=l.mul(c.mul($e(S,1))),C=ie(E.xy.div(E.w)).toVar();C.addAssign(1),C.divAssign(2),C.assign(ie(C.x,C.y.oneMinus())),x=Cx(C,t,u),g=n.mul(Px(Bs(w),d,f))}const m=g.rgb.mul(x.rgb),b=s.dot(e).clamp(),y=F(WS({dotNV:b,specularColor:i,specularF90:r,roughness:t})),v=g.r.add(g.g,g.b).div(3);return $e(y.oneMinus().mul(m),x.a.oneMinus().mul(v).oneMinus())}),oL=ei(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),aL=s=>{const e=s.sqrt();return F(1).add(e).div(F(1).sub(e))},Lx=(s,e)=>s.sub(e).div(s.add(e)).pow2(),cL=(s,e)=>{const t=s.mul(2*Math.PI*1e-9),n=F(54856e-17,44201e-17,52481e-17),i=F(1681e3,1795300,2208400),r=F(43278e5,93046e5,66121e5),o=R(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(t.mul(2239900).add(e.x).cos()).mul(t.pow2().mul(-45282e5).exp());let a=n.mul(r.mul(2*Math.PI).sqrt()).mul(i.mul(t).add(e).cos()).mul(t.pow2().negate().mul(r).exp());return a=F(a.x.add(o),a.y,a.z).div(10685e-11),oL.mul(a)},lL=O(({outsideIOR:s,eta2:e,cosTheta1:t,thinFilmThickness:n,baseF0:i})=>{const r=Ct(s,e,ms(0,.03,n)),a=s.div(r).pow2().mul(t.pow2().oneMinus()).oneMinus();je(a.lessThan(0),()=>F(1));const c=a.sqrt(),l=Lx(r,s),u=oc({f0:l,f90:1,dotVH:t}),h=u.oneMinus(),d=r.lessThan(s).select(Math.PI,0),f=R(Math.PI).sub(d),p=aL(i.clamp(0,.9999)),x=Lx(p,r.toVec3()),g=oc({f0:x,f90:1,dotVH:c}),m=F(p.x.lessThan(r).select(Math.PI,0),p.y.lessThan(r).select(Math.PI,0),p.z.lessThan(r).select(Math.PI,0)),b=r.mul(n,c,2),y=F(f).add(m),v=u.mul(g).clamp(1e-5,.9999),w=v.sqrt(),S=h.pow2().mul(g).div(F(1).sub(v)),C=u.add(S).toVar(),T=S.sub(h).toVar();return Ft({start:1,end:2,condition:"<=",name:"m"},({m:M})=>{T.mulAssign(w);const I=cL(R(M).mul(b),R(M).mul(y)).mul(2);C.addAssign(T.mul(I))}),C.max(F(0))}).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),uL=O(({normal:s,viewDir:e,roughness:t})=>{const n=s.dot(e).saturate(),i=t.pow2(),r=wn(t.lessThan(.25),R(-339.2).mul(i).add(R(161.4).mul(t)).sub(25.9),R(-8.48).mul(i).add(R(14.3).mul(t)).sub(9.95)),o=wn(t.lessThan(.25),R(44).mul(i).sub(R(23.7).mul(t)).add(3.26),R(1.97).mul(i).sub(R(3.27).mul(t)).add(.72));return wn(t.lessThan(.25),0,R(.1).mul(t).sub(.025)).add(r.mul(n).add(o).exp()).mul(1/Math.PI).saturate()}),df=F(.04),ff=R(1);class YS extends fd{constructor(e=!1,t=!1,n=!1,i=!1,r=!1,o=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=n,this.anisotropy=i,this.transmission=r,this.dispersion=o,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(this.clearcoat===!0&&(this.clearcoatRadiance=F().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=F().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=F().toVar("clearcoatSpecularIndirect")),this.sheen===!0&&(this.sheenSpecularDirect=F().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=F().toVar("sheenSpecularIndirect")),this.iridescence===!0){const t=Lt.dot(Zt).clamp();this.iridescenceFresnel=lL({outsideIOR:R(1),eta2:Em,cosTheta1:t,thinFilmThickness:Am,baseF0:$i}),this.iridescenceF0=$S({f:this.iridescenceFresnel,f90:1,dotVH:t})}if(this.transmission===!0){const t=Os,n=mv.sub(Os).normalize(),i=Xr,r=e.context;r.backdrop=rL(i,n,Cs,Nt,$i,Rl,t,qi,ns,pc,tl,wm,Nm,Rm,this.dispersion?Cm:null),r.backdropAlpha=Rh,Nt.a.mulAssign(Ct(1,r.backdrop.a,Rh))}super.start(e)}computeMultiscattering(e,t,n){const i=Lt.dot(Zt).clamp(),r=Cl({roughness:Cs,dotNV:i}),o=this.iridescenceF0?ed.mix($i,this.iridescenceF0):$i,a=o.mul(r.x).add(n.mul(r.y)),l=r.x.add(r.y).oneMinus(),u=o.add(o.oneMinus().mul(.047619)),h=a.mul(u).div(l.mul(u).oneMinus());e.addAssign(a),t.addAssign(h.mul(l))}direct({lightDirection:e,lightColor:t,reflectedLight:n}){const r=Lt.dot(e).clamp().mul(t);if(this.sheen===!0&&this.sheenSpecularDirect.addAssign(r.mul(QP({lightDirection:e}))),this.clearcoat===!0){const a=go.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(a.mul(vg({lightDirection:e,f0:df,f90:ff,roughness:wl,normalView:go})))}n.directDiffuse.addAssign(r.mul(Lo({diffuseColor:Nt.rgb}))),n.directSpecular.addAssign(r.mul(jP({lightDirection:e,f0:$i,f90:1,roughness:Cs,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:n,halfHeight:i,reflectedLight:r,ltc_1:o,ltc_2:a}){const c=t.add(n).sub(i),l=t.sub(n).sub(i),u=t.sub(n).add(i),h=t.add(n).add(i),d=Lt,f=Zt,p=xn.toVar(),x=JP({N:d,V:f,roughness:Cs}),g=o.sample(x).toVar(),m=a.sample(x).toVar(),b=ei(F(g.x,0,g.y),F(0,1,0),F(g.z,0,g.w)).toVar(),y=$i.mul(m.x).add($i.oneMinus().mul(m.y)).toVar();r.directSpecular.addAssign(e.mul(y).mul(Tx({N:d,V:f,P:p,mInv:b,p0:c,p1:l,p2:u,p3:h}))),r.directDiffuse.addAssign(e.mul(Nt).mul(Tx({N:d,V:f,P:p,mInv:ei(1,0,0,0,1,0,0,0,1),p0:c,p1:l,p2:u,p3:h})))}indirect(e){this.indirectDiffuse(e),this.indirectSpecular(e),this.ambientOcclusion(e)}indirectDiffuse(e){const{irradiance:t,reflectedLight:n}=e.context;n.indirectDiffuse.addAssign(t.mul(Lo({diffuseColor:Nt})))}indirectSpecular(e){const{radiance:t,iblIrradiance:n,reflectedLight:i}=e.context;if(this.sheen===!0&&this.sheenSpecularIndirect.addAssign(n.mul(mo,uL({normal:Lt,viewDir:Zt,roughness:Jh}))),this.clearcoat===!0){const u=go.dot(Zt).clamp(),h=WS({dotNV:u,specularColor:df,specularF90:ff,roughness:wl});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(h))}const r=F().toVar("singleScattering"),o=F().toVar("multiScattering"),a=n.mul(1/Math.PI);this.computeMultiscattering(r,o,Rl);const c=r.add(o),l=Nt.mul(c.r.max(c.g).max(c.b).oneMinus());i.indirectSpecular.addAssign(t.mul(r)),i.indirectSpecular.addAssign(o.mul(a)),i.indirectDiffuse.addAssign(l.mul(a))}ambientOcclusion(e){const{ambientOcclusion:t,reflectedLight:n}=e.context,r=Lt.dot(Zt).clamp().add(t),o=Cs.mul(-16).oneMinus().negate().exp2(),a=t.sub(r.pow(o).oneMinus()).clamp();this.clearcoat===!0&&this.clearcoatSpecularIndirect.mulAssign(t),this.sheen===!0&&this.sheenSpecularIndirect.mulAssign(t),n.indirectDiffuse.mulAssign(t),n.indirectSpecular.mulAssign(a)}finish({context:e}){const{outgoingLight:t}=e;if(this.clearcoat===!0){const n=go.dot(Zt).clamp(),i=oc({dotVH:n,f0:df,f90:ff}),r=t.mul(Eh.mul(i).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(Eh));t.assign(r)}if(this.sheen===!0){const n=mo.r.max(mo.g).max(mo.b).mul(.157).oneMinus(),i=t.mul(n).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(i)}}}const Dx=R(1),vp=R(-2),Fu=R(.8),pf=R(-1),Bu=R(.4),mf=R(2),Ou=R(.305),gf=R(3),Ux=R(.21),hL=R(4),Ix=R(4),dL=R(16),fL=O(([s])=>{const e=F($t(s)).toVar(),t=R(-1).toVar();return je(e.x.greaterThan(e.z),()=>{je(e.x.greaterThan(e.y),()=>{t.assign(wn(s.x.greaterThan(0),0,3))}).Else(()=>{t.assign(wn(s.y.greaterThan(0),1,4))})}).Else(()=>{je(e.z.greaterThan(e.y),()=>{t.assign(wn(s.z.greaterThan(0),2,5))}).Else(()=>{t.assign(wn(s.y.greaterThan(0),1,4))})}),t}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),pL=O(([s,e])=>{const t=ie().toVar();return je(e.equal(0),()=>{t.assign(ie(s.z,s.y).div($t(s.x)))}).ElseIf(e.equal(1),()=>{t.assign(ie(s.x.negate(),s.z.negate()).div($t(s.y)))}).ElseIf(e.equal(2),()=>{t.assign(ie(s.x.negate(),s.y).div($t(s.z)))}).ElseIf(e.equal(3),()=>{t.assign(ie(s.z.negate(),s.y).div($t(s.x)))}).ElseIf(e.equal(4),()=>{t.assign(ie(s.x.negate(),s.z).div($t(s.y)))}).Else(()=>{t.assign(ie(s.x,s.y).div($t(s.z)))}),st(.5,t.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),mL=O(([s])=>{const e=R(0).toVar();return je(s.greaterThanEqual(Fu),()=>{e.assign(Dx.sub(s).mul(pf.sub(vp)).div(Dx.sub(Fu)).add(vp))}).ElseIf(s.greaterThanEqual(Bu),()=>{e.assign(Fu.sub(s).mul(mf.sub(pf)).div(Fu.sub(Bu)).add(pf))}).ElseIf(s.greaterThanEqual(Ou),()=>{e.assign(Bu.sub(s).mul(gf.sub(mf)).div(Bu.sub(Ou)).add(mf))}).ElseIf(s.greaterThanEqual(Ux),()=>{e.assign(Ou.sub(s).mul(hL.sub(gf)).div(Ou.sub(Ux)).add(gf))}).Else(()=>{e.assign(R(-2).mul(Is(st(1.16,s))))}),e}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),jS=O(([s,e])=>{const t=s.toVar();t.assign(st(2,t).sub(1));const n=F(t,1).toVar();return je(e.equal(0),()=>{n.assign(n.zyx)}).ElseIf(e.equal(1),()=>{n.assign(n.xzy),n.xz.mulAssign(-1)}).ElseIf(e.equal(2),()=>{n.x.mulAssign(-1)}).ElseIf(e.equal(3),()=>{n.assign(n.zyx),n.xz.mulAssign(-1)}).ElseIf(e.equal(4),()=>{n.assign(n.xzy),n.xy.mulAssign(-1)}).ElseIf(e.equal(5),()=>{n.z.mulAssign(-1)}),n}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),KS=O(([s,e,t,n,i,r])=>{const o=R(t),a=F(e),c=Ji(mL(o),vp,r),l=fs(c),u=Fs(c),h=F(Pl(s,a,u,n,i,r)).toVar();return je(l.notEqual(0),()=>{const d=F(Pl(s,a,u.add(1),n,i,r)).toVar();h.assign(Ct(h,d,l))}),h}),Pl=O(([s,e,t,n,i,r])=>{const o=R(t).toVar(),a=F(e),c=R(fL(a)).toVar(),l=R(Jt(Ix.sub(o),0)).toVar();o.assign(Jt(o,Ix));const u=R(ic(o)).toVar(),h=ie(pL(a,c).mul(u.sub(2)).add(1)).toVar();return je(c.greaterThan(2),()=>{h.y.addAssign(u),c.subAssign(3)}),h.x.addAssign(c.mul(u)),h.x.addAssign(l.mul(st(3,dL))),h.y.addAssign(st(4,ic(r).sub(u))),h.x.mulAssign(n),h.y.mulAssign(i),s.sample(h).grad(ie(),ie())}),xf=O(({envMap:s,mipInt:e,outputDirection:t,theta:n,axis:i,CUBEUV_TEXEL_WIDTH:r,CUBEUV_TEXEL_HEIGHT:o,CUBEUV_MAX_MIP:a})=>{const c=Ns(n),l=t.mul(c).add(i.cross(t).mul(pi(n))).add(i.mul(i.dot(t).mul(c.oneMinus())));return Pl(s,l,e,r,o,a)}),ZS=O(({n:s,latitudinal:e,poleAxis:t,outputDirection:n,weights:i,samples:r,dTheta:o,mipInt:a,envMap:c,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})=>{const d=F(wn(e,t,Co(t,n))).toVar();je(d.equal(F(0)),()=>{d.assign(F(n.z,0,n.x.negate()))}),d.assign(Si(d));const f=F().toVar();return f.addAssign(i.element(0).mul(xf({theta:0,axis:d,outputDirection:n,mipInt:a,envMap:c,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),Ft({start:U(1),end:s},({i:p})=>{je(p.greaterThanEqual(r),()=>{MS()});const x=R(o.mul(R(p))).toVar();f.addAssign(i.element(p).mul(xf({theta:x.mul(-1),axis:d,outputDirection:n,mipInt:a,envMap:c,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),f.addAssign(i.element(p).mul(xf({theta:x,axis:d,outputDirection:n,mipInt:a,envMap:c,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})))}),$e(f,1)}),gL=O(([s])=>{const e=me(s).toVar();return e.assign(e.shiftLeft(me(16)).bitOr(e.shiftRight(me(16)))),e.assign(e.bitAnd(me(1431655765)).shiftLeft(me(1)).bitOr(e.bitAnd(me(2863311530)).shiftRight(me(1)))),e.assign(e.bitAnd(me(858993459)).shiftLeft(me(2)).bitOr(e.bitAnd(me(3435973836)).shiftRight(me(2)))),e.assign(e.bitAnd(me(252645135)).shiftLeft(me(4)).bitOr(e.bitAnd(me(4042322160)).shiftRight(me(4)))),e.assign(e.bitAnd(me(16711935)).shiftLeft(me(8)).bitOr(e.bitAnd(me(4278255360)).shiftRight(me(8)))),R(e).mul(23283064365386963e-26)}),xL=O(([s,e])=>ie(R(s).div(R(e)),gL(s))),_L=O(([s,e,t])=>{const n=F(e).toVar(),i=R(t),r=i.mul(i).toVar(),o=Si(F(r.mul(n.x),r.mul(n.y),n.z)).toVar(),a=o.x.mul(o.x).add(o.y.mul(o.y)),c=wn(a.greaterThan(0),F(o.y.negate(),o.x,0).div(_i(a)),F(1,0,0)).toVar(),l=Co(o,c).toVar(),u=_i(s.x),h=st(2,3.14159265359).mul(s.y),d=u.mul(Ns(h)).toVar(),f=u.mul(pi(h)).toVar(),p=st(.5,o.z.add(1));f.assign(p.oneMinus().mul(_i(d.mul(d).oneMinus())).add(p.mul(f)));const x=c.mul(d).add(l.mul(f)).add(o.mul(_i(Jt(0,d.mul(d).add(f.mul(f)).oneMinus()))));return Si(F(r.mul(x.x),r.mul(x.y),Jt(0,x.z)))}),QS=O(({roughness:s,mipInt:e,envMap:t,N_immutable:n,GGX_SAMPLES:i,CUBEUV_TEXEL_WIDTH:r,CUBEUV_TEXEL_HEIGHT:o,CUBEUV_MAX_MIP:a})=>{const c=F(n).toVar(),l=F(0).toVar(),u=R(0).toVar();return je(s.lessThan(.001),()=>{l.assign(Pl(t,c,e,r,o,a))}).Else(()=>{const h=wn($t(c.z).lessThan(.999),F(0,0,1),F(1,0,0)),d=Si(Co(h,c)).toVar(),f=Co(c,d).toVar();Ft({start:me(0),end:i},({i:p})=>{const x=xL(p,i),g=_L(x,F(0,0,1),s),m=Si(d.mul(g.x).add(f.mul(g.y)).add(c.mul(g.z))),b=Si(m.mul(ps(c,m).mul(2)).sub(c)),y=Jt(ps(c,b),0);je(y.greaterThan(0),()=>{const v=Pl(t,b,e,r,o,a);l.addAssign(v.mul(y)),u.addAssign(y)})}),je(u.greaterThan(0),()=>{l.assign(l.div(u))})}),$e(l,1)}),Lr=4,Fx=[.125,.215,.35,.446,.526,.582],ho=20,yL=512,Nc=new Gl(-1,1,1,-1,0,1),bL=new Wn(90,1),Bx=new Ze;let _f=null,yf=0,bf=0;const vL=new P,Dh=new WeakMap,SL=[3,1,5,0,4,2],vf=jS(Vt(),pr("faceIndex")).normalize(),md=F(vf.x,vf.y,vf.z);class TL{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._ggxMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}get _hasInitialized(){return this._renderer.hasInitialized()}fromScene(e,t=0,n=.1,i=100,r={}){const{size:o=256,position:a=vL,renderTarget:c=null}=r;if(this._setSize(o),this._hasInitialized===!1){te('PMREMGenerator: ".fromScene()" called before the backend is initialized. Try using "await renderer.init()" instead.');const u=c||this._allocateTarget();return r.renderTarget=u,this.fromSceneAsync(e,t,n,i,r),u}_f=this._renderer.getRenderTarget(),yf=this._renderer.getActiveCubeFace(),bf=this._renderer.getActiveMipmapLevel();const l=c||this._allocateTarget();return l.depthBuffer=!0,this._init(l),this._sceneToCubeUV(e,n,i,l,a),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}async fromSceneAsync(e,t=0,n=.1,i=100,r={}){return Wt('PMREMGenerator: ".fromSceneAsync()" is deprecated. Use "await renderer.init()" instead.'),await this._renderer.init(),this.fromScene(e,t,n,i,r)}fromEquirectangular(e,t=null){if(this._hasInitialized===!1){te('PMREMGenerator: .fromEquirectangular() called before the backend is initialized. Try using "await renderer.init()" instead.'),this._setSizeFromTexture(e);const n=t||this._allocateTarget();return this.fromEquirectangularAsync(e,n),n}return this._fromTexture(e,t)}async fromEquirectangularAsync(e,t=null){return Wt('PMREMGenerator: ".fromEquirectangularAsync()" is deprecated. Use "await renderer.init()" instead.'),await this._renderer.init(),this._fromTexture(e,t)}fromCubemap(e,t=null){if(this._hasInitialized===!1){te("PMREMGenerator: .fromCubemap() called before the backend is initialized. Try using .fromCubemapAsync() instead."),this._setSizeFromTexture(e);const n=t||this._allocateTarget();return this.fromCubemapAsync(e,t),n}return this._fromTexture(e,t)}async fromCubemapAsync(e,t=null){return Wt('PMREMGenerator: ".fromCubemapAsync()" is deprecated. Use "await renderer.init()" instead.'),await this._renderer.init(),this._fromTexture(e,t)}async compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Vx(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Gx(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose(),this._backgroundBox!==null&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSizeFromTexture(e){e.mapping===Gs||e.mapping===zs?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4)}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._ggxMaterial!==null&&this._ggxMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodMeshes.length;e++)this._lodMeshes[e].geometry.dispose()}_cleanup(e){this._renderer.setRenderTarget(_f,yf,bf),e.scissorTest=!1,sa(e,0,0,e.width,e.height)}_fromTexture(e,t){this._setSizeFromTexture(e),_f=this._renderer.getRenderTarget(),yf=this._renderer.getActiveCubeFace(),bf=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTarget();return this._init(n),this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTarget(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize;return Ox(e,t)}_init(e){if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e.width||this._pingPongRenderTarget.height!==e.height){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Ox(e.width,e.height);const{_lodMax:t}=this;({lodMeshes:this._lodMeshes,sizeLods:this._sizeLods,sigmas:this._sigmas}=ML(t)),this._blurMaterial=EL(t,e.width,e.height)}}async _compileMaterial(e){const t=new Vn(new bn,e);await this._renderer.compile(t,Nc)}_sceneToCubeUV(e,t,n,i,r){const o=bL;o.near=t,o.far=n;const a=[1,1,1,1,-1,1],c=[1,-1,1,-1,1,-1],l=this._renderer,u=l.autoClear;l.getClearColor(Bx),l.autoClear=!1,this._backgroundBox===null&&(this._backgroundBox=new Vn(new Do,new sr({name:"PMREM.Background",side:Xt,depthWrite:!1,depthTest:!1})));const h=this._backgroundBox,d=h.material;let f=!1;const p=e.background;p?p.isColor&&(d.color.copy(p),e.background=null,f=!0):(d.color.copy(Bx),f=!0),l.setRenderTarget(i),l.clear(),f&&l.render(h,o);for(let x=0;x<6;x++){const g=x%3;g===0?(o.up.set(0,a[x],0),o.position.set(r.x,r.y,r.z),o.lookAt(r.x+c[x],r.y,r.z)):g===1?(o.up.set(0,0,a[x]),o.position.set(r.x,r.y,r.z),o.lookAt(r.x,r.y+c[x],r.z)):(o.up.set(0,a[x],0),o.position.set(r.x,r.y,r.z),o.lookAt(r.x,r.y,r.z+c[x]));const m=this._cubeSize;sa(i,g*m,x>2?m:0,m,m),l.render(e,o)}l.autoClear=u,e.background=p}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Gs||e.mapping===zs;i?this._cubemapMaterial===null&&(this._cubemapMaterial=Vx(e)):this._equirectMaterial===null&&(this._equirectMaterial=Gx(e));const r=i?this._cubemapMaterial:this._equirectMaterial;r.fragmentNode.value=e;const o=this._lodMeshes[0];o.material=r;const a=this._cubeSize;sa(t,0,0,3*a,2*a),n.setRenderTarget(t),n.render(o,Nc)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodMeshes.length;for(let r=1;r<i;r++)this._applyGGXFilter(e,r-1,r);t.autoClear=n}_applyGGXFilter(e,t,n){const i=this._renderer,r=this._pingPongRenderTarget;this._ggxMaterial===null&&(this._ggxMaterial=AL(this._lodMax,this._pingPongRenderTarget.width,this._pingPongRenderTarget.height));const o=this._ggxMaterial,a=this._lodMeshes[n];a.material=o;const c=Dh.get(o),l=n/(this._lodMeshes.length-1),u=t/(this._lodMeshes.length-1),h=Math.sqrt(l*l-u*u),d=.05+l*.95,f=h*d,{_lodMax:p}=this,x=this._sizeLods[n],g=3*x*(n>p-Lr?n-p+Lr:0),m=4*(this._cubeSize-x);e.texture.frame=(e.texture.frame||0)+1,c.envMap.value=e.texture,c.roughness.value=f,c.mipInt.value=p-t,sa(r,g,m,3*x,2*x),i.setRenderTarget(r),i.render(a,Nc),r.texture.frame=(r.texture.frame||0)+1,c.envMap.value=r.texture,c.roughness.value=0,c.mipInt.value=p-n,sa(e,g,m,3*x,2*x),i.setRenderTarget(e),i.render(a,Nc)}_blur(e,t,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",r),this._halfBlur(o,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,o,a){const c=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&ge("blur direction must be either latitudinal or longitudinal!");const u=3,h=this._lodMeshes[i];h.material=l;const d=Dh.get(l),f=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*ho-1),x=r/p,g=isFinite(r)?1+Math.floor(u*x):ho;g>ho&&te(`sigmaRadians, ${r}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${ho}`);const m=[];let b=0;for(let E=0;E<ho;++E){const C=E/x,T=Math.exp(-C*C/2);m.push(T),E===0?b+=T:E<g&&(b+=2*T)}for(let E=0;E<m.length;E++)m[E]=m[E]/b;e.texture.frame=(e.texture.frame||0)+1,d.envMap.value=e.texture,d.samples.value=g,d.weights.array=m,d.latitudinal.value=o==="latitudinal"?1:0,a&&(d.poleAxis.value=a);const{_lodMax:y}=this;d.dTheta.value=p,d.mipInt.value=y-n;const v=this._sizeLods[i],w=3*v*(i>y-Lr?i-y+Lr:0),S=4*(this._cubeSize-v);sa(t,w,S,3*v,2*v),c.setRenderTarget(t),c.render(h,Nc)}}function ML(s){const e=[],t=[],n=[];let i=s;const r=s-Lr+1+Fx.length;for(let o=0;o<r;o++){const a=Math.pow(2,i);e.push(a);let c=1/a;o>s-Lr?c=Fx[o-s+Lr-1]:o===0&&(c=0),t.push(c);const l=1/(a-2),u=-l,h=1+l,d=[u,u,h,u,h,h,u,u,h,h,u,h],f=6,p=6,x=3,g=2,m=1,b=new Float32Array(x*p*f),y=new Float32Array(g*p*f),v=new Float32Array(m*p*f);for(let S=0;S<f;S++){const E=S%3*2/3-1,C=S>2?0:-1,T=[E,C,0,E+2/3,C,0,E+2/3,C+1,0,E,C,0,E+2/3,C+1,0,E,C+1,0],M=SL[S];b.set(T,x*p*M),y.set(d,g*p*M);const I=[M,M,M,M,M,M];v.set(I,m*p*M)}const w=new bn;w.setAttribute("position",new yn(b,x)),w.setAttribute("uv",new yn(y,g)),w.setAttribute("faceIndex",new yn(v,m)),n.push(new Vn(w,null)),i>Lr&&i--}return{lodMeshes:n,sizeLods:e,sigmas:t}}function Ox(s,e){const t={magFilter:ln,minFilter:ln,generateMipmaps:!1,type:hn,format:_n,colorSpace:Gr},n=new mr(s,e,t);return n.texture.mapping=Eo,n.texture.name="PMREM.cubeUv",n.texture.isPMREMTexture=!0,n.scissorTest=!0,n}function sa(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function gd(s){const e=new fn;return e.depthTest=!1,e.depthWrite=!1,e.blending=ci,e.name=`PMREM_${s}`,e}function EL(s,e,t){const n=Zn(new Array(ho).fill(0)),i=Ge(new P(0,1,0)),r=Ge(0),o=R(ho),a=Ge(0),c=Ge(1),l=xt(),u=Ge(0),h=R(1/e),d=R(1/t),f=R(s),p={n:o,latitudinal:a,weights:n,poleAxis:i,outputDirection:md,dTheta:r,samples:c,envMap:l,mipInt:u,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:f},x=gd("blur");return x.fragmentNode=ZS({...p,latitudinal:a.equal(1)}),Dh.set(x,p),x}function AL(s,e,t){const n=xt(),i=Ge(0),r=Ge(0),o=R(1/e),a=R(1/t),c=R(s),l={envMap:n,roughness:i,mipInt:r,CUBEUV_TEXEL_WIDTH:o,CUBEUV_TEXEL_HEIGHT:a,CUBEUV_MAX_MIP:c},u=gd("ggx");return u.fragmentNode=QS({...l,N_immutable:md,GGX_SAMPLES:me(yL)}),Dh.set(u,l),u}function Vx(s){const e=gd("cubemap");return e.fragmentNode=rc(s,md),e}function Gx(s){const e=gd("equirect");return e.fragmentNode=xt(s,_g(md),0),e}const zx=new WeakMap;function wL(s){const e=Math.log2(s)-2,t=1/s;return{texelWidth:1/(3*Math.max(Math.pow(2,e),112)),texelHeight:t,maxMip:e}}function RL(s,e,t){const n=NL(e);let i=n.get(s);if((i!==void 0?i.pmremVersion:-1)!==s.pmremVersion){const o=s.image;if(s.isCubeTexture)if(PL(o))i=t.fromCubemap(s,i);else return null;else if(LL(o))i=t.fromEquirectangular(s,i);else return null;i.pmremVersion=s.pmremVersion,n.set(s,i)}return i.texture}function NL(s){let e=zx.get(s);return e===void 0&&(e=new WeakMap,zx.set(s,e)),e}class CL extends vn{static get type(){return"PMREMNode"}constructor(e,t=null,n=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=n,this._generator=null;const i=new Rn;i.isRenderTargetTexture=!0,this._texture=xt(i),this._width=Ge(0),this._height=Ge(0),this._maxMip=Ge(0),this.updateBeforeType=at.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=wL(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(e){let t=this._pmrem;const n=t?t.pmremVersion:-1,i=this._value;n!==i.pmremVersion&&(i.isPMREMTexture===!0?t=i:t=RL(i,e.renderer,this._generator),t!==null&&(this._pmrem=t,this.updateFromTexture(t)))}setup(e){this._generator===null&&(this._generator=new TL(e.renderer)),this.updateBefore(e);let t=this.uvNode;t===null&&e.context.getUV&&(t=e.context.getUV(this)),t=ag.mul(F(t.x,t.y.negate(),t.z));let n=this.levelNode;return n===null&&e.context.getTextureLevel&&(n=e.context.getTextureLevel(this)),KS(this._texture,t,n,this._width,this._height,this._maxMip)}dispose(){super.dispose(),this._generator!==null&&this._generator.dispose()}}function PL(s){if(s==null)return!1;let e=0;const t=6;for(let n=0;n<t;n++)s[n]!==void 0&&e++;return e===t}function LL(s){return s==null?!1:s.height>0}const Tg=it(CL).setParameterLength(1,3),kx=new WeakMap;class DL extends gc{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){const h=n.isTextureNode?n.value:t[n.property];let d=kx.get(h);d===void 0&&(d=Tg(h),kx.set(h,d)),n=d}const r=t.useAnisotropy===!0||t.anisotropy>0?Vv:Lt,o=n.context(Hx(Cs,r)).mul(fh),a=n.context(UL(Xr)).mul(Math.PI).mul(fh),c=Ma(o),l=Ma(a);e.context.radiance.addAssign(c),e.context.iblIrradiance.addAssign(l);const u=e.context.lightingModel.clearcoatRadiance;if(u){const h=n.context(Hx(wl,go)).mul(fh),d=Ma(h);u.addAssign(d)}}}const Hx=(s,e)=>{let t=null;return{getUV:()=>(t===null&&(t=Zt.negate().reflect(e),t=Hm(s).mix(t,e).normalize(),t=t.transformDirection(ns)),t),getTextureLevel:()=>s}},UL=s=>({getUV:()=>s,getTextureLevel:()=>R(1)}),IL=new xy;class JS extends fn{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(IL),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return t===null&&e.environmentNode&&(t=e.environmentNode),t?new DL(t):null}setupLightingModel(){return new YS}setupSpecular(){const e=Ct(F(.04),Nt.rgb,Al);$i.assign(e),Rl.assign(1)}setupVariants(){const e=this.metalnessNode?R(this.metalnessNode):qv;Al.assign(e);let t=this.roughnessNode?R(this.roughnessNode):Xv;t=bg({roughness:t}),Cs.assign(t),this.setupSpecular(),Nt.assign($e(Nt.rgb.mul(e.oneMinus()),Nt.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const FL=new _E;class BL extends JS{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(FL),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||this.clearcoatNode!==null}get useIridescence(){return this.iridescence>0||this.iridescenceNode!==null}get useSheen(){return this.sheen>0||this.sheenNode!==null}get useAnisotropy(){return this.anisotropy>0||this.anisotropyNode!==null}get useTransmission(){return this.transmission>0||this.transmissionNode!==null}get useDispersion(){return this.dispersion>0||this.dispersionNode!==null}setupSpecular(){const e=this.iorNode?R(this.iorNode):aS;tl.assign(e),$i.assign(Ct(Mi(km(tl.sub(1).div(tl.add(1))).mul($v),F(1)).mul(_p),Nt.rgb,Al)),Rl.assign(Ct(_p,1,Al))}setupLightingModel(){return new YS(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const t=this.clearcoatNode?R(this.clearcoatNode):jv,n=this.clearcoatRoughnessNode?R(this.clearcoatRoughnessNode):Kv;Eh.assign(t),wl.assign(bg({roughness:n}))}if(this.useSheen){const t=this.sheenNode?F(this.sheenNode):Jv,n=this.sheenRoughnessNode?R(this.sheenRoughnessNode):eS;mo.assign(t),Jh.assign(n)}if(this.useIridescence){const t=this.iridescenceNode?R(this.iridescenceNode):nS,n=this.iridescenceIORNode?R(this.iridescenceIORNode):iS,i=this.iridescenceThicknessNode?R(this.iridescenceThicknessNode):sS;ed.assign(t),Em.assign(n),Am.assign(i)}if(this.useAnisotropy){const t=(this.anisotropyNode?ie(this.anisotropyNode):tS).toVar();Ar.assign(t.length()),je(Ar.equal(0),()=>{t.assign(ie(1,0))}).Else(()=>{t.divAssign(ie(Ar)),Ar.assign(Ar.saturate())}),Ah.assign(Ar.pow2().mix(Cs.pow2(),1)),el.assign(xo[0].mul(t.x).add(xo[1].mul(t.y))),So.assign(xo[1].mul(t.x).sub(xo[0].mul(t.y)))}if(this.useTransmission){const t=this.transmissionNode?R(this.transmissionNode):rS,n=this.thicknessNode?R(this.thicknessNode):oS,i=this.attenuationDistanceNode?R(this.attenuationDistanceNode):cS,r=this.attenuationColorNode?F(this.attenuationColorNode):lS;if(Rh.assign(t),wm.assign(n),Rm.assign(i),Nm.assign(r),this.useDispersion){const o=this.dispersionNode?R(this.dispersionNode):mS;Cm.assign(o)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?F(this.clearcoatNormalNode):Zv}setup(e){e.context.setupClearcoatNormal=()=>Ta(this.setupClearcoatNormal(e),"NORMAL","vec3"),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}const OL=O(({normal:s,lightDirection:e,builder:t})=>{const n=s.dot(e),i=ie(n.mul(.5).add(.5),0);if(t.material.gradientMap){const r=or("gradientMap","texture").context({getUV:()=>i});return F(r.r)}else{const r=i.fwidth().mul(.5);return Ct(F(.7),F(1),ms(R(.7).sub(r.x),R(.7).add(r.x),i.x))}});class VL extends fd{direct({lightDirection:e,lightColor:t,reflectedLight:n},i){const r=OL({normal:ad,lightDirection:e,builder:i}).mul(t);n.directDiffuse.addAssign(r.mul(Lo({diffuseColor:Nt.rgb})))}indirect(e){const{ambientOcclusion:t,irradiance:n,reflectedLight:i}=e.context;i.indirectDiffuse.addAssign(n.mul(Lo({diffuseColor:Nt}))),i.indirectDiffuse.mulAssign(t)}}const GL=new bE;class zL extends fn{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(GL),this.setValues(e)}setupLightingModel(){return new VL}}const eT=O(()=>{const s=F(Zt.z,0,Zt.x.negate()).normalize(),e=Zt.cross(s);return ie(s.dot(Lt),e.dot(Lt)).mul(.495).add(.5)}).once(["NORMAL","VERTEX"])().toVar("matcapUV"),kL=new EE;class HL extends fn{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(kL),this.setValues(e)}setupVariants(e){const t=eT;let n;e.material.matcap?n=or("matcap","texture").context({getUV:()=>t}):n=F(Ct(.2,.8,t.y)),Nt.rgb.mulAssign(n.rgb)}}class WL extends vn{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:n}=this;if(this.getNodeType(e)==="vec2"){const r=t.cos(),o=t.sin();return Qh(r,o,o.negate(),r).mul(n)}else{const r=t,o=vo($e(1,0,0,0),$e(0,Ns(r.x),pi(r.x).negate(),0),$e(0,pi(r.x),Ns(r.x),0),$e(0,0,0,1)),a=vo($e(Ns(r.y),0,pi(r.y),0),$e(0,1,0,0),$e(pi(r.y).negate(),0,Ns(r.y),0),$e(0,0,0,1)),c=vo($e(Ns(r.z),pi(r.z).negate(),0,0),$e(pi(r.z),Ns(r.z),0,0),$e(0,0,1,0),$e(0,0,0,1));return o.mul(a).mul(c).mul($e(n,1)).xyz}}}const Kl=it(WL).setParameterLength(2),$L=new D3;class tT extends fn{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.transparent=!0,this.setDefaultValues($L),this.setValues(e)}setupPositionView(e){const{object:t,camera:n}=e,{positionNode:i,rotationNode:r,scaleNode:o,sizeAttenuation:a}=this,c=Bo.mul(F(i||0));let l=ie(qi[0].xyz.length(),qi[1].xyz.length());o!==null&&(l=l.mul(ie(o))),n.isPerspectiveCamera&&a===!1&&(l=l.mul(c.z.negate()));let u=Yl.xy;if(t.center&&t.center.isVector2===!0){const f=BC("center","vec2",t);u=u.sub(f.sub(.5))}u=u.mul(l);const h=R(r||Qv),d=Kl(u,h);return $e(c.xy.add(d),c.zw)}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}const XL=new sy,qL=new oe;class YL extends tT{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.sizeNode=null,this.isPointsNodeMaterial=!0,this.setDefaultValues(XL),this.setValues(e)}setupPositionView(){const{positionNode:e}=this;return Bo.mul(F(e||gn)).xyz}setupVertexSprite(e){const{material:t,camera:n}=e,{rotationNode:i,scaleNode:r,sizeNode:o,sizeAttenuation:a}=this;let c=super.setupVertex(e);if(t.isNodeMaterial!==!0)return c;let l=o!==null?ie(o):pS;l=l.mul(fv),n.isPerspectiveCamera&&a===!0&&(l=l.mul(jL.div(xn.z.negate()))),r&&r.isNode&&(l=l.mul(ie(r)));let u=Yl.xy;if(i&&i.isNode){const h=R(i);u=Kl(u,h)}return u=u.mul(l),u=u.div(ig.div(2)),u=u.mul(c.w),c=c.add($e(u,0,0)),c}setupVertex(e){return e.object.isPoints?super.setupVertex(e):this.setupVertexSprite(e)}get alphaToCoverage(){return this._useAlphaToCoverage}set alphaToCoverage(e){this._useAlphaToCoverage!==e&&(this._useAlphaToCoverage=e,this.needsUpdate=!0)}}const jL=Ge(1).onFrameUpdate(function({renderer:s}){const e=s.getSize(qL);this.value=.5*e.y});class KL extends fd{constructor(){super(),this.shadowNode=R(1).toVar("shadowMask")}direct({lightNode:e}){e.shadowNode!==null&&this.shadowNode.mulAssign(e.shadowNode)}finish({context:e}){Nt.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(Nt.rgb)}}const ZL=new xE;class QL extends fn{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.transparent=!0,this.setDefaultValues(ZL),this.setValues(e)}setupLightingModel(){return new KL}}lr("vec3");lr("vec3");lr("vec3");class JL{constructor(e,t,n){this.renderer=e,this.nodes=t,this.info=n,this._context=typeof self<"u"?self:null,this._animationLoop=null,this._requestId=null}start(){const e=(t,n)=>{this._requestId=this._context.requestAnimationFrame(e),this.info.autoReset===!0&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,this.renderer._inspector.begin(),this._animationLoop!==null&&this._animationLoop(t,n),this.renderer._inspector.finish()};e()}stop(){this._context.cancelAnimationFrame(this._requestId),this._requestId=null}getAnimationLoop(){return this._animationLoop}setAnimationLoop(e){this._animationLoop=e}getContext(){return this._context}setContext(e){this._context=e}dispose(){this.stop()}}class gs{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let n=0;n<e.length-1;n++)if(t=t.get(e[n]),t===void 0)return;return t.get(e[e.length-1])}set(e,t){let n=this.weakMap;for(let i=0;i<e.length-1;i++){const r=e[i];n.has(r)===!1&&n.set(r,new WeakMap),n=n.get(r)}return n.set(e[e.length-1],t),this}delete(e){let t=this.weakMap;for(let n=0;n<e.length-1;n++)if(t=t.get(e[n]),t===void 0)return!1;return t.delete(e[e.length-1])}}let eD=0;function tD(s){const e=Object.keys(s);let t=Object.getPrototypeOf(s);for(;t;){const n=Object.getOwnPropertyDescriptors(t);for(const i in n)if(n[i]!==void 0){const r=n[i];r&&typeof r.get=="function"&&e.push(i)}t=Object.getPrototypeOf(t)}return e}class nD{constructor(e,t,n,i,r,o,a,c,l,u){this.id=eD++,this._nodes=e,this._geometries=t,this.renderer=n,this.object=i,this.material=r,this.scene=o,this.camera=a,this.lightsNode=c,this.context=l,this.geometry=i.geometry,this.version=r.version,this.drawRange=null,this.attributes=null,this.attributesId=null,this.pipeline=null,this.group=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.clippingContext=u,this.clippingContextCacheKey=u!==null?u.cacheKey:"",this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.onGeometryDispose=()=>{this.attributes=null,this.attributesId=null},this.material.addEventListener("dispose",this.onMaterialDispose),this.geometry.addEventListener("dispose",this.onGeometryDispose)}updateClipping(e){this.clippingContext=e}get clippingNeedsUpdate(){return this.clippingContext===null||this.clippingContext.cacheKey===this.clippingContextCacheKey?!1:(this.clippingContextCacheKey=this.clippingContext.cacheKey,!0)}get hardwareClippingPlanes(){return this.material.hardwareClipping===!0?this.clippingContext.unionClippingCount:0}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().observer)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getBindingGroup(e){for(const t of this.getBindings())if(t.name===e)return t}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}setGeometry(e){this.geometry=e,this.attributes=null,this.attributesId=null}getAttributes(){if(this.attributes!==null)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,n=[],i=new Set,r={};for(const o of e){let a;if(o.node&&o.node.attribute?a=o.node.attribute:(a=t.getAttribute(o.name),r[o.name]=a.version),a===void 0)continue;n.push(a);const c=a.isInterleavedBufferAttribute?a.data:a;i.add(c)}return this.attributes=n,this.attributesId=r,this.vertexBuffers=Array.from(i.values()),n}getVertexBuffers(){return this.vertexBuffers===null&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:n,group:i,drawRange:r}=this,o=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),a=this.getIndex(),c=a!==null;let l=1;if(n.isInstancedBufferGeometry===!0?l=n.instanceCount:e.count!==void 0&&(l=Math.max(0,e.count)),l===0)return null;if(o.instanceCount=l,e.isBatchedMesh===!0)return o;let u=1;t.wireframe===!0&&!e.isPoints&&!e.isLineSegments&&!e.isLine&&!e.isLineLoop&&(u=2);let h=r.start*u,d=(r.start+r.count)*u;i!==null&&(h=Math.max(h,i.start*u),d=Math.min(d,(i.start+i.count)*u));const f=n.attributes.position;let p=1/0;c?p=a.count:f!=null&&(p=f.count),h=Math.max(h,0),d=Math.min(d,p);const x=d-h;return x<0||x===1/0?null:(o.vertexCount=x,o.firstVertex=h,o)}getGeometryCacheKey(){const{geometry:e}=this;let t="";for(const n of Object.keys(e.attributes).sort()){const i=e.attributes[n];t+=n+",",i.data&&(t+=i.data.stride+","),i.offset&&(t+=i.offset+","),i.itemSize&&(t+=i.itemSize+","),i.normalized&&(t+="n,")}for(const n of Object.keys(e.morphAttributes).sort()){const i=e.morphAttributes[n];t+="morph-"+n+",";for(let r=0,o=i.length;r<o;r++){const a=i[r];t+=a.id+","}}return e.index&&(t+="index,"),t}getMaterialCacheKey(){const{object:e,material:t,renderer:n}=this;let i=t.customProgramCacheKey();for(const r of tD(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(r))continue;const o=t[r];let a;if(o!==null){const c=typeof o;c==="number"?a=o!==0?"1":"0":c==="object"?(a="{",o.isTexture&&(a+=o.mapping,n.backend.isWebGPUBackend===!0&&(a+=o.magFilter,a+=o.minFilter,a+=o.wrapS,a+=o.wrapT,a+=o.wrapR)),a+="}"):a=String(o)}else a=String(o);i+=a+","}return i+=this.clippingContextCacheKey+",",e.geometry&&(i+=this.getGeometryCacheKey()),e.skeleton&&(i+=e.skeleton.bones.length+","),e.isBatchedMesh&&(i+=e._matricesTexture.uuid+",",e._colorsTexture!==null&&(i+=e._colorsTexture.uuid+",")),(e.isInstancedMesh||e.count>1||Array.isArray(e.morphTargetInfluences))&&(i+=e.uuid+","),i+=e.receiveShadow+",",zl(i)}get needsGeometryUpdate(){if(this.geometry.id!==this.object.geometry.id)return!0;if(this.attributes!==null){const e=this.attributesId;for(const t in e){const n=this.geometry.getAttribute(t);if(n===void 0||e[t]!==n.id)return!0}}return!1}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=0;return this.material.isShadowPassMaterial!==!0&&(e=this._nodes.getCacheKey(this.scene,this.lightsNode)),this.camera.isArrayCamera&&(e=Qc(e,this.camera.cameras.length)),this.object.receiveShadow&&(e=Qc(e,1)),e=Qc(e,this.camera.id),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.geometry.removeEventListener("dispose",this.onGeometryDispose),this.onDispose()}}const io=[];class iD{constructor(e,t,n,i,r,o){this.renderer=e,this.nodes=t,this.geometries=n,this.pipelines=i,this.bindings=r,this.info=o,this.chainMaps={}}get(e,t,n,i,r,o,a,c){const l=this.getChainMap(c);io[0]=e,io[1]=t,io[2]=o,io[3]=r;let u=l.get(io);return u===void 0?(u=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,n,i,r,o,a,c),l.set(io,u)):(u.updateClipping(a),u.needsGeometryUpdate&&u.setGeometry(e.geometry),(u.version!==t.version||u.needsUpdate)&&(u.initialCacheKey!==u.getCacheKey()?(u.dispose(),u=this.get(e,t,n,i,r,o,a,c)):u.version=t.version)),io.length=0,u}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new gs)}dispose(){this.chainMaps={}}createRenderObject(e,t,n,i,r,o,a,c,l,u,h){const d=this.getChainMap(h),f=new nD(e,t,n,i,r,o,a,c,l,u);return f.onDispose=()=>{this.pipelines.delete(f),this.bindings.deleteForRender(f),this.nodes.delete(f),d.delete(f.getChainArray())},f}}class qr{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}delete(e){let t=null;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const Yi={VERTEX:1,INDEX:2,STORAGE:3,INDIRECT:4},Nr=16,sD=211,rD=212;class oD extends qr{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return t!==null&&this.backend.destroyAttribute(e),t}update(e,t){const n=this.get(e);if(n.version===void 0)t===Yi.VERTEX?this.backend.createAttribute(e):t===Yi.INDEX?this.backend.createIndexAttribute(e):t===Yi.STORAGE?this.backend.createStorageAttribute(e):t===Yi.INDIRECT&&this.backend.createIndirectStorageAttribute(e),n.version=this._getBufferAttribute(e).version;else{const i=this._getBufferAttribute(e);(n.version<i.version||i.usage===ga)&&(this.backend.updateAttribute(e),n.version=i.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function nT(s){return s.index!==null?s.index.version:s.attributes.position.version}function Wx(s){const e=[],t=s.index,n=s.attributes.position;if(t!==null){const r=t.array;for(let o=0,a=r.length;o<a;o+=3){const c=r[o+0],l=r[o+1],u=r[o+2];e.push(c,l,l,u,u,c)}}else{const r=n.array;for(let o=0,a=r.length/3-1;o<a;o+=3){const c=o+0,l=o+1,u=o+2;e.push(c,l,l,u,u,c)}}const i=new(Yp(e)?em:Jp)(e,1);return i.version=nT(s),i}class aD extends qr{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap,this._geometryDisposeListeners=new Map}has(e){const t=e.geometry;return super.has(t)&&this.get(t).initialized===!0}updateForRender(e){this.has(e)===!1&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry,n=this.get(t);n.initialized=!0,this.info.memory.geometries++;const i=()=>{this.info.memory.geometries--;const r=t.index,o=e.getAttributes();r!==null&&this.attributes.delete(r);for(const c of o)this.attributes.delete(c);const a=this.wireframes.get(t);a!==void 0&&this.attributes.delete(a),t.removeEventListener("dispose",i),this._geometryDisposeListeners.delete(t)};t.addEventListener("dispose",i),this._geometryDisposeListeners.set(t,i)}updateAttributes(e){const t=e.getAttributes();for(const r of t)r.isStorageBufferAttribute||r.isStorageInstancedBufferAttribute?this.updateAttribute(r,Yi.STORAGE):this.updateAttribute(r,Yi.VERTEX);const n=this.getIndex(e);n!==null&&this.updateAttribute(n,Yi.INDEX);const i=e.geometry.indirect;i!==null&&this.updateAttribute(i,Yi.INDIRECT)}updateAttribute(e,t){const n=this.info.render.calls;e.isInterleavedBufferAttribute?this.attributeCall.get(e)===void 0?(this.attributes.update(e,t),this.attributeCall.set(e,n)):this.attributeCall.get(e.data)!==n&&(this.attributes.update(e,t),this.attributeCall.set(e.data,n),this.attributeCall.set(e,n)):this.attributeCall.get(e)!==n&&(this.attributes.update(e,t),this.attributeCall.set(e,n))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:t,material:n}=e;let i=t.index;if(n.wireframe===!0){const r=this.wireframes;let o=r.get(t);o===void 0?(o=Wx(t),r.set(t,o)):o.version!==nT(t)&&(this.attributes.delete(o),o=Wx(t),r.set(t,o)),i=o}return i}dispose(){for(const[e,t]of this._geometryDisposeListeners.entries())e.removeEventListener("dispose",t);this._geometryDisposeListeners.clear()}}class cD{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0},this.compute={calls:0,frameCalls:0,timestamp:0},this.memory={geometries:0,textures:0}}update(e,t,n){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=n*(t/3):e.isPoints?this.render.points+=n*t:e.isLineSegments?this.render.lines+=n*(t/2):e.isLine?this.render.lines+=n*(t-1):ge("WebGPUInfo: Unknown object type.")}reset(){this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class iT{constructor(e){this.cacheKey=e,this.usedTimes=0}}class lD extends iT{constructor(e,t,n){super(e),this.vertexProgram=t,this.fragmentProgram=n}}class uD extends iT{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let hD=0;class Sf{constructor(e,t,n,i=null,r=null){this.id=hD++,this.code=e,this.stage=t,this.name=n,this.transforms=i,this.attributes=r,this.usedTimes=0}}class dD extends qr{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:n}=this,i=this.get(e);if(this._needsComputeUpdate(e)){const r=i.pipeline;r&&(r.usedTimes--,r.computeProgram.usedTimes--);const o=this.nodes.getForCompute(e);let a=this.programs.compute.get(o.computeShader);a===void 0&&(r&&r.computeProgram.usedTimes===0&&this._releaseProgram(r.computeProgram),a=new Sf(o.computeShader,"compute",e.name,o.transforms,o.nodeAttributes),this.programs.compute.set(o.computeShader,a),n.createProgram(a));const c=this._getComputeCacheKey(e,a);let l=this.caches.get(c);l===void 0&&(r&&r.usedTimes===0&&this._releasePipeline(r),l=this._getComputePipeline(e,a,c,t)),l.usedTimes++,a.usedTimes++,i.version=e.version,i.pipeline=l}return i.pipeline}getForRender(e,t=null){const{backend:n}=this,i=this.get(e);if(this._needsRenderUpdate(e)){const r=i.pipeline;r&&(r.usedTimes--,r.vertexProgram.usedTimes--,r.fragmentProgram.usedTimes--);const o=e.getNodeBuilderState(),a=e.material?e.material.name:"";let c=this.programs.vertex.get(o.vertexShader);c===void 0&&(r&&r.vertexProgram.usedTimes===0&&this._releaseProgram(r.vertexProgram),c=new Sf(o.vertexShader,"vertex",a),this.programs.vertex.set(o.vertexShader,c),n.createProgram(c));let l=this.programs.fragment.get(o.fragmentShader);l===void 0&&(r&&r.fragmentProgram.usedTimes===0&&this._releaseProgram(r.fragmentProgram),l=new Sf(o.fragmentShader,"fragment",a),this.programs.fragment.set(o.fragmentShader,l),n.createProgram(l));const u=this._getRenderCacheKey(e,c,l);let h=this.caches.get(u);h===void 0?(r&&r.usedTimes===0&&this._releasePipeline(r),h=this._getRenderPipeline(e,c,l,u,t)):e.pipeline=h,h.usedTimes++,c.usedTimes++,l.usedTimes++,i.pipeline=h}return i.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,t.usedTimes===0&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,t.computeProgram.usedTimes===0&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,t.vertexProgram.usedTimes===0&&this._releaseProgram(t.vertexProgram),t.fragmentProgram.usedTimes===0&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,n,i){n=n||this._getComputeCacheKey(e,t);let r=this.caches.get(n);return r===void 0&&(r=new uD(n,t),this.caches.set(n,r),this.backend.createComputePipeline(r,i)),r}_getRenderPipeline(e,t,n,i,r){i=i||this._getRenderCacheKey(e,t,n);let o=this.caches.get(i);return o===void 0&&(o=new lD(i,t,n),this.caches.set(i,o),e.pipeline=o,this.backend.createRenderPipeline(e,r)),o}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,n){return t.id+","+n.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,n=e.stage;this.programs[n].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return t.pipeline===void 0||t.version!==e.version}_needsRenderUpdate(e){return this.get(e).pipeline===void 0||this.backend.needsRenderUpdate(e)}}class fD extends qr{constructor(e,t,n,i,r,o){super(),this.backend=e,this.textures=n,this.pipelines=r,this.attributes=i,this.nodes=t,this.info=o,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const n of t){const i=this.get(n);i.bindGroup===void 0&&(this._init(n),this.backend.createBindings(n,t,0),i.bindGroup=n)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const n of t){const i=this.get(n);i.bindGroup===void 0&&(this._init(n),this.backend.createBindings(n,t,0),i.bindGroup=n)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}deleteForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const n of t)this.delete(n)}deleteForRender(e){const t=e.getBindings();for(const n of t)this.delete(n)}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isSampler)this.textures.updateSampler(t.texture);else if(t.isStorageBuffer){const n=t.attribute,i=n.isIndirectStorageBufferAttribute?Yi.INDIRECT:Yi.STORAGE;this.attributes.update(n,i)}}_update(e,t){const{backend:n}=this;let i=!1,r=!0,o=0,a=0;for(const c of e.bindings)if(!(c.isNodeUniformsGroup&&this.nodes.updateGroup(c)===!1)){if(c.isStorageBuffer){const l=c.attribute,u=l.isIndirectStorageBufferAttribute?Yi.INDIRECT:Yi.STORAGE;this.attributes.update(l,u)}if(c.isUniformBuffer)c.update()&&n.updateBinding(c);else if(c.isSampledTexture){const l=c.update(),u=c.texture,h=this.textures.get(u);if(l&&(this.textures.updateTexture(u),c.generation!==h.generation&&(c.generation=h.generation,i=!0,r=!1)),n.get(u).externalTexture!==void 0||h.isDefaultTexture?r=!1:(o=o*10+u.id,a+=u.version),u.isStorageTexture===!0&&u.mipmapsAutoUpdate===!0){const f=this.get(u);c.store===!0?f.needsMipmap=!0:this.textures.needsMipmaps(u)&&f.needsMipmap===!0&&(this.backend.generateMipmaps(u),f.needsMipmap=!1)}}else if(c.isSampler&&c.update()){const u=this.textures.updateSampler(c.texture);c.samplerKey!==u&&(c.samplerKey=u,i=!0,r=!1)}}i===!0&&this.backend.updateBindings(e,t,r?o:0,a)}}function pD(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?s.z-e.z:s.id-e.id}function $x(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function Xx(s){return(s.transmission>0||s.transmissionNode&&s.transmissionNode.isNode)&&s.side===jn&&s.forceSinglePass===!1}class mD{constructor(e,t,n){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(t,n),this.lightsArray=[],this.scene=t,this.camera=n,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,n,i,r,o,a){let c=this.renderItems[this.renderItemsIndex];return c===void 0?(c={id:e.id,object:e,geometry:t,material:n,groupOrder:i,renderOrder:e.renderOrder,z:r,group:o,clippingContext:a},this.renderItems[this.renderItemsIndex]=c):(c.id=e.id,c.object=e,c.geometry=t,c.material=n,c.groupOrder=i,c.renderOrder=e.renderOrder,c.z=r,c.group=o,c.clippingContext=a),this.renderItemsIndex++,c}push(e,t,n,i,r,o,a){const c=this.getNextRenderItem(e,t,n,i,r,o,a);e.occlusionTest===!0&&this.occlusionQueryCount++,n.transparent===!0||n.transmission>0||n.transmissionNode&&n.transmissionNode.isNode||n.backdropNode&&n.backdropNode.isNode?(Xx(n)&&this.transparentDoublePass.push(c),this.transparent.push(c)):this.opaque.push(c)}unshift(e,t,n,i,r,o,a){const c=this.getNextRenderItem(e,t,n,i,r,o,a);n.transparent===!0||n.transmission>0||n.transmissionNode&&n.transmissionNode.isNode||n.backdropNode&&n.backdropNode.isNode?(Xx(n)&&this.transparentDoublePass.unshift(c),this.transparent.unshift(c)):this.opaque.unshift(c)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||pD),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(t||$x),this.transparent.length>1&&this.transparent.sort(t||$x)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const n=this.renderItems[e];if(n.id===null)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.groupOrder=null,n.renderOrder=null,n.z=null,n.group=null,n.clippingContext=null}}}const Cc=[];class gD{constructor(e){this.lighting=e,this.lists=new gs}get(e,t){const n=this.lists;Cc[0]=e,Cc[1]=t;let i=n.get(Cc);return i===void 0&&(i=new mD(this.lighting,e,t),n.set(Cc,i)),Cc.length=0,i}dispose(){this.lists=new gs}}let xD=0;class _D{constructor(){this.id=xD++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new Ke,this.scissor=!1,this.scissorValue=new Ke,this.renderTarget=null,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.activeMipmapLevel=0,this.sampleCount=1,this.width=0,this.height=0,this.occlusionQueryCount=0,this.clippingContext=null,this.isRenderContext=!0}getCacheKey(){return sT(this)}}function sT(s){const{textures:e,activeCubeFace:t,activeMipmapLevel:n}=s,i=[t,n];for(const r of e)i.push(r.id);return dc(i)}const Pc=[],yD=new nm,bD=new tm;class vD{constructor(){this.chainMaps={}}get(e,t,n=null){Pc[0]=e,Pc[1]=t;let i;if(n===null)i="default";else{const a=n.texture.format;i=`${n.textures.length}:${a}:${n.samples}:${n.depthBuffer}:${n.stencilBuffer}`}const r=this._getChainMap(i);let o=r.get(Pc);return o===void 0&&(o=new _D,r.set(Pc,o)),Pc.length=0,n!==null&&(o.sampleCount=n.samples===0?1:n.samples),o}getForClear(e=null){return this.get(yD,bD,e)}_getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new gs)}dispose(){this.chainMaps={}}}const SD=new P;class TD extends qr{constructor(e,t,n){super(),this.renderer=e,this.backend=t,this.info=n}updateRenderTarget(e,t=0){const n=this.get(e),i=e.samples===0?1:e.samples,r=n.depthTextureMips||(n.depthTextureMips={}),o=e.textures,a=this.getSize(o[0]),c=a.width>>t,l=a.height>>t;let u=e.depthTexture||r[t];const h=e.depthBuffer===!0||e.stencilBuffer===!0;let d=!1;u===void 0&&h&&(u=new Vi,u.format=e.stencilBuffer?Oi:Bi,u.type=e.stencilBuffer?Fi:Kt,u.image.width=c,u.image.height=l,u.image.depth=a.depth,u.renderTarget=e,u.isArrayTexture=e.multiview===!0&&a.depth>1,r[t]=u),(n.width!==a.width||a.height!==n.height)&&(d=!0,u&&(u.needsUpdate=!0,u.image.width=c,u.image.height=l,u.image.depth=u.isArrayTexture?u.image.depth:1)),n.width=a.width,n.height=a.height,n.textures=o,n.depthTexture=u||null,n.depth=e.depthBuffer,n.stencil=e.stencilBuffer,n.renderTarget=e,n.sampleCount!==i&&(d=!0,u&&(u.needsUpdate=!0),n.sampleCount=i);const f={sampleCount:i};if(e.isXRRenderTarget!==!0){for(let p=0;p<o.length;p++){const x=o[p];d&&(x.needsUpdate=!0),this.updateTexture(x,f)}u&&this.updateTexture(u,f)}n.initialized!==!0&&(n.initialized=!0,n.onDispose=()=>{this._destroyRenderTarget(e)},e.addEventListener("dispose",n.onDispose))}updateTexture(e,t={}){const n=this.get(e);if(n.initialized===!0&&n.version===e.version)return;const i=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,r=this.backend;if(i&&n.initialized===!0&&r.destroyTexture(e),e.isFramebufferTexture){const l=this.renderer.getRenderTarget();l?e.type=l.texture.type:e.type=un}const{width:o,height:a,depth:c}=this.getSize(e);if(t.width=o,t.height=a,t.depth=c,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,o,a):1,e.isCubeTexture&&e.mipmaps.length>0&&t.levels++,i||e.isStorageTexture===!0||e.isExternalTexture===!0)r.createTexture(e,t),n.generation=e.version;else if(e.version>0){const l=e.image;if(l===void 0)te("Renderer: Texture marked for update but image is undefined.");else if(l.complete===!1)te("Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const h=[];for(const d of e.images)h.push(d);t.images=h}else t.image=l;(n.isDefaultTexture===void 0||n.isDefaultTexture===!0)&&(r.createTexture(e,t),n.isDefaultTexture=!1,n.generation=e.version),e.source.dataReady===!0&&r.updateTexture(e,t);const u=e.isStorageTexture===!0&&e.mipmapsAutoUpdate===!1;t.needsMipmaps&&e.mipmaps.length===0&&!u&&r.generateMipmaps(e),e.onUpdate&&e.onUpdate(e)}}else r.createDefaultTexture(e),n.isDefaultTexture=!0,n.generation=e.version;n.initialized!==!0&&(n.initialized=!0,n.generation=e.version,this.info.memory.textures++,e.isVideoTexture&&et.getTransfer(e.colorSpace)!==Ue&&te("WebGPURenderer: Video textures must use a color space with a sRGB transfer function, e.g. SRGBColorSpace."),n.onDispose=()=>{this._destroyTexture(e)},e.addEventListener("dispose",n.onDispose)),n.version=e.version}updateSampler(e){return this.backend.updateSampler(e)}getSize(e,t=SD){let n=e.images?e.images[0]:e.image;return n?(n.image!==void 0&&(n=n.image),typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement?(t.width=n.videoWidth||1,t.height=n.videoHeight||1,t.depth=1):typeof VideoFrame<"u"&&n instanceof VideoFrame?(t.width=n.displayWidth||1,t.height=n.displayHeight||1,t.depth=1):(t.width=n.width||1,t.height=n.height||1,t.depth=e.isCubeTexture?6:n.depth||1)):t.width=t.height=t.depth=1,t}getMipLevels(e,t,n){let i;return e.mipmaps.length>0?i=e.mipmaps.length:e.isCompressedTexture===!0?i=1:i=Math.floor(Math.log2(Math.max(t,n)))+1,i}needsMipmaps(e){return e.generateMipmaps===!0||e.mipmaps.length>0}_destroyRenderTarget(e){if(this.has(e)===!0){const t=this.get(e),n=t.textures,i=t.depthTexture;e.removeEventListener("dispose",t.onDispose);for(let r=0;r<n.length;r++)this._destroyTexture(n[r]);i&&this._destroyTexture(i),this.delete(e),this.backend.delete(e)}}_destroyTexture(e){if(this.has(e)===!0){const t=this.get(e);e.removeEventListener("dispose",t.onDispose);const n=t.isDefaultTexture;this.backend.destroyTexture(e,n),this.delete(e),this.info.memory.textures--}}}class Mg extends Ze{constructor(e,t,n,i=1){super(e,t,n),this.a=i}set(e,t,n,i=1){return this.a=i,super.set(e,t,n)}copy(e){return e.a!==void 0&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class rT extends Bt{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getMemberType(e,t){const n=this.getNodeType(e),i=e.getStructTypeNode(n);let r;return i!==null?r=i.getMemberType(e,t):(ge(`TSL: Member "${t}" not found in struct "${n}".`),r="float"),r}getHash(){return this.uuid}generate(){return this.name}}const MD=(s,e)=>ee(new rT(s,e));class ED extends De{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this._expressionNode=null,this.isStackNode=!0}getElementType(e){return this.hasOutput?this.outputNode.getElementType(e):"void"}getNodeType(e){return this.hasOutput?this.outputNode.getNodeType(e):"void"}getMemberType(e,t){return this.hasOutput?this.outputNode.getMemberType(e,t):"void"}addToStack(e){return e.isNode!==!0?(ge("TSL: Invalid node added to stack."),this):(this.nodes.push(e),this)}If(e,t){const n=new xa(t);return this._currentCond=wn(e,n),this.addToStack(this._currentCond)}ElseIf(e,t){const n=new xa(t),i=wn(e,n);return this._currentCond.elseNode=i,this._currentCond=i,this}Else(e){return this._currentCond.elseNode=new xa(e),this}Switch(e){return this._expressionNode=ee(e),this}Case(...e){const t=[];if(e.length>=2)for(let a=0;a<e.length-1;a++)t.push(this._expressionNode.equal(ee(e[a])));else ge("TSL: Invalid parameter length. Case() requires at least two parameters.");const n=e[e.length-1],i=new xa(n);let r=t[0];for(let a=1;a<t.length;a++)r=r.or(t[a]);const o=wn(r,i);return this._currentCond===null?(this._currentCond=o,this.addToStack(this._currentCond)):(this._currentCond.elseNode=o,this._currentCond=o,this)}Default(e){return this.Else(e),this}setup(e){const t=e.getNodeProperties(this);let n=0;for(const i of this.getChildren())i.isVarNode&&i.intent===!0&&i.isAssign(e)!==!0||(t["node"+n++]=i);return t.outputNode||null}get hasOutput(){return this.outputNode&&this.outputNode.isNode}build(e,...t){const n=Tm();Ml(this),e.setActiveStack(this);const i=e.buildStage;for(const o of this.nodes)if(!(o.isVarNode&&o.intent===!0&&o.isAssign(e)!==!0)){if(i==="setup")o.build(e);else if(i==="analyze")o.build(e,this);else if(i==="generate"){const a=e.getDataFromNode(o,"any").stages,c=a&&a[e.shaderStage];if(o.isVarNode&&c&&c.length===1&&c[0]&&c[0].isStackNode)continue;o.build(e,"void")}}let r;return this.hasOutput?r=this.outputNode.build(e,...t):r=super.build(e,...t),Ml(n),e.removeActiveStack(this),r}}const mh=it(ED).setParameterLength(0,1);function AD(s){return Object.entries(s).map(([e,t])=>typeof t=="string"?{name:e,type:t,atomic:!1}:{name:e,type:t.type,atomic:t.atomic||!1})}class wD extends De{static get type(){return"StructTypeNode"}constructor(e,t=null){super("struct"),this.membersLayout=AD(e),this.name=t,this.isStructLayoutNode=!0}getLength(){const t=Float32Array.BYTES_PER_ELEMENT;let n=0;for(const i of this.membersLayout){const r=i.type,o=XN(r)*t,a=qN(r),c=n%8,l=c%a,u=c+l;n+=l,u!==0&&8-u<o&&(n+=8-u),n+=o}return Math.ceil(n/8)*8/t}getMemberType(e,t){const n=this.membersLayout.find(i=>i.name===t);return n?n.type:"void"}getNodeType(e){return e.getStructTypeFromNode(this,this.membersLayout,this.name).name}setup(e){e.getStructTypeFromNode(this,this.membersLayout,this.name),e.addInclude(this)}generate(e){return this.getNodeType(e)}}class RD extends De{static get type(){return"StructNode"}constructor(e,t){super("vec3"),this.structTypeNode=e,this.values=t,this.isStructNode=!0}getNodeType(e){return this.structTypeNode.getNodeType(e)}getMemberType(e,t){return this.structTypeNode.getMemberType(e,t)}generate(e){const t=e.getVarFromNode(this),n=t.type,i=e.getPropertyName(t);return e.addLineFlowCode(`${i} = ${e.generateStruct(n,this.structTypeNode.membersLayout,this.values)}`,this),t.name}}const ND=(s,e=null)=>{const t=new wD(s,e),n=(...i)=>{let r=null;if(i.length>0)if(i[0].isNode){r={};const o=Object.keys(s);for(let a=0;a<i.length;a++)r[o[a]]=i[a]}else r=i[0];return ee(new RD(t,r))};return n.layout=t,n.isStruct=!0,n};class oT extends De{static get type(){return"OutputStructNode"}constructor(...e){super(),this.members=e,this.isOutputStructNode=!0}getNodeType(e){const t=e.getNodeProperties(this);if(t.membersLayout===void 0){const n=this.members,i=[];for(let r=0;r<n.length;r++){const o="m"+r,a=n[r].getNodeType(e);i.push({name:o,type:a,index:r})}t.membersLayout=i,t.structType=e.getOutputStructTypeFromNode(this,t.membersLayout)}return t.structType.name}generate(e){const t=e.getOutputStructName(),n=this.members,i=t!==""?t+".":"";for(let r=0;r<n.length;r++){const o=n[r].build(e);e.addLineFlowCode(`${i}m${r} = ${o}`,this)}return t}}const CD=it(oT);function aT(s,e){for(let t=0;t<s.length;t++)if(s[t].name===e)return t;return-1}class PD extends oT{static get type(){return"MRTNode"}constructor(e){super(),this.outputNodes=e,this.isMRTNode=!0}has(e){return this.outputNodes[e]!==void 0}get(e){return this.outputNodes[e]}merge(e){const t={...this.outputNodes,...e.outputNodes};return cT(t)}setup(e){const t=this.outputNodes,n=e.renderer.getRenderTarget(),i=[],r=n.textures;for(const o in t){const a=aT(r,o);i[a]=$e(t[o])}return this.members=i,super.setup(e)}}const cT=it(PD);class Zl extends vn{static get type(){return"BitcastNode"}constructor(e,t,n=null){super(),this.valueNode=e,this.conversionType=t,this.inputType=n,this.isBitcastNode=!0}getNodeType(e){if(this.inputType!==null){const t=this.valueNode.getNodeType(e),n=e.getTypeLength(t);return e.getTypeFromLength(n,this.conversionType)}return this.conversionType}generate(e){const t=this.getNodeType(e);let n="";if(this.inputType!==null){const i=this.valueNode.getNodeType(e);n=e.getTypeLength(i)===1?this.inputType:e.changeComponentType(i,this.inputType)}else n=this.valueNode.getNodeType(e);return`${e.getBitcastMethod(t,n)}( ${this.valueNode.build(e,n)} )`}}const LD=xe(Zl).setParameterLength(2),DD=s=>new Zl(s,"int","float"),UD=s=>new Zl(s,"uint","float"),ID=s=>new Zl(s,"float","int"),FD=s=>new Zl(s,"float","uint"),BD=O(([s])=>{const e=s.toUint().mul(747796405).add(2891336453),t=e.shiftRight(e.shiftRight(28).add(4)).bitXor(e).mul(277803737);return t.shiftRight(22).bitXor(t).toFloat().mul(1/2**32)}),Sp=(s,e)=>Xi(st(4,s.mul(Tt(1,s))),e),OD=(s,e)=>s.lessThan(.5)?Sp(s.mul(2),e).div(2):Tt(1,Sp(st(Tt(1,s),2),e).div(2)),VD=(s,e,t)=>Xi(Gi(Xi(s,e),Mn(Xi(s,e),Xi(Tt(1,s),t))),1/e),GD=(s,e)=>pi(Nh.mul(e.mul(s).sub(1))).div(Nh.mul(e.mul(s).sub(1))),ir=O(([s])=>s.fract().sub(.5).abs()).setLayout({name:"tri",type:"float",inputs:[{name:"x",type:"float"}]}),zD=O(([s])=>F(ir(s.z.add(ir(s.y.mul(1)))),ir(s.z.add(ir(s.x.mul(1)))),ir(s.y.add(ir(s.x.mul(1)))))).setLayout({name:"tri3",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),kD=O(([s,e,t])=>{const n=F(s).toVar(),i=R(1.4).toVar(),r=R(0).toVar(),o=F(n).toVar();return Ft({start:R(0),end:R(3),type:"float",condition:"<="},()=>{const a=F(zD(o.mul(2))).toVar();n.addAssign(a.add(t.mul(R(.1).mul(e)))),o.mulAssign(1.8),i.mulAssign(1.5),n.mulAssign(1.2);const c=R(ir(n.z.add(ir(n.x.add(ir(n.y)))))).toVar();r.addAssign(c.div(i)),o.addAssign(.14)}),r}).setLayout({name:"triNoise3D",type:"float",inputs:[{name:"position",type:"vec3"},{name:"speed",type:"float"},{name:"time",type:"float"}]});class HD extends De{static get type(){return"FunctionOverloadingNode"}constructor(e=[],...t){super(),this.functionNodes=e,this.parametersNodes=t,this._candidateFn=null,this.global=!0}getNodeType(e){return this.getCandidateFn(e).shaderNode.layout.type}getCandidateFn(e){const t=this.parametersNodes;let n=this._candidateFn;if(n===null){let i=null,r=-1;for(const o of this.functionNodes){const c=o.shaderNode.layout;if(c===null)throw new Error("FunctionOverloadingNode: FunctionNode must be a layout.");const l=c.inputs;if(t.length===l.length){let u=0;for(let h=0;h<t.length;h++){const d=t[h],f=l[h];d.getNodeType(e)===f.type&&u++}u>r&&(i=o,r=u)}}this._candidateFn=n=i}return n}setup(e){return this.getCandidateFn(e)(...this.parametersNodes)}}const WD=it(HD),Xn=s=>(...e)=>WD(s,...e),xc=Ge(0).setGroup(ke).onRenderUpdate(s=>s.time),$D=Ge(0).setGroup(ke).onRenderUpdate(s=>s.deltaTime),lT=Ge(0,"uint").setGroup(ke).onRenderUpdate(s=>s.frameId),XD=(s=xc)=>s.add(.75).mul(Math.PI*2).sin().mul(.5).add(.5),qD=(s=xc)=>s.fract().round(),YD=(s=xc)=>s.add(.5).fract().mul(2).sub(1).abs(),jD=(s=xc)=>s.fract(),KD=O(([s,e,t=ie(.5)])=>Kl(s.sub(t),e).add(t)),ZD=O(([s,e,t=ie(.5)])=>{const n=s.sub(t),i=n.dot(n),o=i.mul(i).mul(e);return s.add(n.mul(o))}),QD=O(({position:s=null,horizontal:e=!0,vertical:t=!1})=>{let n;s!==null?(n=qi.toVar(),n[3][0]=s.x,n[3][1]=s.y,n[3][2]=s.z):n=qi;const i=ns.mul(n);return Tl(e)&&(i[0][0]=qi[0].length(),i[0][1]=0,i[0][2]=0),Tl(t)&&(i[1][0]=0,i[1][1]=qi[1].length(),i[1][2]=0),i[2][0]=0,i[2][1]=0,i[2][2]=1,pc.mul(i).mul(gn)}),JD=O(([s=null])=>{const e=Lh();return Lh(pg(s)).sub(e).lessThan(0).select(hr,s)});class eU extends De{static get type(){return"SpriteSheetUVNode"}constructor(e,t=Vt(),n=R(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=n}setup(){const{frameNode:e,uvNode:t,countNode:n}=this,{width:i,height:r}=n,o=e.mod(i.mul(r)).floor(),a=o.mod(i),c=r.sub(o.add(1).div(i).ceil()),l=n.reciprocal(),u=ie(a,c);return t.add(u).mul(l)}}const tU=it(eU).setParameterLength(3),uT=O(([s,e=null,t=null,n=R(1),i=gn,r=Ei])=>{let o=r.abs().normalize();o=o.div(o.dot(F(1)));const a=i.yz.mul(n),c=i.zx.mul(n),l=i.xy.mul(n),u=s.value,h=e!==null?e.value:u,d=t!==null?t.value:u,f=xt(u,a).mul(o.x),p=xt(h,c).mul(o.y),x=xt(d,l).mul(o.z);return Mn(f,p,x)}),nU=(...s)=>uT(...s),ra=new Rs,so=new P,oa=new P,Tf=new P,Lc=new ht,Vu=new P(0,0,-1),Ms=new Ke,Dc=new P,Gu=new P,Uc=new Ke,zu=new oe,Uh=new mr,iU=hr.flipX();Uh.depthTexture=new Vi(1,1);let ku=!1;class Eg extends Hs{static get type(){return"ReflectorNode"}constructor(e={}){super(e.defaultTexture||Uh.texture,iU),this._reflectorBaseNode=e.reflector||new sU(this,e),this._depthNode=null,this.setUpdateMatrix(!1)}get reflector(){return this._reflectorBaseNode}get target(){return this._reflectorBaseNode.target}getDepthNode(){if(this._depthNode===null){if(this._reflectorBaseNode.depth!==!0)throw new Error("THREE.ReflectorNode: Depth node can only be requested when the reflector is created with { depth: true }. ");this._depthNode=ee(new Eg({defaultTexture:Uh.depthTexture,reflector:this._reflectorBaseNode}))}return this._depthNode}setup(e){return e.object.isQuadMesh||this._reflectorBaseNode.build(e),super.setup(e)}clone(){const e=new this.constructor(this.reflectorNode);return e.uvNode=this.uvNode,e.levelNode=this.levelNode,e.biasNode=this.biasNode,e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e.offsetNode=this.offsetNode,e._reflectorBaseNode=this._reflectorBaseNode,e}dispose(){super.dispose(),this._reflectorBaseNode.dispose()}}class sU extends De{static get type(){return"ReflectorBaseNode"}constructor(e,t={}){super();const{target:n=new dn,resolutionScale:i=1,generateMipmaps:r=!1,bounces:o=!0,depth:a=!1,samples:c=0}=t;this.textureNode=e,this.target=n,this.resolutionScale=i,t.resolution!==void 0&&(Wt('ReflectorNode: The "resolution" parameter has been renamed to "resolutionScale".'),this.resolutionScale=t.resolution),this.generateMipmaps=r,this.bounces=o,this.depth=a,this.samples=c,this.updateBeforeType=o?at.RENDER:at.FRAME,this.virtualCameras=new WeakMap,this.renderTargets=new Map,this.forceUpdate=!1,this.hasOutput=!1}_updateResolution(e,t){const n=this.resolutionScale;t.getDrawingBufferSize(zu),e.setSize(Math.round(zu.width*n),Math.round(zu.height*n))}setup(e){return this._updateResolution(Uh,e.renderer),super.setup(e)}dispose(){super.dispose();for(const e of this.renderTargets.values())e.dispose()}getVirtualCamera(e){let t=this.virtualCameras.get(e);return t===void 0&&(t=e.clone(),this.virtualCameras.set(e,t)),t}getRenderTarget(e){let t=this.renderTargets.get(e);return t===void 0&&(t=new mr(0,0,{type:hn,samples:this.samples}),this.generateMipmaps===!0&&(t.texture.minFilter=NM,t.texture.generateMipmaps=!0),this.depth===!0&&(t.depthTexture=new Vi),this.renderTargets.set(e,t)),t}updateBefore(e){if(this.bounces===!1&&ku)return!1;ku=!0;const{scene:t,camera:n,renderer:i,material:r}=e,{target:o}=this,a=this.getVirtualCamera(n),c=this.getRenderTarget(a);i.getDrawingBufferSize(zu),this._updateResolution(c,i),oa.setFromMatrixPosition(o.matrixWorld),Tf.setFromMatrixPosition(n.matrixWorld),Lc.extractRotation(o.matrixWorld),so.set(0,0,1),so.applyMatrix4(Lc),Dc.subVectors(oa,Tf);const l=Dc.dot(so)>0;let u=!1;if(l===!0&&this.forceUpdate===!1){if(this.hasOutput===!1){ku=!1;return}u=!0}Dc.reflect(so).negate(),Dc.add(oa),Lc.extractRotation(n.matrixWorld),Vu.set(0,0,-1),Vu.applyMatrix4(Lc),Vu.add(Tf),Gu.subVectors(oa,Vu),Gu.reflect(so).negate(),Gu.add(oa),a.coordinateSystem=n.coordinateSystem,a.position.copy(Dc),a.up.set(0,1,0),a.up.applyMatrix4(Lc),a.up.reflect(so),a.lookAt(Gu),a.near=n.near,a.far=n.far,a.updateMatrixWorld(),a.projectionMatrix.copy(n.projectionMatrix),ra.setFromNormalAndCoplanarPoint(so,oa),ra.applyMatrix4(a.matrixWorldInverse),Ms.set(ra.normal.x,ra.normal.y,ra.normal.z,ra.constant);const h=a.projectionMatrix;Uc.x=(Math.sign(Ms.x)+h.elements[8])/h.elements[0],Uc.y=(Math.sign(Ms.y)+h.elements[9])/h.elements[5],Uc.z=-1,Uc.w=(1+h.elements[10])/h.elements[14],Ms.multiplyScalar(1/Ms.dot(Uc));const d=0;h.elements[2]=Ms.x,h.elements[6]=Ms.y,h.elements[10]=i.coordinateSystem===ks?Ms.z-d:Ms.z+1-d,h.elements[14]=Ms.w,this.textureNode.value=c.texture,this.depth===!0&&(this.textureNode.getDepthNode().value=c.depthTexture),r.visible=!1;const f=i.getRenderTarget(),p=i.getMRT(),x=i.autoClear;i.setMRT(null),i.setRenderTarget(c),i.autoClear=!0;const g=t.name;t.name=(t.name||"Scene")+" [ Reflector ]",u?(i.clear(),this.hasOutput=!1):(i.render(t,a),this.hasOutput=!0),t.name=g,i.setMRT(p),i.setRenderTarget(f),i.autoClear=x,r.visible=!0,ku=!1,this.forceUpdate=!1}get resolution(){return Wt('ReflectorNode: The "resolution" property has been renamed to "resolutionScale".'),this.resolutionScale}set resolution(e){Wt('ReflectorNode: The "resolution" property has been renamed to "resolutionScale".'),this.resolutionScale=e}}const rU=s=>ee(new Eg(s)),Mf=new Gl(-1,1,1,-1,0,1);class oU extends bn{constructor(e=!1){super();const t=e===!1?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new Dt([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Dt(t,2))}}const aU=new oU;class xd extends Vn{constructor(e=null){super(aU,e),this.camera=Mf,this.isQuadMesh=!0}async renderAsync(e){Wt('QuadMesh: "renderAsync()" has been deprecated. Use "render()" and "await renderer.init();" when creating the renderer.'),await e.init(),e.render(this,Mf)}render(e){e.render(this,Mf)}}const cU=new oe;class lU extends Hs{static get type(){return"RTTNode"}constructor(e,t=null,n=null,i={type:hn}){const r=new mr(t,n,i);super(r.texture,Vt()),this.isRTTNode=!0,this.node=e,this.width=t,this.height=n,this.pixelRatio=1,this.renderTarget=r,this.textureNeedsUpdate=!0,this.autoUpdate=!0,this._rttNode=null,this._quadMesh=new xd(new fn),this.updateBeforeType=at.RENDER}get autoResize(){return this.width===null}setup(e){return this._rttNode=this.node.context(e.getSharedContext()),this._quadMesh.material.name="RTT",this._quadMesh.material.needsUpdate=!0,super.setup(e)}setSize(e,t){this.width=e,this.height=t;const n=e*this.pixelRatio,i=t*this.pixelRatio;this.renderTarget.setSize(n,i),this.textureNeedsUpdate=!0}setPixelRatio(e){this.pixelRatio=e,this.setSize(this.width,this.height)}updateBefore({renderer:e}){if(this.textureNeedsUpdate===!1&&this.autoUpdate===!1)return;if(this.textureNeedsUpdate=!1,this.autoResize===!0){const i=e.getPixelRatio(),r=e.getSize(cU),o=Math.floor(r.width*i),a=Math.floor(r.height*i);(o!==this.renderTarget.width||a!==this.renderTarget.height)&&(this.renderTarget.setSize(o,a),this.textureNeedsUpdate=!0)}let t="RTT";this.node.name&&(t=this.node.name+" [ "+t+" ]"),this._quadMesh.material.fragmentNode=this._rttNode,this._quadMesh.name=t;const n=e.getRenderTarget();e.setRenderTarget(this.renderTarget),this._quadMesh.render(e),e.setRenderTarget(n)}clone(){const e=new Hs(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e.referenceNode=this,e}}const hT=(s,...e)=>ee(new lU(ee(s),...e)),uU=(s,...e)=>s.isSampleNode||s.isTextureNode?s:s.isPassNode?s.getTextureNode():hT(s,...e),pa=O(([s,e,t],n)=>{let i;n.renderer.coordinateSystem===ks?(s=ie(s.x,s.y.oneMinus()).mul(2).sub(1),i=$e(F(s,e),1)):i=$e(F(s.x,s.y.oneMinus(),e).mul(2).sub(1),1);const r=$e(t.mul(i));return r.xyz.div(r.w)}),hU=O(([s,e])=>{const t=e.mul($e(s,1)),n=t.xy.div(t.w).mul(.5).add(.5).toVar();return ie(n.x,n.y.oneMinus())}),dU=O(([s,e,t])=>{const n=ur(an(e)),i=Pn(s.mul(n)).toVar(),r=an(e,i).toVar(),o=an(e,i.sub(Pn(2,0))).toVar(),a=an(e,i.sub(Pn(1,0))).toVar(),c=an(e,i.add(Pn(1,0))).toVar(),l=an(e,i.add(Pn(2,0))).toVar(),u=an(e,i.add(Pn(0,2))).toVar(),h=an(e,i.add(Pn(0,1))).toVar(),d=an(e,i.sub(Pn(0,1))).toVar(),f=an(e,i.sub(Pn(0,2))).toVar(),p=$t(Tt(R(2).mul(a).sub(o),r)).toVar(),x=$t(Tt(R(2).mul(c).sub(l),r)).toVar(),g=$t(Tt(R(2).mul(h).sub(u),r)).toVar(),m=$t(Tt(R(2).mul(d).sub(f),r)).toVar(),b=pa(s,r,t).toVar(),y=p.lessThan(x).select(b.sub(pa(s.sub(ie(R(1).div(n.x),0)),a,t)),b.negate().add(pa(s.add(ie(R(1).div(n.x),0)),c,t))),v=g.lessThan(m).select(b.sub(pa(s.add(ie(0,R(1).div(n.y))),h,t)),b.negate().add(pa(s.sub(ie(0,R(1).div(n.y))),d,t)));return Si(Co(y,v))}),fU=O(([s])=>fs(R(52.9829189).mul(fs(ps(s,ie(.06711056,.00583715)))))).setLayout({name:"interleavedGradientNoise",type:"float",inputs:[{name:"position",type:"vec2"}]});class pU extends De{static get type(){return"SampleNode"}constructor(e,t=null){super(),this.callback=e,this.uvNode=t,this.isSampleNode=!0}setup(){return this.sample(Vt())}sample(e){return this.callback(e)}}const mU=(s,e=null)=>ee(new pU(s,ee(e)));class bi extends De{static get type(){return"EventNode"}constructor(e,t){super("void"),this.eventType=e,this.callback=t,e===bi.OBJECT?this.updateType=at.OBJECT:e===bi.MATERIAL?this.updateType=at.RENDER:e===bi.BEFORE_OBJECT?this.updateBeforeType=at.OBJECT:e===bi.BEFORE_MATERIAL&&(this.updateBeforeType=at.RENDER)}update(e){this.callback(e)}updateBefore(e){this.callback(e)}}bi.OBJECT="object";bi.MATERIAL="material";bi.BEFORE_OBJECT="beforeObject";bi.BEFORE_MATERIAL="beforeMaterial";const _d=(s,e)=>ee(new bi(s,e)).toStack(),gU=s=>_d(bi.OBJECT,s),xU=s=>_d(bi.MATERIAL,s),_U=s=>_d(bi.BEFORE_OBJECT,s),yU=s=>_d(bi.BEFORE_MATERIAL,s);class bU extends Br{constructor(e,t,n=Float32Array){const i=ArrayBuffer.isView(e)?e:new n(e*t);super(i,t),this.isStorageInstancedBufferAttribute=!0}}class vU extends yn{constructor(e,t,n=Float32Array){const i=ArrayBuffer.isView(e)?e:new n(e*t);super(i,t),this.isStorageBufferAttribute=!0}}const SU=(s,e="float")=>{let t,n;e.isStruct===!0?(t=e.layout.getLength(),n=Mh("float")):(t=Ey(e),n=Mh(e));const i=new vU(s,t,n);return To(i,e,s)},TU=(s,e="float")=>{let t,n;e.isStruct===!0?(t=e.layout.getLength(),n=Mh("float")):(t=Ey(e),n=Mh(e));const i=new bU(s,t,n);return To(i,e,s)};class MU extends De{static get type(){return"PointUVNode"}constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const EU=Se(MU),Ic=new Ti,Ef=new ht;class vi extends De{static get type(){return"SceneNode"}constructor(e=vi.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,n=this.scene!==null?this.scene:e.scene;let i;return t===vi.BACKGROUND_BLURRINESS?i=Gt("backgroundBlurriness","float",n):t===vi.BACKGROUND_INTENSITY?i=Gt("backgroundIntensity","float",n):t===vi.BACKGROUND_ROTATION?i=Ge("mat4").setName("backgroundRotation").setGroup(ke).onRenderUpdate(()=>{const r=n.background;return r!==null&&r.isTexture&&r.mapping!==Vp?(Ic.copy(n.backgroundRotation),Ic.x*=-1,Ic.y*=-1,Ic.z*=-1,Ef.makeRotationFromEuler(Ic)):Ef.identity(),Ef}):ge("SceneNode: Unknown scope:",t),i}}vi.BACKGROUND_BLURRINESS="backgroundBlurriness";vi.BACKGROUND_INTENSITY="backgroundIntensity";vi.BACKGROUND_ROTATION="backgroundRotation";const dT=Se(vi,vi.BACKGROUND_BLURRINESS),Tp=Se(vi,vi.BACKGROUND_INTENSITY),fT=Se(vi,vi.BACKGROUND_ROTATION);class AU extends Hs{static get type(){return"StorageTextureNode"}constructor(e,t,n=null){super(e,t),this.storeNode=n,this.mipLevel=0,this.isStorageTextureNode=!0,this.access=$n.WRITE_ONLY}getInputType(){return"storageTexture"}setup(e){super.setup(e);const t=e.getNodeProperties(this);return t.storeNode=this.storeNode,t}setAccess(e){return this.access=e,this}setMipLevel(e){return this.mipLevel=e,this}generate(e,t){let n;return this.storeNode!==null?n=this.generateStore(e):n=super.generate(e,t),n}toReadWrite(){return this.setAccess($n.READ_WRITE)}toReadOnly(){return this.setAccess($n.READ_ONLY)}toWriteOnly(){return this.setAccess($n.WRITE_ONLY)}generateStore(e){const t=e.getNodeProperties(this),{uvNode:n,storeNode:i,depthNode:r}=t,o=super.generate(e,"property"),a=n.build(e,this.value.is3DTexture===!0?"uvec3":"uvec2"),c=i.build(e,"vec4"),l=r?r.build(e,"int"):null,u=e.generateTextureStore(e,o,a,l,c);e.addLineFlowCode(u,this)}clone(){const e=super.clone();return e.storeNode=this.storeNode,e.mipLevel=this.mipLevel,e}}const pT=it(AU).setParameterLength(1,3),wU=(s,e,t)=>{const n=pT(s,e,t);return t!==null&&n.toStack(),n},RU=O(({texture:s,uv:e})=>{const n=F().toVar();return je(e.x.lessThan(1e-4),()=>{n.assign(F(1,0,0))}).ElseIf(e.y.lessThan(1e-4),()=>{n.assign(F(0,1,0))}).ElseIf(e.z.lessThan(1e-4),()=>{n.assign(F(0,0,1))}).ElseIf(e.x.greaterThan(1-1e-4),()=>{n.assign(F(-1,0,0))}).ElseIf(e.y.greaterThan(1-1e-4),()=>{n.assign(F(0,-1,0))}).ElseIf(e.z.greaterThan(1-1e-4),()=>{n.assign(F(0,0,-1))}).Else(()=>{const r=s.sample(e.add(F(-.01,0,0))).r.sub(s.sample(e.add(F(.01,0,0))).r),o=s.sample(e.add(F(0,-.01,0))).r.sub(s.sample(e.add(F(0,.01,0))).r),a=s.sample(e.add(F(0,0,-.01))).r.sub(s.sample(e.add(F(0,0,.01))).r);n.assign(F(r,o,a))}),n.normalize()});class NU extends Hs{static get type(){return"Texture3DNode"}constructor(e,t=null,n=null){super(e,t,n),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return F(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,t){const n=this.value;return e.isFlipY()&&(n.isRenderTargetTexture===!0||n.isFramebufferTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(U(ur(this,this.levelNode).y).sub(t.y).sub(1))),t}generateUV(e,t){return t.build(e,this.sampler===!0?"vec3":"ivec3")}generateOffset(e,t){return t.build(e,"ivec3")}normal(e){return RU({texture:this,uv:e})}}const mT=it(NU).setParameterLength(1,3);class CU extends cd{static get type(){return"UserDataNode"}constructor(e,t,n=null){super(e,t,n),this.userData=n}updateReference(e){return this.reference=this.userData!==null?this.userData:e.object.userData,this.reference}}const PU=(s,e,t)=>ee(new CU(s,e,t)),qx=new WeakMap;class LU extends vn{static get type(){return"VelocityNode"}constructor(){super("vec2"),this.projectionMatrix=null,this.updateType=at.OBJECT,this.updateAfterType=at.OBJECT,this.previousModelWorldMatrix=Ge(new ht),this.previousProjectionMatrix=Ge(new ht).setGroup(ke),this.previousCameraViewMatrix=Ge(new ht)}setProjectionMatrix(e){this.projectionMatrix=e}update({frameId:e,camera:t,object:n}){const i=Yx(n);this.previousModelWorldMatrix.value.copy(i);const r=gT(t);r.frameId!==e&&(r.frameId=e,r.previousProjectionMatrix===void 0?(r.previousProjectionMatrix=new ht,r.previousCameraViewMatrix=new ht,r.currentProjectionMatrix=new ht,r.currentCameraViewMatrix=new ht,r.previousProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),r.previousCameraViewMatrix.copy(t.matrixWorldInverse)):(r.previousProjectionMatrix.copy(r.currentProjectionMatrix),r.previousCameraViewMatrix.copy(r.currentCameraViewMatrix)),r.currentProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),r.currentCameraViewMatrix.copy(t.matrixWorldInverse),this.previousProjectionMatrix.value.copy(r.previousProjectionMatrix),this.previousCameraViewMatrix.value.copy(r.previousCameraViewMatrix))}updateAfter({object:e}){Yx(e).copy(e.matrixWorld)}setup(){const e=this.projectionMatrix===null?pc:Ge(this.projectionMatrix),t=this.previousCameraViewMatrix.mul(this.previousModelWorldMatrix),n=e.mul(Bo).mul(gn),i=this.previousProjectionMatrix.mul(t).mul(Ph),r=n.xy.div(n.w),o=i.xy.div(i.w);return Tt(r,o)}}function gT(s){let e=qx.get(s);return e===void 0&&(e={},qx.set(s,e)),e}function Yx(s,e=0){const t=gT(s);let n=t[e];return n===void 0&&(t[e]=n=new ht,t[e].copy(s.matrixWorld)),n}const DU=Se(LU),UU=O(([s])=>Ag(s.rgb)),IU=O(([s,e=R(1)])=>e.mix(Ag(s.rgb),s.rgb)),FU=O(([s,e=R(1)])=>{const t=Mn(s.r,s.g,s.b).div(3),n=s.r.max(s.g.max(s.b)),i=n.sub(t).mul(e).mul(-3);return Ct(s.rgb,n,i)}),BU=O(([s,e=R(1)])=>{const t=F(.57735,.57735,.57735),n=e.cos();return F(s.rgb.mul(n).add(t.cross(s.rgb).mul(e.sin()).add(t.mul(ps(t,s.rgb).mul(n.oneMinus())))))}),Ag=(s,e=F(et.getLuminanceCoefficients(new P)))=>ps(s,e),OU=O(([s,e=F(1),t=F(0),n=F(1),i=R(1),r=F(et.getLuminanceCoefficients(new P,Gr))])=>{const o=s.rgb.dot(F(r)),a=Jt(s.rgb.mul(e).add(t),0).toVar(),c=a.pow(n).toVar();return je(a.r.greaterThan(0),()=>{a.r.assign(c.r)}),je(a.g.greaterThan(0),()=>{a.g.assign(c.g)}),je(a.b.greaterThan(0),()=>{a.b.assign(c.b)}),a.assign(o.add(a.sub(o).mul(i))),$e(a.rgb,s.a)});class VU extends vn{static get type(){return"PosterizeNode"}constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}const GU=it(VU).setParameterLength(2),Hu=new oe;class xT extends Hs{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class jx extends xT{static get type(){return"PassMultipleTextureNode"}constructor(e,t,n=!1){super(e,null),this.textureName=t,this.previousTexture=n}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){const e=new this.constructor(this.passNode,this.textureName,this.previousTexture);return e.uvNode=this.uvNode,e.levelNode=this.levelNode,e.biasNode=this.biasNode,e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e.offsetNode=this.offsetNode,e}}class Ws extends vn{static get type(){return"PassNode"}constructor(e,t,n,i={}){super("vec4"),this.scope=e,this.scene=t,this.camera=n,this.options=i,this._pixelRatio=1,this._width=1,this._height=1;const r=new Vi;r.isRenderTargetTexture=!0,r.name="depth";const o=new mr(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:hn,...i});o.texture.name="output",o.depthTexture=r,this.renderTarget=o,this._textures={output:o.texture,depth:r},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=Ge(0),this._cameraFar=Ge(0),this._mrt=null,this._layers=null,this._resolutionScale=1,this._viewport=null,this._scissor=null,this.isPassNode=!0,this.updateBeforeType=at.FRAME,this.global=!0}setResolutionScale(e){return this._resolutionScale=e,this}getResolutionScale(){return this._resolutionScale}setResolution(e){return te("PassNode: .setResolution() is deprecated. Use .setResolutionScale() instead."),this.setResolutionScale(e)}getResolution(){return te("PassNode: .getResolution() is deprecated. Use .getResolutionScale() instead."),this.getResolutionScale()}setLayers(e){return this._layers=e,this}getLayers(){return this._layers}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getTexture(e){let t=this._textures[e];return t===void 0&&(t=this.renderTarget.texture.clone(),t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)),t}getPreviousTexture(e){let t=this._previousTextures[e];return t===void 0&&(t=this.getTexture(e).clone(),this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(t!==void 0){const n=this._textures[e],i=this.renderTarget.textures.indexOf(n);this.renderTarget.textures[i]=t,this._textures[e]=t,this._previousTextures[e]=n,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return t===void 0&&(t=ee(new jx(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return t===void 0&&(this._textureNodes[e]===void 0&&this.getTextureNode(e),t=ee(new jx(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(t===void 0){const n=this._cameraNear,i=this._cameraFar;this._viewZNodes[e]=t=mg(this.getTextureNode(e),n,i)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(t===void 0){const n=this._cameraNear,i=this._cameraFar,r=this.getViewZNode(e);this._linearDepthNodes[e]=t=Ea(r,n,i)}return t}async compileAsync(e){const t=e.getRenderTarget(),n=e.getMRT();e.setRenderTarget(this.renderTarget),e.setMRT(this._mrt),await e.compileAsync(this.scene,this.camera),e.setRenderTarget(t),e.setMRT(n)}setup({renderer:e}){return this.renderTarget.samples=this.options.samples===void 0?e.samples:this.options.samples,this.renderTarget.texture.type=e.getColorBufferType(),this.scope===Ws.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:n}=this;let i,r;const o=t.getOutputRenderTarget();o&&o.isXRRenderTarget===!0?(r=1,i=t.xr.getCamera(),t.xr.updateCamera(i),Hu.set(o.width,o.height)):(i=this.camera,r=t.getPixelRatio(),t.getSize(Hu)),this._pixelRatio=r,this.setSize(Hu.width,Hu.height);const a=t.getRenderTarget(),c=t.getMRT(),l=t.autoClear,u=i.layers.mask;this._cameraNear.value=i.near,this._cameraFar.value=i.far,this._layers!==null&&(i.layers.mask=this._layers.mask);for(const d in this._previousTextures)this.toggleTexture(d);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.autoClear=!0;const h=n.name;n.name=this.name?this.name:n.name,t.render(n,i),n.name=h,t.setRenderTarget(a),t.setMRT(c),t.autoClear=l,i.layers.mask=u}setSize(e,t){this._width=e,this._height=t;const n=Math.floor(this._width*this._pixelRatio*this._resolutionScale),i=Math.floor(this._height*this._pixelRatio*this._resolutionScale);this.renderTarget.setSize(n,i),this._scissor!==null&&this.renderTarget.scissor.copy(this._scissor),this._viewport!==null&&this.renderTarget.viewport.copy(this._viewport)}setScissor(e,t,n,i){e===null?this._scissor=null:(this._scissor===null&&(this._scissor=new Ke),e.isVector4?this._scissor.copy(e):this._scissor.set(e,t,n,i),this._scissor.multiplyScalar(this._pixelRatio*this._resolutionScale).floor())}setViewport(e,t,n,i){e===null?this._viewport=null:(this._viewport===null&&(this._viewport=new Ke),e.isVector4?this._viewport.copy(e):this._viewport.set(e,t,n,i),this._viewport.multiplyScalar(this._pixelRatio*this._resolutionScale).floor())}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}Ws.COLOR="color";Ws.DEPTH="depth";const zU=(s,e,t)=>ee(new Ws(Ws.COLOR,s,e,t)),kU=(s,e)=>ee(new xT(s,e)),HU=(s,e,t)=>ee(new Ws(Ws.DEPTH,s,e,t));class WU extends Ws{static get type(){return"ToonOutlinePassNode"}constructor(e,t,n,i,r){super(Ws.COLOR,e,t),this.colorNode=n,this.thicknessNode=i,this.alphaNode=r,this._materialCache=new WeakMap,this.name="Outline Pass"}updateBefore(e){const{renderer:t}=e,n=t.getRenderObjectFunction();t.setRenderObjectFunction((i,r,o,a,c,l,u,h)=>{if((c.isMeshToonMaterial||c.isMeshToonNodeMaterial)&&c.wireframe===!1){const d=this._getOutlineMaterial(c);t.renderObject(i,r,o,a,d,l,u,h)}t.renderObject(i,r,o,a,c,l,u,h)}),super.updateBefore(e),t.setRenderObjectFunction(n)}_createMaterial(){const e=new fn;e.isMeshToonOutlineMaterial=!0,e.name="Toon_Outline",e.side=Xt;const t=Ei.negate(),n=pc.mul(Bo),i=R(1),r=n.mul($e(gn,1)),o=n.mul($e(gn.add(t),1)),a=Si(r.sub(o));return e.vertexNode=r.add(a.mul(this.thicknessNode).mul(r.w).mul(i)),e.colorNode=$e(this.colorNode,this.alphaNode),e}_getOutlineMaterial(e){let t=this._materialCache.get(e);return t===void 0&&(t=this._createMaterial(),this._materialCache.set(e,t)),t}}const $U=(s,e,t=new Ze(0,0,0),n=.003,i=1)=>ee(new WU(s,e,ee(t),ee(n),ee(i))),_T=O(([s,e])=>s.mul(e).clamp()).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),yT=O(([s,e])=>(s=s.mul(e),s.div(s.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),bT=O(([s,e])=>{s=s.mul(e),s=s.sub(.004).max(0);const t=s.mul(s.mul(6.2).add(.5)),n=s.mul(s.mul(6.2).add(1.7)).add(.06);return t.div(n).pow(2.2)}).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),XU=O(([s])=>{const e=s.mul(s.add(.0245786)).sub(90537e-9),t=s.mul(s.add(.432951).mul(.983729)).add(.238081);return e.div(t)}),vT=O(([s,e])=>{const t=ei(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),n=ei(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return s=s.mul(e).div(.6),s=t.mul(s),s=XU(s),s=n.mul(s),s.clamp()}).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),qU=ei(F(1.6605,-.1246,-.0182),F(-.5876,1.1329,-.1006),F(-.0728,-.0083,1.1187)),YU=ei(F(.6274,.0691,.0164),F(.3293,.9195,.088),F(.0433,.0113,.8956)),jU=O(([s])=>{const e=F(s).toVar(),t=F(e.mul(e)).toVar(),n=F(t.mul(t)).toVar();return R(15.5).mul(n.mul(t)).sub(st(40.14,n.mul(e))).add(st(31.96,n).sub(st(6.868,t.mul(e))).add(st(.4298,t).add(st(.1191,e).sub(.00232))))}),ST=O(([s,e])=>{const t=F(s).toVar(),n=ei(F(.856627153315983,.137318972929847,.11189821299995),F(.0951212405381588,.761241990602591,.0767994186031903),F(.0482516061458583,.101439036467562,.811302368396859)),i=ei(F(1.1271005818144368,-.1413297634984383,-.14132976349843826),F(-.11060664309660323,1.157823702216272,-.11060664309660294),F(-.016493938717834573,-.016493938717834257,1.2519364065950405)),r=R(-12.47393),o=R(4.026069);return t.mulAssign(e),t.assign(YU.mul(t)),t.assign(n.mul(t)),t.assign(Jt(t,1e-10)),t.assign(Is(t)),t.assign(t.sub(r).div(o.sub(r))),t.assign(Ji(t,0,1)),t.assign(jU(t)),t.assign(i.mul(t)),t.assign(Xi(Jt(F(0),t),F(2.2))),t.assign(qU.mul(t)),t.assign(Ji(t,0,1)),t}).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),TT=O(([s,e])=>{const t=R(.76),n=R(.15);s=s.mul(e);const i=Mi(s.r,Mi(s.g,s.b)),r=wn(i.lessThan(.08),i.sub(st(6.25,i.mul(i))),.04);s.subAssign(r);const o=Jt(s.r,Jt(s.g,s.b));je(o.lessThan(t),()=>s);const a=Tt(1,t),c=Tt(1,a.mul(a).div(o.add(a.sub(t))));s.mulAssign(c.div(o));const l=Tt(1,Gi(1,n.mul(o.sub(c)).add(1)));return Ct(s,F(c),l)}).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class Fn extends De{static get type(){return"CodeNode"}constructor(e="",t=[],n=""){super("code"),this.isCodeNode=!0,this.global=!0,this.code=e,this.includes=t,this.language=n}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const i of t)i.build(e);const n=e.getCodeFromNode(this,this.getNodeType(e));return n.code=this.code,n.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const yd=it(Fn).setParameterLength(1,3),KU=(s,e)=>yd(s,e,"js"),ZU=(s,e)=>yd(s,e,"wgsl"),QU=(s,e)=>yd(s,e,"glsl");class MT extends Fn{static get type(){return"FunctionNode"}constructor(e="",t=[],n=""){super(e,t,n)}getNodeType(e){return this.getNodeFunction(e).type}getMemberType(e,t){const n=this.getNodeType(e);return e.getStructTypeNode(n).getMemberType(e,t)}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let n=t.nodeFunction;return n===void 0&&(n=e.parser.parseFunction(this.code),t.nodeFunction=n),n}generate(e,t){super.generate(e);const n=this.getNodeFunction(e),i=n.name,r=n.type,o=e.getCodeFromNode(this,r);i!==""&&(o.name=i);const a=e.getPropertyName(o),c=this.getNodeFunction(e).getCode(a);return o.code=c+`
`,t==="property"?a:e.format(`${a}()`,r,t)}}const ET=(s,e=[],t="")=>{for(let r=0;r<e.length;r++){const o=e[r];typeof o=="function"&&(e[r]=o.functionNode)}const n=ee(new MT(s,e,t)),i=(...r)=>n.call(...r);return i.functionNode=n,i},JU=(s,e)=>ET(s,e,"glsl"),eI=(s,e)=>ET(s,e,"wgsl");class tI extends De{static get type(){return"ScriptableValueNode"}constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outputType=null,this.events=new xs,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return this.outputType!==null}set value(e){this._value!==e&&(this._cache&&this.inputType==="URL"&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&this._cache===null&&this.inputType==="URL"&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&e.value!==null&&e.value!==void 0&&((this.inputType==="URL"||this.inputType==="String")&&typeof e.value=="string"||this.inputType==="Number"&&typeof e.value=="number"||this.inputType==="Vector2"&&e.value.isVector2||this.inputType==="Vector3"&&e.value.isVector3||this.inputType==="Vector4"&&e.value.isVector4||this.inputType==="Color"&&e.value.isColor||this.inputType==="Matrix3"&&e.value.isMatrix3||this.inputType==="Matrix4"&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:R()}serialize(e){super.serialize(e),this.value!==null?this.inputType==="ArrayBuffer"?e.value=wy(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;e.value!==null&&(e.inputType==="ArrayBuffer"?t=Ry(e.value):e.inputType==="Texture"?t=e.meta.textures[e.value]:t=e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const gh=it(tI).setParameterLength(1);class AT extends Map{get(e,t=null,...n){if(this.has(e))return super.get(e);if(t!==null){const i=t(...n);return this.set(e,i),i}}}class nI{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const xh=new AT;class iI extends De{static get type(){return"ScriptableNode"}constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new AT,this._output=gh(null),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const n=this._outputs;return n[e]===void 0?n[e]=gh(t):n[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const n=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),n[e]=t,n[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),n[e]=t,n[e].events.addEventListener("refresh",this.onRefresh)):n[e]===void 0?(n[e]=gh(t),n[e].events.addEventListener("refresh",this.onRefresh)):n[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const i=this.getObject()[e];if(typeof i=="function")return i(...t)}async callAsync(e,...t){const i=this.getObject()[e];if(typeof i=="function")return i.constructor.name==="AsyncFunction"?await i(...t):i(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){e!==null?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),this._object!==null)return this._object;const e=()=>this.refresh(),t=(l,u)=>this.setOutput(l,u),n=new nI(this),i=xh.get("THREE"),r=xh.get("TSL"),o=this.getMethod(),a=[n,this._local,xh,e,t,i,r];this._object=o(...a);const c=this._object.layout;if(c&&(c.cache===!1&&this._local.clear(),this._output.outputType=c.outputType||null,Array.isArray(c.elements)))for(const l of c.elements){const u=l.id||l.name;l.inputType&&(this.getParameter(u)===void 0&&this.setParameter(u,null),this.getParameter(u).inputType=l.inputType),l.outputType&&(this.getOutput(u)===void 0&&this.setOutput(u,null),this.getOutput(u).outputType=l.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const t in this.parameters){let n=this.parameters[t];n.isScriptableNode&&(n=n.getDefaultOutput()),n.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:R()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),this._method!==null)return this._method;const e=["parameters","local","global","refresh","setOutput","THREE","TSL"],n=["layout","init","main","dispose"].join(", "),i="var "+n+`; var output = {};
`,r=`
return { ...output, `+n+" };",o=i+this.codeNode.code+r;return this._method=new Function(...e,o),this._method}dispose(){this._method!==null&&(this._object&&typeof this._object.dispose=="function"&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}getCacheKey(e){const t=[zl(this.source),this.getDefaultOutputNode().getCacheKey(e)];for(const n in this.parameters)t.push(this.parameters[n].getCacheKey(e));return dc(t)}set needsUpdate(e){e===!0&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return this.codeNode===null?this:(this._needsOutputUpdate===!0&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value,this)}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const sI=it(iI).setParameterLength(1,2);function wT(s){let e;const t=s.context.getViewZ;return t!==void 0&&(e=t(this)),(e||xn.z).negate()}const wg=O(([s,e],t)=>{const n=wT(t);return ms(s,e,n)}),Rg=O(([s],e)=>{const t=wT(e);return s.mul(s,t,t).negate().exp().oneMinus()}),Ll=O(([s,e])=>$e(e.toFloat().mix(Sa.rgb,s.toVec3()),Sa.a));function rI(s,e,t){return te('TSL: "rangeFog( color, near, far )" is deprecated. Use "fog( color, rangeFogFactor( near, far ) )" instead.'),Ll(s,wg(e,t))}function oI(s,e){return te('TSL: "densityFog( color, density )" is deprecated. Use "fog( color, densityFogFactor( density ) )" instead.'),Ll(s,Rg(e))}let ro=null,oo=null;class aI extends De{static get type(){return"RangeNode"}constructor(e=R(),t=R()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=this.getConstNode(this.minNode),n=this.getConstNode(this.maxNode),i=e.getTypeLength(Pr(t.value)),r=e.getTypeLength(Pr(n.value));return i>r?i:r}getNodeType(e){return e.object.count>1?e.getTypeFromLength(this.getVectorLength(e)):"float"}getConstNode(e){let t=null;if(e.traverse(n=>{n.isConstNode===!0&&(t=n)}),t===null)throw new Error('THREE.TSL: No "ConstNode" found in node graph.');return t}setup(e){const t=e.object;let n=null;if(t.count>1){const i=this.getConstNode(this.minNode),r=this.getConstNode(this.maxNode),o=i.value,a=r.value,c=e.getTypeLength(Pr(o)),l=e.getTypeLength(Pr(a));ro=ro||new Ke,oo=oo||new Ke,ro.setScalar(0),oo.setScalar(0),c===1?ro.setScalar(o):o.isColor?ro.set(o.r,o.g,o.b,1):ro.set(o.x,o.y,o.z||0,o.w||0),l===1?oo.setScalar(a):a.isColor?oo.set(a.r,a.g,a.b,1):oo.set(a.x,a.y,a.z||0,a.w||0);const u=4,h=u*t.count,d=new Float32Array(h);for(let p=0;p<h;p++){const x=p%u,g=ro.getComponent(x),m=oo.getComponent(x);d[p]=ec.lerp(g,m,Math.random())}const f=this.getNodeType(e);if(t.count<=4096)n=Xl(d,"vec4",t.count).element(Or).convert(f);else{const p=new Br(d,4);e.geometry.setAttribute("__range"+this.id,p),n=Ch(p).convert(f)}}else n=R(0);return n}}const cI=it(aI).setParameterLength(2);class lI extends De{static get type(){return"ComputeBuiltinNode"}constructor(e,t){super(t),this._builtinName=e}getHash(e){return this.getBuiltinName(e)}getNodeType(){return this.nodeType}setBuiltinName(e){return this._builtinName=e,this}getBuiltinName(){return this._builtinName}hasBuiltin(e){return e.hasBuiltin(this._builtinName)}generate(e,t){const n=this.getBuiltinName(e),i=this.getNodeType(e);return e.shaderStage==="compute"?e.format(n,i,t):(te(`ComputeBuiltinNode: Compute built-in value ${n} can not be accessed in the ${e.shaderStage} stage`),e.generateConst(i))}serialize(e){super.serialize(e),e.global=this.global,e._builtinName=this._builtinName}deserialize(e){super.deserialize(e),this.global=e.global,this._builtinName=e._builtinName}}const Ql=(s,e)=>ee(new lI(s,e)),uI=Ql("numWorkgroups","uvec3"),hI=Ql("workgroupId","uvec3"),dI=Ql("globalId","uvec3"),fI=Ql("localId","uvec3"),pI=Ql("subgroupSize","uint");class mI extends De{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:n}=e;n.backend.isWebGLBackend===!0?e.addFlowCode(`	// ${t}Barrier 
`):e.addLineFlowCode(`${t}Barrier()`,this)}}const Ng=it(mI),gI=()=>Ng("workgroup").toStack(),xI=()=>Ng("storage").toStack(),_I=()=>Ng("texture").toStack();class yI extends Fo{constructor(e,t){super(e,t),this.isWorkgroupInfoElementNode=!0}generate(e,t){let n;const i=e.context.assign;if(n=super.generate(e),i!==!0){const r=this.getNodeType(e);n=e.format(n,r,t)}return n}}class bI extends De{constructor(e,t,n=0){super(t),this.bufferType=t,this.bufferCount=n,this.isWorkgroupInfoNode=!0,this.elementType=t,this.scope=e,this.name=""}setName(e){return this.name=e,this}label(e){return te('TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setScope(e){return this.scope=e,this}getElementType(){return this.elementType}getInputType(){return`${this.scope}Array`}element(e){return ee(new yI(this,e))}generate(e){const t=this.name!==""?this.name:`${this.scope}Array_${this.id}`;return e.getScopedArray(t,this.scope.toLowerCase(),this.bufferType,this.bufferCount)}}const vI=(s,e)=>ee(new bI("Workgroup",s,e));class Un extends De{static get type(){return"AtomicFunctionNode"}constructor(e,t,n){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=n,this.parents=!0}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=e.getNodeProperties(this),n=t.parents,i=this.method,r=this.getNodeType(e),o=this.getInputType(e),a=this.pointerNode,c=this.valueNode,l=[];l.push(`&${a.build(e,o)}`),c!==null&&l.push(c.build(e,o));const u=`${e.getMethod(i,r)}( ${l.join(", ")} )`;if(n?n.length===1&&n[0].isStackNode===!0:!1)e.addLineFlowCode(u,this);else return t.constNode===void 0&&(t.constNode=fr(u,r).toConst()),t.constNode.build(e)}}Un.ATOMIC_LOAD="atomicLoad";Un.ATOMIC_STORE="atomicStore";Un.ATOMIC_ADD="atomicAdd";Un.ATOMIC_SUB="atomicSub";Un.ATOMIC_MAX="atomicMax";Un.ATOMIC_MIN="atomicMin";Un.ATOMIC_AND="atomicAnd";Un.ATOMIC_OR="atomicOr";Un.ATOMIC_XOR="atomicXor";const SI=it(Un),qs=(s,e,t)=>SI(s,e,t).toStack(),TI=s=>qs(Un.ATOMIC_LOAD,s,null),MI=(s,e)=>qs(Un.ATOMIC_STORE,s,e),EI=(s,e)=>qs(Un.ATOMIC_ADD,s,e),AI=(s,e)=>qs(Un.ATOMIC_SUB,s,e),wI=(s,e)=>qs(Un.ATOMIC_MAX,s,e),RI=(s,e)=>qs(Un.ATOMIC_MIN,s,e),NI=(s,e)=>qs(Un.ATOMIC_AND,s,e),CI=(s,e)=>qs(Un.ATOMIC_OR,s,e),PI=(s,e)=>qs(Un.ATOMIC_XOR,s,e);class Te extends vn{static get type(){return"SubgroupFunctionNode"}constructor(e,t=null,n=null){super(),this.method=e,this.aNode=t,this.bNode=n}getInputType(e){const t=this.aNode?this.aNode.getNodeType(e):null,n=this.bNode?this.bNode.getNodeType(e):null,i=e.isMatrix(t)?0:e.getTypeLength(t),r=e.isMatrix(n)?0:e.getTypeLength(n);return i>r?t:n}getNodeType(e){const t=this.method;return t===Te.SUBGROUP_ELECT?"bool":t===Te.SUBGROUP_BALLOT?"uvec4":this.getInputType(e)}generate(e,t){const n=this.method,i=this.getNodeType(e),r=this.getInputType(e),o=this.aNode,a=this.bNode,c=[];if(n===Te.SUBGROUP_BROADCAST||n===Te.SUBGROUP_SHUFFLE||n===Te.QUAD_BROADCAST){const u=a.getNodeType(e);c.push(o.build(e,i),a.build(e,u==="float"?"int":i))}else n===Te.SUBGROUP_SHUFFLE_XOR||n===Te.SUBGROUP_SHUFFLE_DOWN||n===Te.SUBGROUP_SHUFFLE_UP?c.push(o.build(e,i),a.build(e,"uint")):(o!==null&&c.push(o.build(e,r)),a!==null&&c.push(a.build(e,r)));const l=c.length===0?"()":`( ${c.join(", ")} )`;return e.format(`${e.getMethod(n,i)}${l}`,i,t)}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}Te.SUBGROUP_ELECT="subgroupElect";Te.SUBGROUP_BALLOT="subgroupBallot";Te.SUBGROUP_ADD="subgroupAdd";Te.SUBGROUP_INCLUSIVE_ADD="subgroupInclusiveAdd";Te.SUBGROUP_EXCLUSIVE_AND="subgroupExclusiveAdd";Te.SUBGROUP_MUL="subgroupMul";Te.SUBGROUP_INCLUSIVE_MUL="subgroupInclusiveMul";Te.SUBGROUP_EXCLUSIVE_MUL="subgroupExclusiveMul";Te.SUBGROUP_AND="subgroupAnd";Te.SUBGROUP_OR="subgroupOr";Te.SUBGROUP_XOR="subgroupXor";Te.SUBGROUP_MIN="subgroupMin";Te.SUBGROUP_MAX="subgroupMax";Te.SUBGROUP_ALL="subgroupAll";Te.SUBGROUP_ANY="subgroupAny";Te.SUBGROUP_BROADCAST_FIRST="subgroupBroadcastFirst";Te.QUAD_SWAP_X="quadSwapX";Te.QUAD_SWAP_Y="quadSwapY";Te.QUAD_SWAP_DIAGONAL="quadSwapDiagonal";Te.SUBGROUP_BROADCAST="subgroupBroadcast";Te.SUBGROUP_SHUFFLE="subgroupShuffle";Te.SUBGROUP_SHUFFLE_XOR="subgroupShuffleXor";Te.SUBGROUP_SHUFFLE_UP="subgroupShuffleUp";Te.SUBGROUP_SHUFFLE_DOWN="subgroupShuffleDown";Te.QUAD_BROADCAST="quadBroadcast";const LI=xe(Te,Te.SUBGROUP_ELECT).setParameterLength(0),DI=xe(Te,Te.SUBGROUP_BALLOT).setParameterLength(1),UI=xe(Te,Te.SUBGROUP_ADD).setParameterLength(1),II=xe(Te,Te.SUBGROUP_INCLUSIVE_ADD).setParameterLength(1),FI=xe(Te,Te.SUBGROUP_EXCLUSIVE_AND).setParameterLength(1),BI=xe(Te,Te.SUBGROUP_MUL).setParameterLength(1),OI=xe(Te,Te.SUBGROUP_INCLUSIVE_MUL).setParameterLength(1),VI=xe(Te,Te.SUBGROUP_EXCLUSIVE_MUL).setParameterLength(1),GI=xe(Te,Te.SUBGROUP_AND).setParameterLength(1),zI=xe(Te,Te.SUBGROUP_OR).setParameterLength(1),kI=xe(Te,Te.SUBGROUP_XOR).setParameterLength(1),HI=xe(Te,Te.SUBGROUP_MIN).setParameterLength(1),WI=xe(Te,Te.SUBGROUP_MAX).setParameterLength(1),$I=xe(Te,Te.SUBGROUP_ALL).setParameterLength(0),XI=xe(Te,Te.SUBGROUP_ANY).setParameterLength(0),qI=xe(Te,Te.SUBGROUP_BROADCAST_FIRST).setParameterLength(2),YI=xe(Te,Te.QUAD_SWAP_X).setParameterLength(1),jI=xe(Te,Te.QUAD_SWAP_Y).setParameterLength(1),KI=xe(Te,Te.QUAD_SWAP_DIAGONAL).setParameterLength(1),ZI=xe(Te,Te.SUBGROUP_BROADCAST).setParameterLength(2),QI=xe(Te,Te.SUBGROUP_SHUFFLE).setParameterLength(2),JI=xe(Te,Te.SUBGROUP_SHUFFLE_XOR).setParameterLength(2),eF=xe(Te,Te.SUBGROUP_SHUFFLE_UP).setParameterLength(2),tF=xe(Te,Te.SUBGROUP_SHUFFLE_DOWN).setParameterLength(2),nF=xe(Te,Te.QUAD_BROADCAST).setParameterLength(1);let Wu;function bd(s){Wu=Wu||new WeakMap;let e=Wu.get(s);return e===void 0&&Wu.set(s,e={}),e}function vd(s){const e=bd(s);return e.shadowMatrix||(e.shadowMatrix=Ge("mat4").setGroup(ke).onRenderUpdate(t=>((s.castShadow!==!0||t.renderer.shadowMap.enabled===!1)&&(s.shadow.camera.coordinateSystem!==t.camera.coordinateSystem&&(s.shadow.camera.coordinateSystem=t.camera.coordinateSystem,s.shadow.camera.updateProjectionMatrix()),s.shadow.updateMatrices(s)),s.shadow.matrix)))}function RT(s,e=Os){const t=vd(s).mul(e);return t.xyz.div(t.w)}function Cg(s){const e=bd(s);return e.position||(e.position=Ge(new P).setGroup(ke).onRenderUpdate((t,n)=>n.value.setFromMatrixPosition(s.matrixWorld)))}function NT(s){const e=bd(s);return e.targetPosition||(e.targetPosition=Ge(new P).setGroup(ke).onRenderUpdate((t,n)=>n.value.setFromMatrixPosition(s.target.matrixWorld)))}function Pg(s){const e=bd(s);return e.viewPosition||(e.viewPosition=Ge(new P).setGroup(ke).onRenderUpdate(({camera:t},n)=>{n.value=n.value||new P,n.value.setFromMatrixPosition(s.matrixWorld),n.value.applyMatrix4(t.matrixWorldInverse)}))}const Lg=s=>ns.transformDirection(Cg(s).sub(NT(s))),iF=s=>s.sort((e,t)=>e.id-t.id),sF=(s,e)=>{for(const t of e)if(t.isAnalyticLightNode&&t.light.id===s)return t;return null},Af=new WeakMap,Fc=[];class Dg extends De{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=lr("vec3","totalDiffuse"),this.totalSpecularNode=lr("vec3","totalSpecular"),this.outgoingLightNode=lr("vec3","outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}customCacheKey(){const e=this._lights;for(let n=0;n<e.length;n++){const i=e[n];if(Fc.push(i.id),Fc.push(i.castShadow?1:0),i.isSpotLight===!0){const r=i.map!==null?i.map.id:-1,o=i.colorNode?i.colorNode.getCacheKey():-1;Fc.push(r,o)}}const t=dc(Fc);return Fc.length=0,t}getHash(e){if(this._lightNodesHash===null){this._lightNodes===null&&this.setupLightsNode(e);const t=[];for(const n of this._lightNodes)t.push(n.getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getNodeProperties(this);for(const n of t.nodes)n.build(e);t.outputNode.build(e)}setupLightsNode(e){const t=[],n=this._lightNodes,i=iF(this._lights),r=e.renderer.library;for(const o of i)if(o.isNode)t.push(ee(o));else{let a=null;if(n!==null&&(a=sF(o.id,n)),a===null){const c=r.getLightNodeClass(o.constructor);if(c===null){te(`LightsNode.setupNodeLights: Light node not found for ${o.constructor.name}`);continue}let l=null;Af.has(o)?l=Af.get(o):(l=ee(new c(o)),Af.set(o,l)),t.push(l)}}this._lightNodes=t}setupDirectLight(e,t,n){const{lightingModel:i,reflectedLight:r}=e.context;i.direct({...n,lightNode:t,reflectedLight:r},e)}setupDirectRectAreaLight(e,t,n){const{lightingModel:i,reflectedLight:r}=e.context;i.directRectArea({...n,lightNode:t,reflectedLight:r},e)}setupLights(e,t){for(const n of t)n.build(e)}getLightNodes(e){return this._lightNodes===null&&this.setupLightsNode(e),this._lightNodes}setup(e){const t=e.lightsNode;e.lightsNode=this;let n=this.outgoingLightNode;const i=e.context,r=i.lightingModel,o=e.getNodeProperties(this);if(r){const{totalDiffuseNode:a,totalSpecularNode:c}=this;i.outgoingLight=n;const l=e.addStack();o.nodes=l.nodes,r.start(e);const{backdrop:u,backdropAlpha:h}=i,{directDiffuse:d,directSpecular:f,indirectDiffuse:p,indirectSpecular:x}=i.reflectedLight;let g=d.add(p);u!==null&&(h!==null?g=F(h.mix(g,u)):g=F(u)),a.assign(g),c.assign(f.add(x)),n.assign(a.add(c)),r.finish(e),n=n.bypass(e.removeStack())}else o.nodes=[];return e.lightsNode=t,n}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}const rF=(s=[])=>ee(new Dg).setLights(s);class oF extends De{static get type(){return"ShadowBaseNode"}constructor(e){super(),this.light=e,this.updateBeforeType=at.RENDER,this.isShadowBaseNode=!0}setupShadowPosition({context:e,material:t}){Ug.assign(t.receivedShadowPositionNode||e.shadowPositionWorld||Os)}}const Ug=lr("vec3","shadowPositionWorld");function aF(s,e={}){return e.toneMapping=s.toneMapping,e.toneMappingExposure=s.toneMappingExposure,e.outputColorSpace=s.outputColorSpace,e.renderTarget=s.getRenderTarget(),e.activeCubeFace=s.getActiveCubeFace(),e.activeMipmapLevel=s.getActiveMipmapLevel(),e.renderObjectFunction=s.getRenderObjectFunction(),e.pixelRatio=s.getPixelRatio(),e.mrt=s.getMRT(),e.clearColor=s.getClearColor(e.clearColor||new Ze),e.clearAlpha=s.getClearAlpha(),e.autoClear=s.autoClear,e.scissorTest=s.getScissorTest(),e}function cF(s,e){return e=aF(s,e),s.setMRT(null),s.setRenderObjectFunction(null),s.setClearColor(0,1),s.autoClear=!0,e}function lF(s,e){s.toneMapping=e.toneMapping,s.toneMappingExposure=e.toneMappingExposure,s.outputColorSpace=e.outputColorSpace,s.setRenderTarget(e.renderTarget,e.activeCubeFace,e.activeMipmapLevel),s.setRenderObjectFunction(e.renderObjectFunction),s.setPixelRatio(e.pixelRatio),s.setMRT(e.mrt),s.setClearColor(e.clearColor,e.clearAlpha),s.autoClear=e.autoClear,s.setScissorTest(e.scissorTest)}function uF(s,e={}){return e.background=s.background,e.backgroundNode=s.backgroundNode,e.overrideMaterial=s.overrideMaterial,e}function hF(s,e){return e=uF(s,e),s.background=null,s.backgroundNode=null,s.overrideMaterial=null,e}function dF(s,e){s.background=e.background,s.backgroundNode=e.backgroundNode,s.overrideMaterial=e.overrideMaterial}function fF(s,e,t){return t=cF(s,t),t=hF(e,t),t}function pF(s,e,t){lF(s,t),dF(e,t)}const Kx=new WeakMap,CT=O(({depthTexture:s,shadowCoord:e,depthLayer:t})=>{let n=xt(s,e.xy).setName("t_basic");return s.isArrayTexture&&(n=n.depth(t)),n.compare(e.z)}),PT=O(({depthTexture:s,shadowCoord:e,shadow:t,depthLayer:n})=>{const i=(g,m)=>{let b=xt(s,g);return s.isArrayTexture&&(b=b.depth(n)),b.compare(m)},r=Gt("mapSize","vec2",t).setGroup(ke),o=Gt("radius","float",t).setGroup(ke),a=ie(1).div(r),c=a.x.negate().mul(o),l=a.y.negate().mul(o),u=a.x.mul(o),h=a.y.mul(o),d=c.div(2),f=l.div(2),p=u.div(2),x=h.div(2);return Mn(i(e.xy.add(ie(c,l)),e.z),i(e.xy.add(ie(0,l)),e.z),i(e.xy.add(ie(u,l)),e.z),i(e.xy.add(ie(d,f)),e.z),i(e.xy.add(ie(0,f)),e.z),i(e.xy.add(ie(p,f)),e.z),i(e.xy.add(ie(c,0)),e.z),i(e.xy.add(ie(d,0)),e.z),i(e.xy,e.z),i(e.xy.add(ie(p,0)),e.z),i(e.xy.add(ie(u,0)),e.z),i(e.xy.add(ie(d,x)),e.z),i(e.xy.add(ie(0,x)),e.z),i(e.xy.add(ie(p,x)),e.z),i(e.xy.add(ie(c,h)),e.z),i(e.xy.add(ie(0,h)),e.z),i(e.xy.add(ie(u,h)),e.z)).mul(1/17)}),LT=O(({depthTexture:s,shadowCoord:e,shadow:t,depthLayer:n})=>{const i=(h,d)=>{let f=xt(s,h);return s.isArrayTexture&&(f=f.depth(n)),f.compare(d)},r=Gt("mapSize","vec2",t).setGroup(ke),o=ie(1).div(r),a=o.x,c=o.y,l=e.xy,u=fs(l.mul(r).add(.5));return l.subAssign(u.mul(o)),Mn(i(l,e.z),i(l.add(ie(a,0)),e.z),i(l.add(ie(0,c)),e.z),i(l.add(o),e.z),Ct(i(l.add(ie(a.negate(),0)),e.z),i(l.add(ie(a.mul(2),0)),e.z),u.x),Ct(i(l.add(ie(a.negate(),c)),e.z),i(l.add(ie(a.mul(2),c)),e.z),u.x),Ct(i(l.add(ie(0,c.negate())),e.z),i(l.add(ie(0,c.mul(2))),e.z),u.y),Ct(i(l.add(ie(a,c.negate())),e.z),i(l.add(ie(a,c.mul(2))),e.z),u.y),Ct(Ct(i(l.add(ie(a.negate(),c.negate())),e.z),i(l.add(ie(a.mul(2),c.negate())),e.z),u.x),Ct(i(l.add(ie(a.negate(),c.mul(2))),e.z),i(l.add(ie(a.mul(2),c.mul(2))),e.z),u.x),u.y)).mul(1/9)}),DT=O(({depthTexture:s,shadowCoord:e,depthLayer:t})=>{const n=R(1).toVar();let i=xt(s).sample(e.xy);s.isArrayTexture&&(i=i.depth(t)),i=i.rg;const r=rd(e.z,i.x);return je(r.notEqual(R(1)),()=>{const o=e.z.sub(i.x),a=Jt(0,i.y.mul(i.y));let c=a.div(a.add(o.mul(o)));c=Ji(Tt(c,.3).div(.95-.3)),n.assign(Ji(Jt(r,c)))}),n}),mF=O(([s,e,t])=>{let n=Os.sub(s).length();return n=n.sub(e).div(t.sub(e)),n=n.saturate(),n}),gF=s=>{const e=s.shadow.camera,t=Gt("near","float",e).setGroup(ke),n=Gt("far","float",e).setGroup(ke),i=gv(s);return mF(i,t,n)},UT=s=>{let e=Kx.get(s);if(e===void 0){const t=s.isPointLight?gF(s):null;e=new fn,e.colorNode=$e(0,0,0,1),e.depthNode=t,e.isShadowPassMaterial=!0,e.name="ShadowMaterial",e.fog=!1,Kx.set(s,e)}return e},Zx=new gs,aa=[],IT=(s,e,t,n)=>{aa[0]=s,aa[1]=e;let i=Zx.get(aa);return(i===void 0||i.shadowType!==t||i.useVelocity!==n)&&(i=(r,o,a,c,l,u,...h)=>{(r.castShadow===!0||r.receiveShadow&&t===Li)&&(n&&(Ay(r).useVelocity=!0),r.onBeforeShadow(s,r,a,e.camera,c,o.overrideMaterial,u),s.renderObject(r,o,a,c,l,u,...h),r.onAfterShadow(s,r,a,e.camera,c,o.overrideMaterial,u))},i.shadowType=t,i.useVelocity=n,Zx.set(aa,i)),aa[0]=null,aa[1]=null,i},xF=O(({samples:s,radius:e,size:t,shadowPass:n,depthLayer:i})=>{const r=R(0).toVar("meanVertical"),o=R(0).toVar("squareMeanVertical"),a=s.lessThanEqual(R(1)).select(R(0),R(2).div(s.sub(1))),c=s.lessThanEqual(R(1)).select(R(0),R(-1));Ft({start:U(0),end:U(s),type:"int",condition:"<"},({i:u})=>{const h=c.add(R(u).mul(a));let d=n.sample(Mn(ql.xy,ie(0,h).mul(e)).div(t));n.value.isArrayTexture&&(d=d.depth(i)),d=d.x,r.addAssign(d),o.addAssign(d.mul(d))}),r.divAssign(s),o.divAssign(s);const l=_i(o.sub(r.mul(r)));return ie(r,l)}),_F=O(({samples:s,radius:e,size:t,shadowPass:n,depthLayer:i})=>{const r=R(0).toVar("meanHorizontal"),o=R(0).toVar("squareMeanHorizontal"),a=s.lessThanEqual(R(1)).select(R(0),R(2).div(s.sub(1))),c=s.lessThanEqual(R(1)).select(R(0),R(-1));Ft({start:U(0),end:U(s),type:"int",condition:"<"},({i:u})=>{const h=c.add(R(u).mul(a));let d=n.sample(Mn(ql.xy,ie(h,0).mul(e)).div(t));n.value.isArrayTexture&&(d=d.depth(i)),r.addAssign(d.x),o.addAssign(Mn(d.y.mul(d.y),d.x.mul(d.x)))}),r.divAssign(s),o.divAssign(s);const l=_i(o.sub(r.mul(r)));return ie(r,l)}),yF=[CT,PT,LT,DT];let wf;const $u=new xd;class FT extends oF{static get type(){return"ShadowNode"}constructor(e,t=null){super(e),this.shadow=t||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this._node=null,this._currentShadowType=null,this._cameraFrameId=new WeakMap,this.isShadowNode=!0,this.depthLayer=0}setupShadowFilter(e,{filterFn:t,depthTexture:n,shadowCoord:i,shadow:r,depthLayer:o}){const a=i.x.greaterThanEqual(0).and(i.x.lessThanEqual(1)).and(i.y.greaterThanEqual(0)).and(i.y.lessThanEqual(1)).and(i.z.lessThanEqual(1)),c=t({depthTexture:n,shadowCoord:i,shadow:r,depthLayer:o});return a.select(c,R(1))}setupShadowCoord(e,t){const{shadow:n}=this,{renderer:i}=e,r=Gt("bias","float",n).setGroup(ke);let o=t,a;if(n.camera.isOrthographicCamera||i.logarithmicDepthBuffer!==!0)o=o.xyz.div(o.w),a=o.z,i.coordinateSystem===ks&&(a=a.mul(2).sub(1));else{const c=o.w;o=o.xy.div(c);const l=Gt("near","float",n.camera).setGroup(ke),u=Gt("far","float",n.camera).setGroup(ke);a=gg(c.negate(),l,u)}return o=F(o.x,o.y.oneMinus(),a.add(r)),o}getShadowFilterFn(e){return yF[e]}setupRenderTarget(e,t){const n=new Vi(e.mapSize.width,e.mapSize.height);n.name="ShadowDepthTexture",n.compareFunction=kh;const i=t.createRenderTarget(e.mapSize.width,e.mapSize.height);return i.texture.name="ShadowMap",i.texture.type=e.mapType,i.depthTexture=n,{shadowMap:i,depthTexture:n}}setupShadow(e){const{renderer:t,camera:n}=e,{light:i,shadow:r}=this,o=t.shadowMap.type,{depthTexture:a,shadowMap:c}=this.setupRenderTarget(r,e);if(r.camera.coordinateSystem=n.coordinateSystem,r.camera.updateProjectionMatrix(),o===Li&&r.isPointLightShadow!==!0){a.compareFunction=null,c.depth>1?(c._vsmShadowMapVertical||(c._vsmShadowMapVertical=e.createRenderTarget(r.mapSize.width,r.mapSize.height,{format:hs,type:hn,depth:c.depth,depthBuffer:!1}),c._vsmShadowMapVertical.texture.name="VSMVertical"),this.vsmShadowMapVertical=c._vsmShadowMapVertical,c._vsmShadowMapHorizontal||(c._vsmShadowMapHorizontal=e.createRenderTarget(r.mapSize.width,r.mapSize.height,{format:hs,type:hn,depth:c.depth,depthBuffer:!1}),c._vsmShadowMapHorizontal.texture.name="VSMHorizontal"),this.vsmShadowMapHorizontal=c._vsmShadowMapHorizontal):(this.vsmShadowMapVertical=e.createRenderTarget(r.mapSize.width,r.mapSize.height,{format:hs,type:hn,depthBuffer:!1}),this.vsmShadowMapHorizontal=e.createRenderTarget(r.mapSize.width,r.mapSize.height,{format:hs,type:hn,depthBuffer:!1}));let y=xt(a);a.isArrayTexture&&(y=y.depth(this.depthLayer));let v=xt(this.vsmShadowMapVertical.texture);a.isArrayTexture&&(v=v.depth(this.depthLayer));const w=Gt("blurSamples","float",r).setGroup(ke),S=Gt("radius","float",r).setGroup(ke),E=Gt("mapSize","vec2",r).setGroup(ke);let C=this.vsmMaterialVertical||(this.vsmMaterialVertical=new fn);C.fragmentNode=xF({samples:w,radius:S,size:E,shadowPass:y,depthLayer:this.depthLayer}).context(e.getSharedContext()),C.name="VSMVertical",C=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new fn),C.fragmentNode=_F({samples:w,radius:S,size:E,shadowPass:v,depthLayer:this.depthLayer}).context(e.getSharedContext()),C.name="VSMHorizontal"}const l=Gt("intensity","float",r).setGroup(ke),u=Gt("normalBias","float",r).setGroup(ke),h=vd(i).mul(Ug.add(Xr.mul(u))),d=this.setupShadowCoord(e,h),f=r.filterNode||this.getShadowFilterFn(t.shadowMap.type)||null;if(f===null)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const p=o===Li&&r.isPointLightShadow!==!0?this.vsmShadowMapHorizontal.texture:a,x=this.setupShadowFilter(e,{filterFn:f,shadowTexture:c.texture,depthTexture:p,shadowCoord:d,shadow:r,depthLayer:this.depthLayer});let g=xt(c.texture,d);a.isArrayTexture&&(g=g.depth(this.depthLayer));const m=Ct(1,x.rgb.mix(g,1),l.mul(g.a)).toVar();this.shadowMap=c,this.shadow.map=c;const b=`${this.light.type} Shadow [ ${this.light.name||"ID: "+this.light.id} ]`;return m.toInspector(`${b} / Color`,()=>xt(this.shadowMap.texture)).toInspector(`${b} / Depth`,()=>an(this.shadowMap.depthTexture,Vt().mul(ur(xt(this.shadowMap.depthTexture)))).x.oneMinus())}setup(e){if(e.renderer.shadowMap.enabled!==!1)return O(()=>{const t=e.renderer.shadowMap.type;this._currentShadowType!==t&&(this._reset(),this._node=null);let n=this._node;return this.setupShadowPosition(e),n===null&&(this._node=n=this.setupShadow(e),this._currentShadowType=t),e.material.shadowNode&&te('NodeMaterial: ".shadowNode" is deprecated. Use ".castShadowNode" instead.'),e.material.receivedShadowNode&&(n=e.material.receivedShadowNode(n)),n})()}renderShadow(e){const{shadow:t,shadowMap:n,light:i}=this,{renderer:r,scene:o}=e;t.updateMatrices(i),n.setSize(t.mapSize.width,t.mapSize.height,n.depth);const a=o.name;o.name=`Shadow Map [ ${i.name||"ID: "+i.id} ]`,r.render(o,t.camera),o.name=a}updateShadow(e){const{shadowMap:t,light:n,shadow:i}=this,{renderer:r,scene:o,camera:a}=e,c=r.shadowMap.type,l=t.depthTexture.version;this._depthVersionCached=l;const u=i.camera.layers.mask;(i.camera.layers.mask&4294967294)===0&&(i.camera.layers.mask=a.layers.mask);const h=r.getRenderObjectFunction(),d=r.getMRT(),f=d?d.has("velocity"):!1;wf=fF(r,o,wf),o.overrideMaterial=UT(n),r.setRenderObjectFunction(IT(r,i,c,f)),r.setClearColor(0,0),r.setRenderTarget(t),this.renderShadow(e),r.setRenderObjectFunction(h),c===Li&&i.isPointLightShadow!==!0&&this.vsmPass(r),i.camera.layers.mask=u,pF(r,o,wf)}vsmPass(e){const{shadow:t}=this,n=this.shadowMap.depth;this.vsmShadowMapVertical.setSize(t.mapSize.width,t.mapSize.height,n),this.vsmShadowMapHorizontal.setSize(t.mapSize.width,t.mapSize.height,n),e.setRenderTarget(this.vsmShadowMapVertical),$u.material=this.vsmMaterialVertical,$u.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),$u.material=this.vsmMaterialHorizontal,$u.render(e)}dispose(){this._reset(),super.dispose()}_reset(){this._currentShadowType=null,this.shadowMap&&(this.shadowMap.dispose(),this.shadowMap=null),this.vsmShadowMapVertical!==null&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),this.vsmShadowMapHorizontal!==null&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null)}updateBefore(e){const{shadow:t}=this;let n=t.needsUpdate||t.autoUpdate;n&&(this._cameraFrameId[e.camera]===e.frameId&&(n=!1),this._cameraFrameId[e.camera]=e.frameId),n&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}}const BT=(s,e)=>ee(new FT(s,e)),bF=new Ze,cs=O(([s,e])=>{const t=s.toVar(),n=$t(t),i=Gi(1,Jt(n.x,Jt(n.y,n.z)));n.mulAssign(i),t.mulAssign(i.mul(e.mul(2).oneMinus()));const r=ie(t.xy).toVar(),a=e.mul(1.5).oneMinus();return je(n.z.greaterThanEqual(a),()=>{je(t.z.greaterThan(0),()=>{r.x.assign(Tt(4,t.x))})}).ElseIf(n.x.greaterThanEqual(a),()=>{const c=Nl(t.x);r.x.assign(t.z.mul(c).add(c.mul(2)))}).ElseIf(n.y.greaterThanEqual(a),()=>{const c=Nl(t.y);r.x.assign(t.x.add(c.mul(2)).add(2)),r.y.assign(t.z.mul(c).sub(2))}),ie(.125,.25).mul(r).add(ie(.375,.75)).flipY()}).setLayout({name:"cubeToUV",type:"vec2",inputs:[{name:"pos",type:"vec3"},{name:"texelSizeY",type:"float"}]}),OT=O(({depthTexture:s,bd3D:e,dp:t,texelSize:n})=>xt(s,cs(e,n.y)).compare(t)),VT=O(({depthTexture:s,bd3D:e,dp:t,texelSize:n,shadow:i})=>{const r=Gt("radius","float",i).setGroup(ke),o=ie(-1,1).mul(r).mul(n.y);return xt(s,cs(e.add(o.xyy),n.y)).compare(t).add(xt(s,cs(e.add(o.yyy),n.y)).compare(t)).add(xt(s,cs(e.add(o.xyx),n.y)).compare(t)).add(xt(s,cs(e.add(o.yyx),n.y)).compare(t)).add(xt(s,cs(e,n.y)).compare(t)).add(xt(s,cs(e.add(o.xxy),n.y)).compare(t)).add(xt(s,cs(e.add(o.yxy),n.y)).compare(t)).add(xt(s,cs(e.add(o.xxx),n.y)).compare(t)).add(xt(s,cs(e.add(o.yxx),n.y)).compare(t)).mul(1/9)}),vF=O(({filterFn:s,depthTexture:e,shadowCoord:t,shadow:n})=>{const i=t.xyz.toVar(),r=i.length(),o=Ge("float").setGroup(ke).onRenderUpdate(()=>n.camera.near),a=Ge("float").setGroup(ke).onRenderUpdate(()=>n.camera.far),c=Gt("bias","float",n).setGroup(ke),l=Ge(n.mapSize).setGroup(ke),u=R(1).toVar();return je(r.sub(a).lessThanEqual(0).and(r.sub(o).greaterThanEqual(0)),()=>{const h=r.sub(o).div(a.sub(o)).toVar();h.addAssign(c);const d=i.normalize(),f=ie(1).div(l.mul(ie(4,2)));u.assign(s({depthTexture:e,bd3D:d,dp:h,texelSize:f,shadow:n}))}),u}),Qx=new Ke,ca=new oe,Bc=new oe;class SF extends FT{static get type(){return"PointShadowNode"}constructor(e,t=null){super(e,t)}getShadowFilterFn(e){return e===SM?OT:VT}setupShadowCoord(e,t){return t}setupShadowFilter(e,{filterFn:t,shadowTexture:n,depthTexture:i,shadowCoord:r,shadow:o}){return vF({filterFn:t,shadowTexture:n,depthTexture:i,shadowCoord:r,shadow:o})}renderShadow(e){const{shadow:t,shadowMap:n,light:i}=this,{renderer:r,scene:o}=e,a=t.getFrameExtents();Bc.copy(t.mapSize),Bc.multiply(a),n.setSize(Bc.width,Bc.height),ca.copy(t.mapSize);const c=r.autoClear,l=r.getClearColor(bF),u=r.getClearAlpha();r.autoClear=!1,r.setClearColor(t.clearColor,t.clearAlpha),r.clear();const h=t.getViewportCount();for(let d=0;d<h;d++){const f=t.getViewport(d),p=ca.x*f.x,x=Bc.y-ca.y-ca.y*f.y;Qx.set(p,x,ca.x*f.z,ca.y*f.w),n.viewport.copy(Qx),t.updateMatrices(i,d);const g=o.name;o.name=`Point Light Shadow [ ${i.name||"ID: "+i.id} ] - Face ${d+1}`,r.render(o,t.camera),o.name=g}r.autoClear=c,r.setClearColor(l,u)}}const GT=(s,e)=>ee(new SF(s,e));class Oo extends gc{static get type(){return"AnalyticLightNode"}constructor(e=null){super(),this.light=e,this.color=new Ze,this.colorNode=e&&e.colorNode||Ge(this.color).setGroup(ke),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0,this.updateType=at.FRAME}getHash(){return this.light.uuid}getLightVector(e){return Pg(this.light).sub(e.context.positionView||xn)}setupDirect(){}setupDirectRectArea(){}setupShadowNode(){return BT(this.light)}setupShadow(e){const{renderer:t}=e;if(t.shadowMap.enabled===!1)return;let n=this.shadowColorNode;if(n===null){const i=this.light.shadow.shadowNode;let r;i!==void 0?r=ee(i):r=this.setupShadowNode(),this.shadowNode=r,this.shadowColorNode=n=this.colorNode.mul(r),this.baseColorNode=this.colorNode}this.colorNode=n}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):this.shadowNode!==null&&(this.shadowNode.dispose(),this.shadowNode=null,this.shadowColorNode=null);const t=this.setupDirect(e),n=this.setupDirectRectArea(e);t&&e.lightsNode.setupDirectLight(e,this,t),n&&e.lightsNode.setupDirectRectAreaLight(e,this,n)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const Ig=O(({lightDistance:s,cutoffDistance:e,decayExponent:t})=>{const n=s.pow(t).max(.01).reciprocal();return e.greaterThan(0).select(n.mul(s.div(e).pow4().oneMinus().clamp().pow2()),n)}),zT=({color:s,lightVector:e,cutoffDistance:t,decayExponent:n})=>{const i=e.normalize(),r=e.length(),o=Ig({lightDistance:r,cutoffDistance:t,decayExponent:n}),a=s.mul(o);return{lightDirection:i,lightColor:a}};class TF extends Oo{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=Ge(0).setGroup(ke),this.decayExponentNode=Ge(2).setGroup(ke)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setupShadowNode(){return GT(this.light)}setupDirect(e){return zT({color:this.colorNode,lightVector:this.getLightVector(e),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode})}}const MF=O(([s=Vt()])=>{const e=s.mul(2),t=e.x.floor(),n=e.y.floor();return t.add(n).mod(2).sign()}),EF=O(([s=Vt()],{renderer:e,material:t})=>{const n=Wm(s.mul(2).sub(1));let i;if(t.alphaToCoverage&&e.currentSamples>0){const r=R(n.fwidth()).toVar();i=ms(r.oneMinus(),r.add(1),n).oneMinus()}else i=wn(n.greaterThan(1),0,1);return i}),sl=O(([s,e,t])=>{const n=R(t).toVar(),i=R(e).toVar(),r=Qi(s).toVar();return wn(r,i,n)}).setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),Ih=O(([s,e])=>{const t=Qi(e).toVar(),n=R(s).toVar();return wn(t,n.negate(),n)}).setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),Tn=O(([s])=>{const e=R(s).toVar();return U(Fs(e))}).setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),nn=O(([s,e])=>{const t=R(s).toVar();return e.assign(Tn(t)),t.sub(R(e))}),AF=O(([s,e,t,n,i,r])=>{const o=R(r).toVar(),a=R(i).toVar(),c=R(n).toVar(),l=R(t).toVar(),u=R(e).toVar(),h=R(s).toVar(),d=R(Tt(1,a)).toVar();return Tt(1,o).mul(h.mul(d).add(u.mul(a))).add(o.mul(l.mul(d).add(c.mul(a))))}).setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),wF=O(([s,e,t,n,i,r])=>{const o=R(r).toVar(),a=R(i).toVar(),c=F(n).toVar(),l=F(t).toVar(),u=F(e).toVar(),h=F(s).toVar(),d=R(Tt(1,a)).toVar();return Tt(1,o).mul(h.mul(d).add(u.mul(a))).add(o.mul(l.mul(d).add(c.mul(a))))}).setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]}),kT=Xn([AF,wF]),RF=O(([s,e,t,n,i,r,o,a,c,l,u])=>{const h=R(u).toVar(),d=R(l).toVar(),f=R(c).toVar(),p=R(a).toVar(),x=R(o).toVar(),g=R(r).toVar(),m=R(i).toVar(),b=R(n).toVar(),y=R(t).toVar(),v=R(e).toVar(),w=R(s).toVar(),S=R(Tt(1,f)).toVar(),E=R(Tt(1,d)).toVar();return R(Tt(1,h)).toVar().mul(E.mul(w.mul(S).add(v.mul(f))).add(d.mul(y.mul(S).add(b.mul(f))))).add(h.mul(E.mul(m.mul(S).add(g.mul(f))).add(d.mul(x.mul(S).add(p.mul(f))))))}).setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),NF=O(([s,e,t,n,i,r,o,a,c,l,u])=>{const h=R(u).toVar(),d=R(l).toVar(),f=R(c).toVar(),p=F(a).toVar(),x=F(o).toVar(),g=F(r).toVar(),m=F(i).toVar(),b=F(n).toVar(),y=F(t).toVar(),v=F(e).toVar(),w=F(s).toVar(),S=R(Tt(1,f)).toVar(),E=R(Tt(1,d)).toVar();return R(Tt(1,h)).toVar().mul(E.mul(w.mul(S).add(v.mul(f))).add(d.mul(y.mul(S).add(b.mul(f))))).add(h.mul(E.mul(m.mul(S).add(g.mul(f))).add(d.mul(x.mul(S).add(p.mul(f))))))}).setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),HT=Xn([RF,NF]),CF=O(([s,e,t])=>{const n=R(t).toVar(),i=R(e).toVar(),r=me(s).toVar(),o=me(r.bitAnd(me(7))).toVar(),a=R(sl(o.lessThan(me(4)),i,n)).toVar(),c=R(st(2,sl(o.lessThan(me(4)),n,i))).toVar();return Ih(a,Qi(o.bitAnd(me(1)))).add(Ih(c,Qi(o.bitAnd(me(2)))))}).setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),PF=O(([s,e,t,n])=>{const i=R(n).toVar(),r=R(t).toVar(),o=R(e).toVar(),a=me(s).toVar(),c=me(a.bitAnd(me(15))).toVar(),l=R(sl(c.lessThan(me(8)),o,r)).toVar(),u=R(sl(c.lessThan(me(4)),r,sl(c.equal(me(12)).or(c.equal(me(14))),o,i))).toVar();return Ih(l,Qi(c.bitAnd(me(1)))).add(Ih(u,Qi(c.bitAnd(me(2)))))}).setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),Bn=Xn([CF,PF]),LF=O(([s,e,t])=>{const n=R(t).toVar(),i=R(e).toVar(),r=fc(s).toVar();return F(Bn(r.x,i,n),Bn(r.y,i,n),Bn(r.z,i,n))}).setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),DF=O(([s,e,t,n])=>{const i=R(n).toVar(),r=R(t).toVar(),o=R(e).toVar(),a=fc(s).toVar();return F(Bn(a.x,o,r,i),Bn(a.y,o,r,i),Bn(a.z,o,r,i))}).setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),Hi=Xn([LF,DF]),UF=O(([s])=>{const e=R(s).toVar();return st(.6616,e)}).setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),IF=O(([s])=>{const e=R(s).toVar();return st(.982,e)}).setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),FF=O(([s])=>{const e=F(s).toVar();return st(.6616,e)}).setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),WT=Xn([UF,FF]),BF=O(([s])=>{const e=F(s).toVar();return st(.982,e)}).setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),$T=Xn([IF,BF]),Di=O(([s,e])=>{const t=U(e).toVar(),n=me(s).toVar();return n.shiftLeft(t).bitOr(n.shiftRight(U(32).sub(t)))}).setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),XT=O(([s,e,t])=>{s.subAssign(t),s.bitXorAssign(Di(t,U(4))),t.addAssign(e),e.subAssign(s),e.bitXorAssign(Di(s,U(6))),s.addAssign(t),t.subAssign(e),t.bitXorAssign(Di(e,U(8))),e.addAssign(s),s.subAssign(t),s.bitXorAssign(Di(t,U(16))),t.addAssign(e),e.subAssign(s),e.bitXorAssign(Di(s,U(19))),s.addAssign(t),t.subAssign(e),t.bitXorAssign(Di(e,U(4))),e.addAssign(s)}),Jl=O(([s,e,t])=>{const n=me(t).toVar(),i=me(e).toVar(),r=me(s).toVar();return n.bitXorAssign(i),n.subAssign(Di(i,U(14))),r.bitXorAssign(n),r.subAssign(Di(n,U(11))),i.bitXorAssign(r),i.subAssign(Di(r,U(25))),n.bitXorAssign(i),n.subAssign(Di(i,U(16))),r.bitXorAssign(n),r.subAssign(Di(n,U(4))),i.bitXorAssign(r),i.subAssign(Di(r,U(14))),n.bitXorAssign(i),n.subAssign(Di(i,U(24))),n}).setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),Qn=O(([s])=>{const e=me(s).toVar();return R(e).div(R(me(U(4294967295))))}).setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),Vs=O(([s])=>{const e=R(s).toVar();return e.mul(e).mul(e).mul(e.mul(e.mul(6).sub(15)).add(10))}).setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),OF=O(([s])=>{const e=U(s).toVar(),t=me(me(1)).toVar(),n=me(me(U(3735928559)).add(t.shiftLeft(me(2))).add(me(13))).toVar();return Jl(n.add(me(e)),n,n)}).setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),VF=O(([s,e])=>{const t=U(e).toVar(),n=U(s).toVar(),i=me(me(2)).toVar(),r=me().toVar(),o=me().toVar(),a=me().toVar();return r.assign(o.assign(a.assign(me(U(3735928559)).add(i.shiftLeft(me(2))).add(me(13))))),r.addAssign(me(n)),o.addAssign(me(t)),Jl(r,o,a)}).setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),GF=O(([s,e,t])=>{const n=U(t).toVar(),i=U(e).toVar(),r=U(s).toVar(),o=me(me(3)).toVar(),a=me().toVar(),c=me().toVar(),l=me().toVar();return a.assign(c.assign(l.assign(me(U(3735928559)).add(o.shiftLeft(me(2))).add(me(13))))),a.addAssign(me(r)),c.addAssign(me(i)),l.addAssign(me(n)),Jl(a,c,l)}).setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),zF=O(([s,e,t,n])=>{const i=U(n).toVar(),r=U(t).toVar(),o=U(e).toVar(),a=U(s).toVar(),c=me(me(4)).toVar(),l=me().toVar(),u=me().toVar(),h=me().toVar();return l.assign(u.assign(h.assign(me(U(3735928559)).add(c.shiftLeft(me(2))).add(me(13))))),l.addAssign(me(a)),u.addAssign(me(o)),h.addAssign(me(r)),XT(l,u,h),l.addAssign(me(i)),Jl(l,u,h)}).setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),kF=O(([s,e,t,n,i])=>{const r=U(i).toVar(),o=U(n).toVar(),a=U(t).toVar(),c=U(e).toVar(),l=U(s).toVar(),u=me(me(5)).toVar(),h=me().toVar(),d=me().toVar(),f=me().toVar();return h.assign(d.assign(f.assign(me(U(3735928559)).add(u.shiftLeft(me(2))).add(me(13))))),h.addAssign(me(l)),d.addAssign(me(c)),f.addAssign(me(a)),XT(h,d,f),h.addAssign(me(o)),d.addAssign(me(r)),Jl(h,d,f)}).setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]}),Ot=Xn([OF,VF,GF,zF,kF]),HF=O(([s,e])=>{const t=U(e).toVar(),n=U(s).toVar(),i=me(Ot(n,t)).toVar(),r=fc().toVar();return r.x.assign(i.bitAnd(U(255))),r.y.assign(i.shiftRight(U(8)).bitAnd(U(255))),r.z.assign(i.shiftRight(U(16)).bitAnd(U(255))),r}).setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),WF=O(([s,e,t])=>{const n=U(t).toVar(),i=U(e).toVar(),r=U(s).toVar(),o=me(Ot(r,i,n)).toVar(),a=fc().toVar();return a.x.assign(o.bitAnd(U(255))),a.y.assign(o.shiftRight(U(8)).bitAnd(U(255))),a.z.assign(o.shiftRight(U(16)).bitAnd(U(255))),a}).setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),Wi=Xn([HF,WF]),$F=O(([s])=>{const e=ie(s).toVar(),t=U().toVar(),n=U().toVar(),i=R(nn(e.x,t)).toVar(),r=R(nn(e.y,n)).toVar(),o=R(Vs(i)).toVar(),a=R(Vs(r)).toVar(),c=R(kT(Bn(Ot(t,n),i,r),Bn(Ot(t.add(U(1)),n),i.sub(1),r),Bn(Ot(t,n.add(U(1))),i,r.sub(1)),Bn(Ot(t.add(U(1)),n.add(U(1))),i.sub(1),r.sub(1)),o,a)).toVar();return WT(c)}).setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),XF=O(([s])=>{const e=F(s).toVar(),t=U().toVar(),n=U().toVar(),i=U().toVar(),r=R(nn(e.x,t)).toVar(),o=R(nn(e.y,n)).toVar(),a=R(nn(e.z,i)).toVar(),c=R(Vs(r)).toVar(),l=R(Vs(o)).toVar(),u=R(Vs(a)).toVar(),h=R(HT(Bn(Ot(t,n,i),r,o,a),Bn(Ot(t.add(U(1)),n,i),r.sub(1),o,a),Bn(Ot(t,n.add(U(1)),i),r,o.sub(1),a),Bn(Ot(t.add(U(1)),n.add(U(1)),i),r.sub(1),o.sub(1),a),Bn(Ot(t,n,i.add(U(1))),r,o,a.sub(1)),Bn(Ot(t.add(U(1)),n,i.add(U(1))),r.sub(1),o,a.sub(1)),Bn(Ot(t,n.add(U(1)),i.add(U(1))),r,o.sub(1),a.sub(1)),Bn(Ot(t.add(U(1)),n.add(U(1)),i.add(U(1))),r.sub(1),o.sub(1),a.sub(1)),c,l,u)).toVar();return $T(h)}).setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]}),Fg=Xn([$F,XF]),qF=O(([s])=>{const e=ie(s).toVar(),t=U().toVar(),n=U().toVar(),i=R(nn(e.x,t)).toVar(),r=R(nn(e.y,n)).toVar(),o=R(Vs(i)).toVar(),a=R(Vs(r)).toVar(),c=F(kT(Hi(Wi(t,n),i,r),Hi(Wi(t.add(U(1)),n),i.sub(1),r),Hi(Wi(t,n.add(U(1))),i,r.sub(1)),Hi(Wi(t.add(U(1)),n.add(U(1))),i.sub(1),r.sub(1)),o,a)).toVar();return WT(c)}).setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),YF=O(([s])=>{const e=F(s).toVar(),t=U().toVar(),n=U().toVar(),i=U().toVar(),r=R(nn(e.x,t)).toVar(),o=R(nn(e.y,n)).toVar(),a=R(nn(e.z,i)).toVar(),c=R(Vs(r)).toVar(),l=R(Vs(o)).toVar(),u=R(Vs(a)).toVar(),h=F(HT(Hi(Wi(t,n,i),r,o,a),Hi(Wi(t.add(U(1)),n,i),r.sub(1),o,a),Hi(Wi(t,n.add(U(1)),i),r,o.sub(1),a),Hi(Wi(t.add(U(1)),n.add(U(1)),i),r.sub(1),o.sub(1),a),Hi(Wi(t,n,i.add(U(1))),r,o,a.sub(1)),Hi(Wi(t.add(U(1)),n,i.add(U(1))),r.sub(1),o,a.sub(1)),Hi(Wi(t,n.add(U(1)),i.add(U(1))),r,o.sub(1),a.sub(1)),Hi(Wi(t.add(U(1)),n.add(U(1)),i.add(U(1))),r.sub(1),o.sub(1),a.sub(1)),c,l,u)).toVar();return $T(h)}).setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),eu=Xn([qF,YF]),jF=O(([s])=>{const e=R(s).toVar(),t=U(Tn(e)).toVar();return Qn(Ot(t))}).setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),KF=O(([s])=>{const e=ie(s).toVar(),t=U(Tn(e.x)).toVar(),n=U(Tn(e.y)).toVar();return Qn(Ot(t,n))}).setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),ZF=O(([s])=>{const e=F(s).toVar(),t=U(Tn(e.x)).toVar(),n=U(Tn(e.y)).toVar(),i=U(Tn(e.z)).toVar();return Qn(Ot(t,n,i))}).setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),QF=O(([s])=>{const e=$e(s).toVar(),t=U(Tn(e.x)).toVar(),n=U(Tn(e.y)).toVar(),i=U(Tn(e.z)).toVar(),r=U(Tn(e.w)).toVar();return Qn(Ot(t,n,i,r))}).setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]}),JF=Xn([jF,KF,ZF,QF]),eB=O(([s])=>{const e=R(s).toVar(),t=U(Tn(e)).toVar();return F(Qn(Ot(t,U(0))),Qn(Ot(t,U(1))),Qn(Ot(t,U(2))))}).setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),tB=O(([s])=>{const e=ie(s).toVar(),t=U(Tn(e.x)).toVar(),n=U(Tn(e.y)).toVar();return F(Qn(Ot(t,n,U(0))),Qn(Ot(t,n,U(1))),Qn(Ot(t,n,U(2))))}).setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),nB=O(([s])=>{const e=F(s).toVar(),t=U(Tn(e.x)).toVar(),n=U(Tn(e.y)).toVar(),i=U(Tn(e.z)).toVar();return F(Qn(Ot(t,n,i,U(0))),Qn(Ot(t,n,i,U(1))),Qn(Ot(t,n,i,U(2))))}).setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),iB=O(([s])=>{const e=$e(s).toVar(),t=U(Tn(e.x)).toVar(),n=U(Tn(e.y)).toVar(),i=U(Tn(e.z)).toVar(),r=U(Tn(e.w)).toVar();return F(Qn(Ot(t,n,i,r,U(0))),Qn(Ot(t,n,i,r,U(1))),Qn(Ot(t,n,i,r,U(2))))}).setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]}),Sd=Xn([eB,tB,nB,iB]),Fh=O(([s,e,t,n])=>{const i=R(n).toVar(),r=R(t).toVar(),o=U(e).toVar(),a=F(s).toVar(),c=R(0).toVar(),l=R(1).toVar();return Ft(o,()=>{c.addAssign(l.mul(Fg(a))),l.mulAssign(i),a.mulAssign(r)}),c}).setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),Td=O(([s,e,t,n])=>{const i=R(n).toVar(),r=R(t).toVar(),o=U(e).toVar(),a=F(s).toVar(),c=F(0).toVar(),l=R(1).toVar();return Ft(o,()=>{c.addAssign(l.mul(eu(a))),l.mulAssign(i),a.mulAssign(r)}),c}).setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),sB=O(([s,e,t,n])=>{const i=R(n).toVar(),r=R(t).toVar(),o=U(e).toVar(),a=F(s).toVar();return ie(Fh(a,o,r,i),Fh(a.add(F(U(19),U(193),U(17))),o,r,i))}).setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),rB=O(([s,e,t,n])=>{const i=R(n).toVar(),r=R(t).toVar(),o=U(e).toVar(),a=F(s).toVar(),c=F(Td(a,o,r,i)).toVar(),l=R(Fh(a.add(F(U(19),U(193),U(17))),o,r,i)).toVar();return $e(c,l)}).setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),oB=O(([s,e,t,n,i,r,o])=>{const a=U(o).toVar(),c=R(r).toVar(),l=U(i).toVar(),u=U(n).toVar(),h=U(t).toVar(),d=U(e).toVar(),f=ie(s).toVar(),p=F(Sd(ie(d.add(u),h.add(l)))).toVar(),x=ie(p.x,p.y).toVar();x.subAssign(.5),x.mulAssign(c),x.addAssign(.5);const g=ie(ie(R(d),R(h)).add(x)).toVar(),m=ie(g.sub(f)).toVar();return je(a.equal(U(2)),()=>$t(m.x).add($t(m.y))),je(a.equal(U(3)),()=>Jt($t(m.x),$t(m.y))),ps(m,m)}).setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),aB=O(([s,e,t,n,i,r,o,a,c])=>{const l=U(c).toVar(),u=R(a).toVar(),h=U(o).toVar(),d=U(r).toVar(),f=U(i).toVar(),p=U(n).toVar(),x=U(t).toVar(),g=U(e).toVar(),m=F(s).toVar(),b=F(Sd(F(g.add(f),x.add(d),p.add(h)))).toVar();b.subAssign(.5),b.mulAssign(u),b.addAssign(.5);const y=F(F(R(g),R(x),R(p)).add(b)).toVar(),v=F(y.sub(m)).toVar();return je(l.equal(U(2)),()=>$t(v.x).add($t(v.y)).add($t(v.z))),je(l.equal(U(3)),()=>Jt($t(v.x),$t(v.y),$t(v.z))),ps(v,v)}).setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),_c=Xn([oB,aB]),cB=O(([s,e,t])=>{const n=U(t).toVar(),i=R(e).toVar(),r=ie(s).toVar(),o=U().toVar(),a=U().toVar(),c=ie(nn(r.x,o),nn(r.y,a)).toVar(),l=R(1e6).toVar();return Ft({start:-1,end:U(1),name:"x",condition:"<="},({x:u})=>{Ft({start:-1,end:U(1),name:"y",condition:"<="},({y:h})=>{const d=R(_c(c,u,h,o,a,i,n)).toVar();l.assign(Mi(l,d))})}),je(n.equal(U(0)),()=>{l.assign(_i(l))}),l}).setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),lB=O(([s,e,t])=>{const n=U(t).toVar(),i=R(e).toVar(),r=ie(s).toVar(),o=U().toVar(),a=U().toVar(),c=ie(nn(r.x,o),nn(r.y,a)).toVar(),l=ie(1e6,1e6).toVar();return Ft({start:-1,end:U(1),name:"x",condition:"<="},({x:u})=>{Ft({start:-1,end:U(1),name:"y",condition:"<="},({y:h})=>{const d=R(_c(c,u,h,o,a,i,n)).toVar();je(d.lessThan(l.x),()=>{l.y.assign(l.x),l.x.assign(d)}).ElseIf(d.lessThan(l.y),()=>{l.y.assign(d)})})}),je(n.equal(U(0)),()=>{l.assign(_i(l))}),l}).setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),uB=O(([s,e,t])=>{const n=U(t).toVar(),i=R(e).toVar(),r=ie(s).toVar(),o=U().toVar(),a=U().toVar(),c=ie(nn(r.x,o),nn(r.y,a)).toVar(),l=F(1e6,1e6,1e6).toVar();return Ft({start:-1,end:U(1),name:"x",condition:"<="},({x:u})=>{Ft({start:-1,end:U(1),name:"y",condition:"<="},({y:h})=>{const d=R(_c(c,u,h,o,a,i,n)).toVar();je(d.lessThan(l.x),()=>{l.z.assign(l.y),l.y.assign(l.x),l.x.assign(d)}).ElseIf(d.lessThan(l.y),()=>{l.z.assign(l.y),l.y.assign(d)}).ElseIf(d.lessThan(l.z),()=>{l.z.assign(d)})})}),je(n.equal(U(0)),()=>{l.assign(_i(l))}),l}).setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),hB=O(([s,e,t])=>{const n=U(t).toVar(),i=R(e).toVar(),r=F(s).toVar(),o=U().toVar(),a=U().toVar(),c=U().toVar(),l=F(nn(r.x,o),nn(r.y,a),nn(r.z,c)).toVar(),u=R(1e6).toVar();return Ft({start:-1,end:U(1),name:"x",condition:"<="},({x:h})=>{Ft({start:-1,end:U(1),name:"y",condition:"<="},({y:d})=>{Ft({start:-1,end:U(1),name:"z",condition:"<="},({z:f})=>{const p=R(_c(l,h,d,f,o,a,c,i,n)).toVar();u.assign(Mi(u,p))})})}),je(n.equal(U(0)),()=>{u.assign(_i(u))}),u}).setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),dB=Xn([cB,hB]),fB=O(([s,e,t])=>{const n=U(t).toVar(),i=R(e).toVar(),r=F(s).toVar(),o=U().toVar(),a=U().toVar(),c=U().toVar(),l=F(nn(r.x,o),nn(r.y,a),nn(r.z,c)).toVar(),u=ie(1e6,1e6).toVar();return Ft({start:-1,end:U(1),name:"x",condition:"<="},({x:h})=>{Ft({start:-1,end:U(1),name:"y",condition:"<="},({y:d})=>{Ft({start:-1,end:U(1),name:"z",condition:"<="},({z:f})=>{const p=R(_c(l,h,d,f,o,a,c,i,n)).toVar();je(p.lessThan(u.x),()=>{u.y.assign(u.x),u.x.assign(p)}).ElseIf(p.lessThan(u.y),()=>{u.y.assign(p)})})})}),je(n.equal(U(0)),()=>{u.assign(_i(u))}),u}).setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),pB=Xn([lB,fB]),mB=O(([s,e,t])=>{const n=U(t).toVar(),i=R(e).toVar(),r=F(s).toVar(),o=U().toVar(),a=U().toVar(),c=U().toVar(),l=F(nn(r.x,o),nn(r.y,a),nn(r.z,c)).toVar(),u=F(1e6,1e6,1e6).toVar();return Ft({start:-1,end:U(1),name:"x",condition:"<="},({x:h})=>{Ft({start:-1,end:U(1),name:"y",condition:"<="},({y:d})=>{Ft({start:-1,end:U(1),name:"z",condition:"<="},({z:f})=>{const p=R(_c(l,h,d,f,o,a,c,i,n)).toVar();je(p.lessThan(u.x),()=>{u.z.assign(u.y),u.y.assign(u.x),u.x.assign(p)}).ElseIf(p.lessThan(u.y),()=>{u.z.assign(u.y),u.y.assign(p)}).ElseIf(p.lessThan(u.z),()=>{u.z.assign(p)})})})}),je(n.equal(U(0)),()=>{u.assign(_i(u))}),u}).setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),Bg=Xn([uB,mB]),gB=O(([s,e,t,n,i,r,o,a,c,l,u])=>{const h=U(s).toVar(),d=ie(e).toVar(),f=ie(t).toVar(),p=ie(n).toVar(),x=R(i).toVar(),g=R(r).toVar(),m=R(o).toVar(),b=Qi(a).toVar(),y=U(c).toVar(),v=R(l).toVar(),w=R(u).toVar(),S=d.mul(f).add(p),E=R(0).toVar();return je(h.equal(U(0)),()=>{E.assign(eu(S))}),je(h.equal(U(1)),()=>{E.assign(Sd(S))}),je(h.equal(U(2)),()=>{E.assign(Bg(S,x,U(0)))}),je(h.equal(U(3)),()=>{E.assign(Td(F(S,0),y,v,w))}),E.assign(E.mul(m.sub(g)).add(g)),je(b,()=>{E.assign(Ji(E,g,m))}),E}).setLayout({name:"mx_unifiednoise2d",type:"float",inputs:[{name:"noiseType",type:"int"},{name:"texcoord",type:"vec2"},{name:"freq",type:"vec2"},{name:"offset",type:"vec2"},{name:"jitter",type:"float"},{name:"outmin",type:"float"},{name:"outmax",type:"float"},{name:"clampoutput",type:"bool"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),xB=O(([s,e,t,n,i,r,o,a,c,l,u])=>{const h=U(s).toVar(),d=F(e).toVar(),f=F(t).toVar(),p=F(n).toVar(),x=R(i).toVar(),g=R(r).toVar(),m=R(o).toVar(),b=Qi(a).toVar(),y=U(c).toVar(),v=R(l).toVar(),w=R(u).toVar(),S=d.mul(f).add(p),E=R(0).toVar();return je(h.equal(U(0)),()=>{E.assign(eu(S))}),je(h.equal(U(1)),()=>{E.assign(Sd(S))}),je(h.equal(U(2)),()=>{E.assign(Bg(S,x,U(0)))}),je(h.equal(U(3)),()=>{E.assign(Td(S,y,v,w))}),E.assign(E.mul(m.sub(g)).add(g)),je(b,()=>{E.assign(Ji(E,g,m))}),E}).setLayout({name:"mx_unifiednoise3d",type:"float",inputs:[{name:"noiseType",type:"int"},{name:"position",type:"vec3"},{name:"freq",type:"vec3"},{name:"offset",type:"vec3"},{name:"jitter",type:"float"},{name:"outmin",type:"float"},{name:"outmax",type:"float"},{name:"clampoutput",type:"bool"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),_B=O(([s])=>{const e=s.y,t=s.z,n=F().toVar();return je(e.lessThan(1e-4),()=>{n.assign(F(t,t,t))}).Else(()=>{let i=s.x;i=i.sub(Fs(i)).mul(6).toVar();const r=U(Gm(i)),o=i.sub(R(r)),a=t.mul(e.oneMinus()),c=t.mul(e.mul(o).oneMinus()),l=t.mul(e.mul(o.oneMinus()).oneMinus());je(r.equal(U(0)),()=>{n.assign(F(t,l,a))}).ElseIf(r.equal(U(1)),()=>{n.assign(F(c,t,a))}).ElseIf(r.equal(U(2)),()=>{n.assign(F(a,t,l))}).ElseIf(r.equal(U(3)),()=>{n.assign(F(a,c,t))}).ElseIf(r.equal(U(4)),()=>{n.assign(F(l,a,t))}).Else(()=>{n.assign(F(t,a,c))})}),n}).setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),yB=O(([s])=>{const e=F(s).toVar(),t=R(e.x).toVar(),n=R(e.y).toVar(),i=R(e.z).toVar(),r=R(Mi(t,Mi(n,i))).toVar(),o=R(Jt(t,Jt(n,i))).toVar(),a=R(o.sub(r)).toVar(),c=R().toVar(),l=R().toVar(),u=R().toVar();return u.assign(o),je(o.greaterThan(0),()=>{l.assign(a.div(o))}).Else(()=>{l.assign(0)}),je(l.lessThanEqual(0),()=>{c.assign(0)}).Else(()=>{je(t.greaterThanEqual(o),()=>{c.assign(n.sub(i).div(a))}).ElseIf(n.greaterThanEqual(o),()=>{c.assign(Mn(2,i.sub(t).div(a)))}).Else(()=>{c.assign(Mn(4,t.sub(n).div(a)))}),c.mulAssign(1/6),je(c.lessThan(0),()=>{c.addAssign(1)})}),F(c,l,u)}).setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]}),bB=O(([s])=>{const e=F(s).toVar(),t=Mm(Dm(e,F(.04045))).toVar(),n=F(e.div(12.92)).toVar(),i=F(Xi(Jt(e.add(F(.055)),F(0)).div(1.055),F(2.4))).toVar();return Ct(n,i,t)}).setLayout({name:"mx_srgb_texture_to_lin_rec709",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),qT=(s,e)=>{s=R(s),e=R(e);const t=ie(e.dFdx(),e.dFdy()).length().mul(.7071067811865476);return ms(s.sub(t),s.add(t),e)},YT=(s,e,t,n)=>Ct(s,e,t[n].clamp()),vB=(s,e,t=Vt())=>YT(s,e,t,"x"),SB=(s,e,t=Vt())=>YT(s,e,t,"y"),TB=(s,e,t,n,i=Vt())=>{const r=i.x.clamp(),o=i.y.clamp(),a=Ct(s,e,r),c=Ct(t,n,r);return Ct(a,c,o)},jT=(s,e,t,n,i)=>Ct(s,e,qT(t,n[i])),MB=(s,e,t,n=Vt())=>jT(s,e,t,n,"x"),EB=(s,e,t,n=Vt())=>jT(s,e,t,n,"y"),AB=(s=1,e=0,t=Vt())=>t.mul(s).add(e),wB=(s,e=1)=>(s=R(s),s.abs().pow(e).mul(s.sign())),RB=(s,e=1,t=.5)=>R(s).sub(t).mul(e).add(t),NB=(s=Vt(),e=1,t=0)=>Fg(s.convert("vec2|vec3")).mul(e).add(t),CB=(s=Vt(),e=1,t=0)=>eu(s.convert("vec2|vec3")).mul(e).add(t),PB=(s=Vt(),e=1,t=0)=>(s=s.convert("vec2|vec3"),$e(eu(s),Fg(s.add(ie(19,73)))).mul(e).add(t)),LB=(s,e=Vt(),t=ie(1,1),n=ie(0,0),i=1,r=0,o=1,a=!1,c=1,l=2,u=.5)=>gB(s,e.convert("vec2|vec3"),t,n,i,r,o,a,c,l,u),DB=(s,e=Vt(),t=ie(1,1),n=ie(0,0),i=1,r=0,o=1,a=!1,c=1,l=2,u=.5)=>xB(s,e.convert("vec2|vec3"),t,n,i,r,o,a,c,l,u),UB=(s=Vt(),e=1)=>dB(s.convert("vec2|vec3"),e,U(1)),IB=(s=Vt(),e=1)=>pB(s.convert("vec2|vec3"),e,U(1)),FB=(s=Vt(),e=1)=>Bg(s.convert("vec2|vec3"),e,U(1)),BB=(s=Vt())=>JF(s.convert("vec2|vec3")),OB=(s=Vt(),e=3,t=2,n=.5,i=1)=>Fh(s,U(e),t,n).mul(i),VB=(s=Vt(),e=3,t=2,n=.5,i=1)=>sB(s,U(e),t,n).mul(i),GB=(s=Vt(),e=3,t=2,n=.5,i=1)=>Td(s,U(e),t,n).mul(i),zB=(s=Vt(),e=3,t=2,n=.5,i=1)=>rB(s,U(e),t,n).mul(i),kB=(s,e=R(0))=>Mn(s,e),HB=(s,e=R(0))=>Tt(s,e),WB=(s,e=R(1))=>st(s,e),$B=(s,e=R(1))=>Gi(s,e),XB=(s,e=R(1))=>Hl(s,e),qB=(s,e=R(1))=>Xi(s,e),YB=(s=R(0),e=R(1))=>sd(s,e),jB=()=>xc,KB=()=>lT,ZB=(s,e=R(1))=>Tt(e,s),QB=(s,e,t,n)=>s.greaterThan(e).mix(t,n),JB=(s,e,t,n)=>s.greaterThanEqual(e).mix(t,n),eO=(s,e,t,n)=>s.equal(e).mix(t,n),tO=(s,e=null)=>{if(typeof e=="string"){const t={x:0,r:0,y:1,g:1,z:2,b:2,w:3,a:3},n=e.replace(/^out/,"").toLowerCase();if(t[n]!==void 0)return s.element(t[n])}if(typeof e=="number")return s.element(e);if(typeof e=="string"&&e.length===1){const t={x:0,r:0,y:1,g:1,z:2,b:2,w:3,a:3};if(t[e]!==void 0)return s.element(t[e])}return s},nO=(s,e=ie(.5,.5),t=ie(1,1),n=R(0),i=ie(0,0))=>{let r=s;if(e&&(r=r.sub(e)),t&&(r=r.mul(t)),n){const o=n.mul(Math.PI/180),a=o.cos(),c=o.sin();r=ie(r.x.mul(a).sub(r.y.mul(c)),r.x.mul(c).add(r.y.mul(a)))}return e&&(r=r.add(e)),i&&(r=r.add(i)),r},iO=(s,e)=>{s=ie(s),e=R(e);const t=e.mul(Math.PI/180);return Kl(s,t)},sO=(s,e,t)=>{s=F(s),e=R(e),t=F(t);const n=e.mul(Math.PI/180),i=t.normalize(),r=n.cos(),o=n.sin(),a=R(1).sub(r);return s.mul(r).add(i.cross(s).mul(o)).add(i.mul(i.dot(s)).mul(a))},rO=(s,e)=>(s=F(s),e=R(e),lg(s,e)),oO=O(([s,e,t])=>{const n=Si(s).toVar(),i=Tt(R(.5).mul(e.sub(t)),Os).div(n).toVar(),r=Tt(R(-.5).mul(e.sub(t)),Os).div(n).toVar(),o=F().toVar();o.x=n.x.greaterThan(R(0)).select(i.x,r.x),o.y=n.y.greaterThan(R(0)).select(i.y,r.y),o.z=n.z.greaterThan(R(0)).select(i.z,r.z);const a=Mi(o.x,o.y,o.z).toVar();return Os.add(n.mul(a)).toVar().sub(t)}),KT=O(([s,e])=>{const t=s.x,n=s.y,i=s.z;let r=e.element(0).mul(.886227);return r=r.add(e.element(1).mul(2*.511664).mul(n)),r=r.add(e.element(2).mul(2*.511664).mul(i)),r=r.add(e.element(3).mul(2*.511664).mul(t)),r=r.add(e.element(4).mul(2*.429043).mul(t).mul(n)),r=r.add(e.element(5).mul(2*.429043).mul(n).mul(i)),r=r.add(e.element(6).mul(i.mul(i).mul(.743125).sub(.247708))),r=r.add(e.element(7).mul(2*.429043).mul(t).mul(i)),r=r.add(e.element(8).mul(.429043).mul(st(t,t).sub(st(n,n)))),r});var _=Object.freeze({__proto__:null,BRDF_GGX:vg,BRDF_Lambert:Lo,BasicPointShadowFilter:OT,BasicShadowFilter:CT,Break:MS,Const:Wb,Continue:tP,DFGApprox:Cl,D_GGX:HS,Discard:av,EPSILON:Um,F_Schlick:oc,Fn:O,HALF_PI:RC,INFINITY:EC,If:je,Loop:Ft,NodeAccess:$n,NodeShaderStage:$c,NodeType:YN,NodeUpdateType:at,OnBeforeMaterialUpdate:yU,OnBeforeObjectUpdate:_U,OnMaterialUpdate:xU,OnObjectUpdate:gU,PCFShadowFilter:PT,PCFSoftShadowFilter:LT,PI:Nh,PI2:AC,PointShadowFilter:VT,Return:WC,Schlick_to_F0:$S,ScriptableNodeResources:xh,ShaderNode:xa,Stack:Zh,Switch:gC,TBNViewMatrix:xo,TWO_PI:wC,VSMShadowFilter:DT,V_GGX_SmithCorrelated:kS,Var:Hb,VarIntent:$b,abs:$t,acesFilmicToneMapping:vT,acos:Bm,add:Mn,addMethodChaining:Z,addNodeElement:YC,agxToneMapping:ST,all:mb,alphaT:Ah,and:eb,anisotropy:Ar,anisotropyB:So,anisotropyT:el,any:gb,append:bC,array:qy,arrayBuffer:_C,asin:bb,assign:Yy,atan:sd,atan2:Vb,atomicAdd:EI,atomicAnd:NI,atomicFunc:qs,atomicLoad:TI,atomicMax:wI,atomicMin:RI,atomicOr:CI,atomicStore:MI,atomicSub:AI,atomicXor:PI,attenuationColor:Nm,attenuationDistance:Rm,attribute:pr,attributeArray:SU,backgroundBlurriness:dT,backgroundIntensity:Tp,backgroundRotation:fT,batch:vS,bentNormalView:Vv,billboarding:QD,bitAnd:sb,bitNot:rb,bitOr:ob,bitXor:ab,bitangentGeometry:U2,bitangentLocal:I2,bitangentView:Bv,bitangentWorld:F2,bitcast:LD,blendBurn:CS,blendColor:_P,blendDodge:PS,blendOverlay:DS,blendScreen:LS,blur:ZS,bool:Qi,buffer:Xl,bufferAttribute:$l,builtin:gr,bumpMap:lg,burn:bP,bvec2:By,bvec3:Mm,bvec4:zy,bypass:iv,cache:nv,call:jy,cameraFar:Rr,cameraIndex:$r,cameraNear:wr,cameraNormalMatrix:l2,cameraPosition:mv,cameraProjectionMatrix:pc,cameraProjectionMatrixInverse:a2,cameraViewMatrix:ns,cameraViewport:u2,cameraWorldMatrix:c2,cbrt:Ub,cdl:OU,ceil:id,checker:MF,cineonToneMapping:bT,clamp:Ji,clearcoat:Eh,clearcoatNormalView:go,clearcoatRoughness:wl,code:yd,color:Iy,colorSpaceToWorking:od,colorToDirection:CP,compute:tv,computeKernel:Qm,computeSkinning:J2,context:Wl,convert:Hy,convertColorSpace:IC,convertToTexture:uU,cos:Ns,cross:Co,cubeTexture:rc,cubeTextureBase:cg,cubeToUV:cs,dFdx:Om,dFdy:Vm,dashSize:uh,debug:lv,decrement:fb,decrementBefore:hb,defaultBuildStages:rp,defaultShaderStages:Ny,defined:Tl,degrees:_b,deltaTime:$D,densityFog:oI,densityFogFactor:Rg,depth:xg,depthPass:HU,determinant:Ab,difference:Pb,diffuseColor:Nt,directPointLight:zT,directionToColor:IS,directionToFaceDirection:mc,dispersion:Cm,distance:Cb,div:Gi,dodge:vP,dot:ps,drawIndex:_S,dynamicBufferAttribute:ev,element:ky,emissive:lp,equal:Lm,equals:Rb,equirectUV:_g,exp:Im,exp2:ic,expression:fr,faceDirection:rg,faceForward:qm,faceforward:NC,float:R,floatBitsToInt:DD,floatBitsToUint:UD,floor:Fs,fog:Ll,fract:fs,frameGroup:Xy,frameId:lT,frontFacing:yv,fwidth:zm,gain:OD,gapSize:up,getConstNodeType:Uy,getCurrentStack:Tm,getDirection:jS,getDistanceAttenuation:Ig,getGeometryRoughness:zS,getNormalFromDepth:dU,getParallaxCorrectNormal:oO,getRoughness:bg,getScreenPosition:hU,getShIrradianceAt:KT,getShadowMaterial:UT,getShadowRenderObjectFunction:IT,getTextureIndex:aT,getViewPosition:pa,ggxConvolution:QS,globalId:dI,glsl:QU,glslFn:JU,grayscale:UU,greaterThan:Dm,greaterThanEqual:Jy,hash:BD,highpModelNormalViewMatrix:fp,highpModelViewMatrix:dp,hue:BU,increment:db,incrementBefore:ub,inspector:hv,instance:X2,instanceIndex:Or,instancedArray:TU,instancedBufferAttribute:Ch,instancedDynamicBufferAttribute:hp,instancedMesh:bS,int:U,intBitsToFloat:ID,interleavedGradientNoise:fU,inverse:wb,inverseSqrt:Fm,inversesqrt:CC,invocationLocalIndex:$2,invocationSubgroupIndex:W2,ior:tl,iridescence:ed,iridescenceIOR:Em,iridescenceThickness:Am,isolate:Ma,ivec2:Pn,ivec3:Oy,ivec4:Vy,js:KU,label:kb,length:Bs,lengthSq:Wm,lessThan:Zy,lessThanEqual:Qy,lightPosition:Cg,lightProjectionUV:RT,lightShadowMatrix:vd,lightTargetDirection:Lg,lightTargetPosition:NT,lightViewPosition:Pg,lightingContext:AS,lights:rF,linearDepth:Lh,linearToneMapping:_T,localId:fI,log:nd,log2:Is,logarithmicDepthToViewZ:uP,luminance:Ag,mat2:Qh,mat3:ei,mat4:vo,matcapUV:eT,materialAO:gS,materialAlphaTest:Gv,materialAnisotropy:tS,materialAnisotropyVector:fa,materialAttenuationColor:lS,materialAttenuationDistance:cS,materialClearcoat:jv,materialClearcoatNormal:Zv,materialClearcoatRoughness:Kv,materialColor:zv,materialDispersion:mS,materialEmissive:Hv,materialEnvIntensity:fh,materialEnvRotation:ag,materialIOR:aS,materialIridescence:nS,materialIridescenceIOR:iS,materialIridescenceThickness:sS,materialLightMap:hg,materialLineDashOffset:fS,materialLineDashSize:hS,materialLineGapSize:dS,materialLineScale:uS,materialLineWidth:k2,materialMetalness:qv,materialNormal:Yv,materialOpacity:ug,materialPointSize:pS,materialReference:or,materialReflectivity:ph,materialRefractionRatio:Tv,materialRotation:Qv,materialRoughness:Xv,materialSheen:Jv,materialSheenRoughness:eS,materialShininess:kv,materialSpecular:Wv,materialSpecularColor:$v,materialSpecularIntensity:_p,materialSpecularStrength:nl,materialThickness:oS,materialTransmission:rS,max:Jt,maxMipLevel:Jm,mediumpModelViewMatrix:_v,metalness:Al,min:Mi,mix:Ct,mixElement:Fb,mod:Hl,modInt:pb,modelDirection:g2,modelNormalMatrix:xv,modelPosition:x2,modelRadius:b2,modelScale:_2,modelViewMatrix:Bo,modelViewPosition:y2,modelViewProjection:dg,modelWorldMatrix:qi,modelWorldMatrixInverse:v2,morphReference:ES,mrt:cT,mul:st,mx_aastep:qT,mx_add:kB,mx_atan2:YB,mx_cell_noise_float:BB,mx_contrast:RB,mx_divide:$B,mx_fractal_noise_float:OB,mx_fractal_noise_vec2:VB,mx_fractal_noise_vec3:GB,mx_fractal_noise_vec4:zB,mx_frame:KB,mx_heighttonormal:rO,mx_hsvtorgb:_B,mx_ifequal:eO,mx_ifgreater:QB,mx_ifgreatereq:JB,mx_invert:ZB,mx_modulo:XB,mx_multiply:WB,mx_noise_float:NB,mx_noise_vec3:CB,mx_noise_vec4:PB,mx_place2d:nO,mx_power:qB,mx_ramp4:TB,mx_ramplr:vB,mx_ramptb:SB,mx_rgbtohsv:yB,mx_rotate2d:iO,mx_rotate3d:sO,mx_safepower:wB,mx_separate:tO,mx_splitlr:MB,mx_splittb:EB,mx_srgb_texture_to_lin_rec709:bB,mx_subtract:HB,mx_timer:jB,mx_transform_uv:AB,mx_unifiednoise2d:LB,mx_unifiednoise3d:DB,mx_worley_noise_float:UB,mx_worley_noise_vec2:IB,mx_worley_noise_vec3:FB,negate:vb,neutralToneMapping:TT,nodeArray:bo,nodeImmutable:Se,nodeObject:ee,nodeObjectIntent:Xc,nodeObjects:Kh,nodeProxy:it,nodeProxyIntent:xe,normalFlat:bv,normalGeometry:ad,normalLocal:Ei,normalMap:xp,normalView:Lt,normalViewGeometry:sc,normalWorld:Xr,normalWorldGeometry:vv,normalize:Si,not:nb,notEqual:Ky,numWorkgroups:uI,objectDirection:h2,objectGroup:Pm,objectPosition:gv,objectRadius:m2,objectScale:f2,objectViewPosition:p2,objectWorldMatrix:d2,oneMinus:Sb,or:tb,orthographicDepthToViewZ:lP,oscSawtooth:jD,oscSine:XD,oscSquare:qD,oscTriangle:YD,output:Sa,outputStruct:CD,overlay:TP,overloadingFn:Xn,parabola:Sp,parallaxDirection:Ov,parallaxUV:B2,parameter:MD,pass:zU,passTexture:kU,pcurve:VD,perspectiveDepthToViewZ:mg,pmremTexture:Tg,pointShadow:GT,pointUV:EU,pointWidth:vC,positionGeometry:Yl,positionLocal:gn,positionPrevious:Ph,positionView:xn,positionViewDirection:Zt,positionWorld:Os,positionWorldDirection:sg,posterize:GU,pow:Xi,pow2:km,pow3:Lb,pow4:Hm,premultiplyAlpha:US,property:lr,quadBroadcast:nF,quadSwapDiagonal:KI,quadSwapX:YI,quadSwapY:jI,radians:xb,rand:Ib,range:cI,rangeFog:rI,rangeFogFactor:wg,reciprocal:Mb,reference:Gt,referenceBuffer:pp,reflect:Nb,reflectVector:Av,reflectView:Mv,reflector:rU,refract:Xm,refractVector:wv,refractView:Ev,reinhardToneMapping:yT,remap:rv,remapClamp:ov,renderGroup:ke,renderOutput:cv,rendererReference:Zb,rotate:Kl,rotateUV:KD,roughness:Cs,round:Tb,rtt:hT,sRGBTransferEOTF:qb,sRGBTransferOETF:Yb,sample:mU,sampler:e2,samplerComparison:t2,saturate:$m,saturation:IU,screen:SP,screenCoordinate:ql,screenDPR:fv,screenSize:Po,screenUV:hr,scriptable:sI,scriptableValue:gh,select:wn,setCurrentStack:Ml,setName:Ym,shaderStages:op,shadow:BT,shadowPositionWorld:Ug,shapeCircle:EF,sharedUniformGroup:td,sheen:mo,sheenRoughness:Jh,shiftLeft:cb,shiftRight:lb,shininess:wh,sign:Nl,sin:pi,sinc:GD,skinning:TS,smoothstep:ms,smoothstepElement:Bb,specularColor:$i,specularF90:Rl,spherizeUV:ZD,split:yC,spritesheetUV:tU,sqrt:_i,stack:mh,step:rd,stepElement:Ob,storage:To,storageBarrier:xI,storageObject:Q2,storageTexture:pT,string:xC,struct:ND,sub:Tt,subBuild:Ta,subgroupAdd:UI,subgroupAll:$I,subgroupAnd:GI,subgroupAny:XI,subgroupBallot:DI,subgroupBroadcast:ZI,subgroupBroadcastFirst:qI,subgroupElect:LI,subgroupExclusiveAdd:FI,subgroupExclusiveMul:VI,subgroupInclusiveAdd:II,subgroupInclusiveMul:OI,subgroupIndex:H2,subgroupMax:WI,subgroupMin:HI,subgroupMul:BI,subgroupOr:zI,subgroupShuffle:QI,subgroupShuffleDown:tF,subgroupShuffleUp:eF,subgroupShuffleXor:JI,subgroupSize:pI,subgroupXor:kI,tan:yb,tangentGeometry:ld,tangentLocal:jl,tangentView:ud,tangentWorld:Fv,texture:xt,texture3D:mT,textureBarrier:_I,textureBicubic:tL,textureBicubicLevel:Sg,textureCubeUV:KS,textureLevel:JC,textureLoad:an,textureSize:ur,textureStore:wU,thickness:wm,time:xc,toneMapping:Qb,toneMappingExposure:Jb,toonOutlinePass:$U,transformDirection:Db,transformNormal:Sv,transformNormalToView:og,transformedClearcoatNormalView:E2,transformedNormalView:T2,transformedNormalWorld:M2,transmission:Rh,transpose:Eb,triNoise3D:kD,triplanarTexture:nU,triplanarTextures:uT,trunc:Gm,uint:me,uintBitsToFloat:FD,uniform:Ge,uniformArray:Zn,uniformCubeTexture:w2,uniformFlow:zb,uniformGroup:$y,uniformTexture:QC,unpremultiplyAlpha:yP,userData:PU,uv:Vt,uvec2:Fy,uvec3:fc,uvec4:Gy,varying:Xs,varyingProperty:El,vec2:ie,vec3:F,vec4:$e,vectorComponents:Io,velocity:DU,vertexColor:NS,vertexIndex:xS,vertexStage:Xb,vibrance:FU,viewZToLogarithmicDepth:gg,viewZToOrthographicDepth:Ea,viewZToPerspectiveDepth:wS,viewport:ng,viewportCoordinate:pv,viewportDepthTexture:pg,viewportLinearDepth:hP,viewportMipTexture:fg,viewportResolution:o2,viewportSafeUV:JD,viewportSharedTexture:NP,viewportSize:ig,viewportTexture:aP,viewportUV:r2,wgsl:ZU,wgslFn:eI,workgroupArray:vI,workgroupBarrier:gI,workgroupId:hI,workingToColorSpace:jb,xor:ib});const as=new Mg;class aO extends qr{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,n){const i=this.renderer,r=this.nodes.getBackgroundNode(e)||e.background;let o=!1;if(r===null)i._clearColor.getRGB(as),as.a=i._clearColor.a;else if(r.isColor===!0)r.getRGB(as),as.a=1,o=!0;else if(r.isNode===!0){const c=this.get(e),l=r;as.copy(i._clearColor);let u=c.backgroundMesh;if(u===void 0){let x=function(){r.removeEventListener("dispose",x),u.material.dispose(),u.geometry.dispose()};const d=Wl($e(l).mul(Tp),{getUV:()=>fT.mul(vv),getTextureLevel:()=>dT});let f=dg;f=f.setZ(f.w);const p=new fn;p.name="Background.material",p.side=Xt,p.depthTest=!1,p.depthWrite=!1,p.allowOverride=!1,p.fog=!1,p.lights=!1,p.vertexNode=f,p.colorNode=d,c.backgroundMeshNode=d,c.backgroundMesh=u=new Vn(new dm(1,32,32),p),u.frustumCulled=!1,u.name="Background.mesh",u.onBeforeRender=function(g,m,b){this.matrixWorld.copyPosition(b.matrixWorld)},r.addEventListener("dispose",x)}const h=l.getCacheKey();c.backgroundCacheKey!==h&&(c.backgroundMeshNode.node=$e(l).mul(Tp),c.backgroundMeshNode.needsUpdate=!0,u.material.needsUpdate=!0,c.backgroundCacheKey=h),t.unshift(u,u.geometry,u.material,0,0,null,null)}else ge("Renderer: Unsupported background configuration.",r);const a=i.xr.getEnvironmentBlendMode();if(a==="additive"?as.set(0,0,0,1):a==="alpha-blend"&&as.set(0,0,0,0),i.autoClear===!0||o===!0){const c=n.clearColorValue;c.r=as.r,c.g=as.g,c.b=as.b,c.a=as.a,(i.backend.isWebGLBackend===!0||i.alpha===!0)&&(c.r*=c.a,c.g*=c.a,c.b*=c.a),n.depthClearValue=i._clearDepth,n.stencilClearValue=i._clearStencil,n.clearColor=i.autoClearColor===!0,n.clearDepth=i.autoClearDepth===!0,n.clearStencil=i.autoClearStencil===!0}else n.clearColor=!1,n.clearDepth=!1,n.clearStencil=!1}}let cO=0;class Mp{constructor(e="",t=[],n=0,i=[]){this.name=e,this.bindings=t,this.index=n,this.bindingsReference=i,this.id=cO++}}class lO{constructor(e,t,n,i,r,o,a,c,l,u=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=n,this.transforms=u,this.nodeAttributes=i,this.bindings=r,this.updateNodes=o,this.updateBeforeNodes=a,this.updateAfterNodes=c,this.observer=l,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings)if(t.bindings[0].groupNode.shared!==!0){const i=new Mp(t.name,[],t.index,t.bindingsReference);e.push(i);for(const r of t.bindings)i.bindings.push(r.clone())}else e.push(t);return e}}class Jx{constructor(e,t,n=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=n}}class uO{constructor(e,t,n){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=n}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class ZT{constructor(e,t,n=!1,i=null){this.isNodeVar=!0,this.name=e,this.type=t,this.readOnly=n,this.count=i}}class hO extends ZT{constructor(e,t,n=null,i=null){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0,this.interpolationType=n,this.interpolationSampling=i}}class dO{constructor(e,t,n=""){this.name=e,this.type=t,this.code=n,Object.defineProperty(this,"isNodeCode",{value:!0})}}let fO=0;class Rf{constructor(e=null){this.id=fO++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return t===void 0&&this.parent!==null&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class pO{constructor(e,t){this.name=e,this.members=t,this.output=!1}}class Yr{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class mO extends Yr{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class gO extends Yr{constructor(e,t=new oe){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class xO extends Yr{constructor(e,t=new P){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class _O extends Yr{constructor(e,t=new Ke){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class yO extends Yr{constructor(e,t=new Ze){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class bO extends Yr{constructor(e,t=new $h){super(e,t),this.isMatrix2Uniform=!0,this.boundary=8,this.itemSize=4}}class vO extends Yr{constructor(e,t=new gt){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class SO extends Yr{constructor(e,t=new ht){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class TO extends mO{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class MO extends gO{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class EO extends xO{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class AO extends _O{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class wO extends yO{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class RO extends bO{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class NO extends vO{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class CO extends SO{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}let PO=0;const e_=new WeakMap,LO=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),Xu=s=>/e/g.test(s)?String(s).replace(/\+/g,""):(s=Number(s),s+(s%1?"":".0"));class QT{constructor(e,t,n){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=n,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.observer=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.types={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.declarations={},this.flow={code:""},this.chaining=[],this.stack=mh(),this.stacks=[],this.tab="	",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new Rf,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.subBuildLayers=[],this.activeStacks=[],this.subBuildFn=null,this.fnCall=null,Object.defineProperty(this,"id",{value:PO++})}isOpaque(){const e=this.material;return e.transparent===!1&&e.blending===Ii&&e.alphaToCoverage===!1}getBindGroupsCache(){let e=e_.get(this.renderer);return e===void 0&&(e=new gs,e_.set(this.renderer,e)),e}createRenderTarget(e,t,n){return new mr(e,t,n)}createCubeRenderTarget(e,t){return new FS(e,t)}includes(e){return this.nodes.includes(e)}getOutputStructName(){}_getBindGroup(e,t){const n=this.getBindGroupsCache(),i=[];let r=!0;for(const a of t)i.push(a),r=r&&a.groupNode.shared!==!0;let o;return r?(o=n.get(i),o===void 0&&(o=new Mp(e,i,this.bindingsIndexes[e].group,i),n.set(i,o))):o=new Mp(e,i,this.bindingsIndexes[e].group,i),o}getBindGroupArray(e,t){const n=this.bindings[t];let i=n[e];return i===void 0&&(this.bindingsIndexes[e]===void 0&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),n[e]=i=[]),i}getBindings(){let e=this.bindGroups;if(e===null){const t={},n=this.bindings;for(const i of op)for(const r in n[i]){const o=n[i][r];(t[r]||(t[r]=[])).push(...o)}e=[];for(const i in t){const r=t[i],o=this._getBindGroup(i,r);e.push(o)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort((t,n)=>t.bindings[0].groupNode.order-n.bindings[0].groupNode.order);for(let t=0;t<e.length;t++){const n=e[t];this.bindingsIndexes[n.name].group=t,n.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){this.nodes.includes(e)===!1&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){this.sequentialNodes.includes(e)===!1&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes)e.getUpdateType()!==at.NONE&&this.updateNodes.push(e);for(const e of this.sequentialNodes){const t=e.getUpdateBeforeType(),n=e.getUpdateAfterType();t!==at.NONE&&this.updateBeforeNodes.push(e),n!==at.NONE&&this.updateAfterNodes.push(e)}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===ln||e.magFilter===ba||e.magFilter===ar||e.magFilter===xi||e.minFilter===ln||e.minFilter===ba||e.minFilter===ar||e.minFilter===xi}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getTernary(){return null}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}addContext(e){const t=this.getContext();return this.setContext({...this.context,...e}),t}getSharedContext(){return{...this.context},this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const n=this.getDataFromNode(e);return n.cache===void 0&&(n.cache=new Rf(t?this.getCache():null)),n.cache}isAvailable(){return!1}getVertexIndex(){te("Abstract function.")}getInstanceIndex(){te("Abstract function.")}getDrawIndex(){te("Abstract function.")}getFrontFacing(){te("Abstract function.")}getFragCoord(){te("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=t.usageCount===void 0?1:t.usageCount+1,t.usageCount}generateTexture(){te("Abstract function.")}generateTextureLod(){te("Abstract function.")}generateArrayDeclaration(e,t){return this.getType(e)+"[ "+t+" ]"}generateArray(e,t,n=null){let i=this.generateArrayDeclaration(e,t)+"( ";for(let r=0;r<t;r++){const o=n?n[r]:null;o!==null?i+=o.build(this,e):i+=this.generateConst(e),r<t-1&&(i+=", ")}return i+=" )",i}generateStruct(e,t,n=null){const i=[];for(const r of t){const{name:o,type:a}=r;n&&n[o]&&n[o].isNode?i.push(n[o].build(this,a)):i.push(this.generateConst(a))}return e+"( "+i.join(", ")+" )"}generateConst(e,t=null){if(t===null&&(e==="float"||e==="int"||e==="uint"?t=0:e==="bool"?t=!1:e==="color"?t=new Ze:e==="vec2"?t=new oe:e==="vec3"?t=new P:e==="vec4"&&(t=new Ke)),e==="float")return Xu(t);if(e==="int")return`${Math.round(t)}`;if(e==="uint")return t>=0?`${Math.round(t)}u`:"0u";if(e==="bool")return t?"true":"false";if(e==="color")return`${this.getType("vec3")}( ${Xu(t.r)}, ${Xu(t.g)}, ${Xu(t.b)} )`;const n=this.getTypeLength(e),i=this.getComponentType(e),r=o=>this.generateConst(i,o);if(n===2)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)} )`;if(n===3)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)}, ${r(t.z)} )`;if(n===4&&e!=="mat2")return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)}, ${r(t.z)}, ${r(t.w)} )`;if(n>=4&&t&&(t.isMatrix2||t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(r).join(", ")} )`;if(n>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return e==="color"?"vec3":e}hasGeometryAttribute(e){return this.geometry&&this.geometry.getAttribute(e)!==void 0}getAttribute(e,t){const n=this.attributes;for(const r of n)if(r.name===e)return r;const i=new Jx(e,t);return this.registerDeclaration(i),n.push(i),i}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return e==="void"||e==="property"||e==="sampler"||e==="samplerComparison"||e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="depthTexture"||e==="texture3D"}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===On)return"int";if(t===Kt)return"uint"}return"float"}getElementType(e){return e==="mat2"?"vec2":e==="mat3"?"vec3":e==="mat4"?"vec4":this.getComponentType(e)}getComponentType(e){if(e=this.getVectorType(e),e==="float"||e==="bool"||e==="int"||e==="uint")return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return t===null?null:t[1]==="b"?"bool":t[1]==="i"?"int":t[1]==="u"?"uint":"float"}getVectorType(e){return e==="color"?"vec3":e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="texture3D"?"vec4":e}getTypeFromLength(e,t="float"){if(e===1)return t;let n=My(e);const i=t==="float"?"":t[0];return/mat2/.test(t)===!0&&(n=n.replace("vec","mat")),i+n}getTypeFromArray(e){return LO.get(e.constructor)}isInteger(e){return/int|uint|(i|u)vec/.test(e)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const n=t.array,i=e.itemSize,r=e.normalized;let o;return!(e instanceof ey)&&r!==!0&&(o=this.getTypeFromArray(n)),this.getTypeFromLength(i,o)}getTypeLength(e){const t=this.getVectorType(e),n=/vec([2-4])/.exec(t);return n!==null?Number(n[1]):t==="float"||t==="bool"||t==="int"||t==="uint"?1:/mat2/.test(e)===!0?4:/mat3/.test(e)===!0?9:/mat4/.test(e)===!0?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return t==="int"||t==="uint"?e:this.changeComponentType(e,"int")}setActiveStack(e){this.activeStacks.push(e)}removeActiveStack(e){if(this.activeStacks[this.activeStacks.length-1]===e)this.activeStacks.pop();else throw new Error("NodeBuilder: Invalid active stack removal.")}getActiveStack(){return this.activeStacks[this.activeStacks.length-1]}getBaseStack(){return this.activeStacks[0]}addStack(){this.stack=mh(this.stack);const e=Tm();return this.stacks.push(e),Ml(this.stack),this.stack}removeStack(){const e=this.stack;for(const t of e.nodes){const n=this.getDataFromNode(t);n.stack=e}return this.stack=e.parent,Ml(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,n=null){n=n===null?e.isGlobal(this)?this.globalCache:this.cache:n;let i=n.getData(e);i===void 0&&(i={},n.setData(e,i)),i[t]===void 0&&(i[t]={});let r=i[t];const o=i.any?i.any.subBuilds:null,a=this.getClosestSubBuild(o);return a&&(r.subBuildsCache===void 0&&(r.subBuildsCache={}),r=r.subBuildsCache[a]||(r.subBuildsCache[a]={}),r.subBuilds=o),r}getNodeProperties(e,t="any"){const n=this.getDataFromNode(e,t);return n.properties||(n.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const n=this.getDataFromNode(e);let i=n.bufferAttribute;if(i===void 0){const r=this.uniforms.index++;i=new Jx("nodeAttribute"+r,t,e),this.bufferAttributes.push(i),n.bufferAttribute=i}return i}getStructTypeNode(e,t=this.shaderStage){return this.types[t][e]||null}getStructTypeFromNode(e,t,n=null,i=this.shaderStage){const r=this.getDataFromNode(e,i,this.globalCache);let o=r.structType;if(o===void 0){const a=this.structs.index++;n===null&&(n="StructType"+a),o=new pO(n,t),this.structs[i].push(o),this.types[i][n]=e,r.structType=o}return o}getOutputStructTypeFromNode(e,t){const n=this.getStructTypeFromNode(e,t,"OutputType","fragment");return n.output=!0,n}getUniformFromNode(e,t,n=this.shaderStage,i=null){const r=this.getDataFromNode(e,n,this.globalCache);let o=r.uniform;if(o===void 0){const a=this.uniforms.index++;o=new uO(i||"nodeUniform"+a,t,e),this.uniforms[n].push(o),this.registerDeclaration(o),r.uniform=o}return o}getVarFromNode(e,t=null,n=e.getNodeType(this),i=this.shaderStage,r=!1){const o=this.getDataFromNode(e,i),a=this.getSubBuildProperty("variable",o.subBuilds);let c=o[a];if(c===void 0){const l=r?"_const":"_var",u=this.vars[i]||(this.vars[i]=[]),h=this.vars[l]||(this.vars[l]=0);t===null&&(t=(r?"nodeConst":"nodeVar")+h,this.vars[l]++),a!=="variable"&&(t=this.getSubBuildProperty(t,o.subBuilds));const d=e.getArrayCount(this);c=new ZT(t,n,r,d),r||u.push(c),this.registerDeclaration(c),o[a]=c}return c}isDeterministic(e){if(e.isMathNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0)&&(e.cNode?this.isDeterministic(e.cNode):!0);if(e.isOperatorNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0);if(e.isArrayNode){if(e.values!==null){for(const t of e.values)if(!this.isDeterministic(t))return!1}return!0}else if(e.isConstNode)return!0;return!1}getVaryingFromNode(e,t=null,n=e.getNodeType(this),i=null,r=null){const o=this.getDataFromNode(e,"any"),a=this.getSubBuildProperty("varying",o.subBuilds);let c=o[a];if(c===void 0){const l=this.varyings,u=l.length;t===null&&(t="nodeVarying"+u),a!=="varying"&&(t=this.getSubBuildProperty(t,o.subBuilds)),c=new hO(t,n,i,r),l.push(c),this.registerDeclaration(c),o[a]=c}return c}registerDeclaration(e){const t=this.shaderStage,n=this.declarations[t]||(this.declarations[t]={}),i=this.getPropertyName(e);let r=1,o=i;for(;n[o]!==void 0;)o=i+"_"+r++;r>1&&(e.name=o,te(`TSL: Declaration name '${i}' of '${e.type}' already in use. Renamed to '${o}'.`)),n[o]=e}getCodeFromNode(e,t,n=this.shaderStage){const i=this.getDataFromNode(e);let r=i.code;if(r===void 0){const o=this.codes[n]||(this.codes[n]=[]),a=o.length;r=new dO("nodeCode"+a,t),o.push(r),i.code=r}return r}addFlowCodeHierarchy(e,t){const{flowCodes:n,flowCodeBlock:i}=this.getDataFromNode(e);let r=!0,o=t;for(;o;){if(i.get(o)===!0){r=!1;break}o=this.getDataFromNode(o).parentNodeBlock}if(r)for(const a of n)this.addLineFlowCode(a)}addLineFlowCodeBlock(e,t,n){const i=this.getDataFromNode(e),r=i.flowCodes||(i.flowCodes=[]),o=i.flowCodeBlock||(i.flowCodeBlock=new WeakMap);r.push(t),o.set(n,!0)}addLineFlowCode(e,t=null){return e===""?this:(t!==null&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e=e+`;
`),this.flow.code+=e,this)}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="	",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),n=this.flowChildNode(e,t);return this.flowsData.set(e,n),n}addInclude(e){this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(e)}buildFunctionNode(e){const t=new MT,n=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=n,t}flowShaderNode(e){const t=e.layout,n={[Symbol.iterator](){let o=0;const a=Object.values(this);return{next:()=>({value:a[o],done:o++>=a.length})}}};for(const o of t.inputs)n[o.name]=new rT(o.type,o.name);e.layout=null;const i=e.call(n),r=this.flowStagesNode(i,t.type);return e.layout=t,r}flowBuildStage(e,t,n=null){const i=this.getBuildStage();this.setBuildStage(t);const r=e.build(this,n);return this.setBuildStage(i),r}flowStagesNode(e,t=null){const n=this.flow,i=this.vars,r=this.declarations,o=this.cache,a=this.buildStage,c=this.stack,l={code:""};this.flow=l,this.vars={},this.declarations={},this.cache=new Rf,this.stack=mh();for(const u of rp)this.setBuildStage(u),l.result=e.build(this,t);return l.vars=this.getVars(this.shaderStage),this.flow=n,this.vars=i,this.declarations=r,this.cache=o,this.stack=c,this.setBuildStage(a),l}getFunctionOperator(){return null}buildFunctionCode(){te("Abstract function.")}flowChildNode(e,t=null){const n=this.flow,i={code:""};return this.flow=i,i.result=e.build(this,t),this.flow=n,i}flowNodeFromShaderStage(e,t,n=null,i=null){const r=this.tab,o=this.cache,a=this.shaderStage,c=this.context;this.setShaderStage(e);const l={...this.context};delete l.nodeBlock,this.cache=this.globalCache,this.tab="	",this.context=l;let u=null;if(this.buildStage==="generate"){const h=this.flowChildNode(t,n);i!==null&&(h.code+=`${this.tab+i} = ${h.result};
`),this.flowCode[e]=this.flowCode[e]+h.code,u=h}else u=t.build(this);return this.setShaderStage(a),this.cache=o,this.tab=r,this.context=c,u}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){te("Abstract function.")}getVaryings(){te("Abstract function.")}getVar(e,t,n=null){return`${n!==null?this.generateArrayDeclaration(e,n):this.getType(e)} ${t}`}getVars(e){let t="";const n=this.vars[e];if(n!==void 0)for(const i of n)t+=`${this.getVar(i.type,i.name)}; `;return t}getUniforms(){te("Abstract function.")}getCodes(e){const t=this.codes[e];let n="";if(t!==void 0)for(const i of t)n+=i.code+`
`;return n}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){te("Abstract function.")}get subBuild(){return this.subBuildLayers[this.subBuildLayers.length-1]||null}addSubBuild(e){this.subBuildLayers.push(e)}removeSubBuild(){return this.subBuildLayers.pop()}getClosestSubBuild(e){let t;if(e&&e.isNode?e.isShaderCallNodeInternal?t=e.shaderNode.subBuilds:e.isStackNode?t=[e.subBuild]:t=this.getDataFromNode(e,"any").subBuilds:e instanceof Set?t=[...e]:t=e,!t)return null;const n=this.subBuildLayers;for(let i=t.length-1;i>=0;i--){const r=t[i];if(n.includes(r))return r}return null}getSubBuildOutput(e){return this.getSubBuildProperty("outputNode",e)}getSubBuildProperty(e="",t=null){let n;t!==null?n=this.getClosestSubBuild(t):n=this.subBuildFn;let i;return n?i=e?n+"_"+e:n:i=e,i}build(){const{object:e,material:t,renderer:n}=this;if(t!==null){let i=n.library.fromMaterial(t);i===null&&(ge(`NodeMaterial: Material "${t.type}" is not compatible.`),i=new fn),i.build(this)}else this.addFlow("compute",e);for(const i of rp){this.setBuildStage(i),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const r of op){this.setShaderStage(r);const o=this.flowNodes[r];for(const a of o)i==="generate"?this.flowNode(a):a.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if(t==="float"||t==="int"||t==="uint")return new TO(e);if(t==="vec2"||t==="ivec2"||t==="uvec2")return new MO(e);if(t==="vec3"||t==="ivec3"||t==="uvec3")return new EO(e);if(t==="vec4"||t==="ivec4"||t==="uvec4")return new AO(e);if(t==="color")return new wO(e);if(t==="mat2")return new RO(e);if(t==="mat3")return new NO(e);if(t==="mat4")return new CO(e);throw new Error(`Uniform "${t}" not declared.`)}format(e,t,n){if(t=this.getVectorType(t),n=this.getVectorType(n),t===n||n===null||this.isReference(n))return e;const i=this.getTypeLength(t),r=this.getTypeLength(n);return i===16&&r===9?`${this.getType(n)}( ${e}[ 0 ].xyz, ${e}[ 1 ].xyz, ${e}[ 2 ].xyz )`:i===9&&r===4?`${this.getType(n)}( ${e}[ 0 ].xy, ${e}[ 1 ].xy )`:i>4||r>4||r===0?e:i===r?`${this.getType(n)}( ${e} )`:i>r?(e=n==="bool"?`all( ${e} )`:`${e}.${"xyz".slice(0,r)}`,this.format(e,this.getTypeFromLength(r,this.getComponentType(t)),n)):r===4&&i>1?`${this.getType(n)}( ${this.format(e,t,"vec3")}, 1.0 )`:i===2?`${this.getType(n)}( ${this.format(e,t,"vec2")}, 0.0 )`:(i===1&&r>1&&t!==this.getComponentType(n)&&(e=`${this.getType(this.getComponentType(n))}( ${e} )`),`${this.getType(n)}( ${e} )`)}getSignature(){return`// Three.js r181 - Node System
`}}class t_{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let n=e.get(t);return n===void 0&&(n={renderId:0,frameId:0},e.set(t,n)),n}updateBeforeNode(e){const t=e.getUpdateBeforeType(),n=e.updateReference(this);if(t===at.FRAME){const i=this._getMaps(this.updateBeforeMap,n);i.frameId!==this.frameId&&e.updateBefore(this)!==!1&&(i.frameId=this.frameId)}else if(t===at.RENDER){const i=this._getMaps(this.updateBeforeMap,n);i.renderId!==this.renderId&&e.updateBefore(this)!==!1&&(i.renderId=this.renderId)}else t===at.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),n=e.updateReference(this);if(t===at.FRAME){const i=this._getMaps(this.updateAfterMap,n);i.frameId!==this.frameId&&e.updateAfter(this)!==!1&&(i.frameId=this.frameId)}else if(t===at.RENDER){const i=this._getMaps(this.updateAfterMap,n);i.renderId!==this.renderId&&e.updateAfter(this)!==!1&&(i.renderId=this.renderId)}else t===at.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),n=e.updateReference(this);if(t===at.FRAME){const i=this._getMaps(this.updateMap,n);i.frameId!==this.frameId&&e.update(this)!==!1&&(i.frameId=this.frameId)}else if(t===at.RENDER){const i=this._getMaps(this.updateMap,n);i.renderId!==this.renderId&&e.update(this)!==!1&&(i.renderId=this.renderId)}else t===at.OBJECT&&e.update(this)}update(){this.frameId++,this.lastTime===void 0&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class Og{constructor(e,t,n=null,i="",r=!1){this.type=e,this.name=t,this.count=n,this.qualifier=i,this.isConst=r}}Og.isNodeFunctionInput=!0;class DO extends Oo{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setupDirect(){const e=this.colorNode;return{lightDirection:Lg(this.light),lightColor:e}}}const Nf=new ht,qu=new ht;let Oc=null;class UO extends Oo{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=Ge(new P).setGroup(ke),this.halfWidth=Ge(new P).setGroup(ke),this.updateType=at.RENDER}update(e){super.update(e);const{light:t}=this,n=e.camera.matrixWorldInverse;qu.identity(),Nf.copy(t.matrixWorld),Nf.premultiply(n),qu.extractRotation(Nf),this.halfWidth.value.set(t.width*.5,0,0),this.halfHeight.value.set(0,t.height*.5,0),this.halfWidth.value.applyMatrix4(qu),this.halfHeight.value.applyMatrix4(qu)}setupDirectRectArea(e){let t,n;e.isAvailable("float32Filterable")?(t=xt(Oc.LTC_FLOAT_1),n=xt(Oc.LTC_FLOAT_2)):(t=xt(Oc.LTC_HALF_1),n=xt(Oc.LTC_HALF_2));const{colorNode:i,light:r}=this,o=Pg(r);return{lightColor:i,lightPosition:o,halfWidth:this.halfWidth,halfHeight:this.halfHeight,ltc_1:t,ltc_2:n}}static setLTC(e){Oc=e}}class Vg extends Oo{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=Ge(0).setGroup(ke),this.penumbraCosNode=Ge(0).setGroup(ke),this.cutoffDistanceNode=Ge(0).setGroup(ke),this.decayExponentNode=Ge(0).setGroup(ke),this.colorNode=Ge(this.color).setGroup(ke)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e,t){const{coneCosNode:n,penumbraCosNode:i}=this;return ms(n,i,t)}getLightCoord(e){const t=e.getNodeProperties(this);let n=t.projectionUV;return n===void 0&&(n=RT(this.light,e.context.positionWorld),t.projectionUV=n),n}setupDirect(e){const{colorNode:t,cutoffDistanceNode:n,decayExponentNode:i,light:r}=this,o=this.getLightVector(e),a=o.normalize(),c=a.dot(Lg(r)),l=this.getSpotAttenuation(e,c),u=o.length(),h=Ig({lightDistance:u,cutoffDistance:n,decayExponent:i});let d=t.mul(l).mul(h),f,p;return r.colorNode?(p=this.getLightCoord(e),f=r.colorNode(p)):r.map&&(p=this.getLightCoord(e),f=xt(r.map,p.xy).onRenderUpdate(()=>r.map)),f&&(d=p.mul(2).sub(1).abs().lessThan(1).all().select(d.mul(f),d)),{lightColor:d,lightDirection:a}}}class IO extends Vg{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e,t){const n=this.light.iesMap;let i=null;if(n&&n.isTexture===!0){const r=t.acos().mul(1/Math.PI);i=xt(n,ie(r,0),0).r}else i=super.getSpotAttenuation(t);return i}}const FO=O(([s,e])=>{const t=s.abs().sub(e);return Bs(Jt(t,0)).add(Mi(Jt(t.x,t.y),0))});class BO extends Vg{static get type(){return"ProjectorLightNode"}update(e){super.update(e);const t=this.light;if(this.penumbraCosNode.value=Math.min(Math.cos(t.angle*(1-t.penumbra)),.99999),t.aspect===null){let n=1;t.map!==null&&(n=t.map.width/t.map.height),t.shadow.aspect=n}else t.shadow.aspect=t.aspect}getSpotAttenuation(e){const t=R(0),n=this.penumbraCosNode,i=vd(this.light).mul(e.context.positionWorld||Os);return je(i.w.greaterThan(0),()=>{const r=i.xyz.div(i.w),o=FO(r.xy.sub(ie(.5)),ie(.5)),a=Gi(-1,Tt(1,Bm(n)).sub(1));t.assign($m(o.mul(-2).mul(a)))}),t}}class OO extends Oo{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class VO extends Oo{static get type(){return"HemisphereLightNode"}constructor(e=null){super(e),this.lightPositionNode=Cg(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=Ge(new Ze).setGroup(ke)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:n,lightDirectionNode:i}=this,o=Xr.dot(i).mul(.5).add(.5),a=Ct(n,t,o);e.context.irradiance.addAssign(a)}}class GO extends Oo{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let n=0;n<9;n++)t.push(new P);this.lightProbe=Zn(t)}update(e){const{light:t}=this;super.update(e);for(let n=0;n<9;n++)this.lightProbe.array[n].copy(t.sh.coefficients[n]).multiplyScalar(t.intensity)}setup(e){const t=KT(Xr,this.lightProbe);e.context.irradiance.addAssign(t)}}class JT{parseFunction(){te("Abstract function.")}}class Gg{constructor(e,t,n="",i=""){this.type=e,this.inputs=t,this.name=n,this.precision=i}getCode(){te("Abstract function.")}}Gg.isNodeFunction=!0;const zO=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,kO=/[a-z_0-9]+/ig,n_="#pragma main",HO=s=>{s=s.trim();const e=s.indexOf(n_),t=e!==-1?s.slice(e+n_.length):s,n=t.match(zO);if(n!==null&&n.length===5){const i=n[4],r=[];let o=null;for(;(o=kO.exec(i))!==null;)r.push(o);const a=[];let c=0;for(;c<r.length;){const p=r[c][0]==="const";p===!0&&c++;let x=r[c][0];x==="in"||x==="out"||x==="inout"?c++:x="";const g=r[c++][0];let m=Number.parseInt(r[c][0]);Number.isNaN(m)===!1?c++:m=null;const b=r[c++][0];a.push(new Og(g,b,m,x,p))}const l=t.substring(n[0].length),u=n[3]!==void 0?n[3]:"",h=n[2],d=n[1]!==void 0?n[1]:"",f=e!==-1?s.slice(0,e):"";return{type:h,inputs:a,name:u,precision:d,inputsCode:i,blockCode:l,headerCode:f}}else throw new Error("FunctionNode: Function is not a GLSL code.")};class WO extends Gg{constructor(e){const{type:t,inputs:n,name:i,precision:r,inputsCode:o,blockCode:a,headerCode:c}=HO(e);super(t,n,i,r),this.inputsCode=o,this.blockCode=a,this.headerCode=c}getCode(e=this.name){let t;const n=this.blockCode;if(n!==""){const{type:i,inputsCode:r,headerCode:o,precision:a}=this;let c=`${i} ${e} ( ${r.trim()} )`;a!==""&&(c=`${a} ${c}`),t=o+c+n}else t="";return t}}class $O extends JT{parseFunction(e){return new WO(e)}}const i_=new WeakMap,Es=[],Tr=[];class XO extends qr{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new t_,this.nodeBuilderCache=new Map,this.callHashCache=new gs,this.groupsData=new gs,this.cacheLib={}}updateGroup(e){const t=e.groupNode,n=t.name;if(n===Pm.name)return!0;if(n===ke.name){const r=this.get(e),o=this.nodeFrame.renderId;return r.renderId!==o?(r.renderId=o,!0):!1}if(n===Xy.name){const r=this.get(e),o=this.nodeFrame.frameId;return r.frameId!==o?(r.frameId=o,!0):!1}Es[0]=t,Es[1]=e;let i=this.groupsData.get(Es);return i===void 0&&this.groupsData.set(Es,i={}),Es.length=0,i.version!==t.version?(i.version=t.version,!0):!1}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let n=t.nodeBuilderState;if(n===void 0){const{nodeBuilderCache:i}=this,r=this.getForRenderCacheKey(e);if(n=i.get(r),n===void 0){const o=c=>{const l=this.backend.createNodeBuilder(e.object,this.renderer);return l.scene=e.scene,l.material=c,l.camera=e.camera,l.context.material=c,l.lightsNode=e.lightsNode,l.environmentNode=this.getEnvironmentNode(e.scene),l.fogNode=this.getFogNode(e.scene),l.clippingContext=e.clippingContext,this.renderer.getOutputRenderTarget()&&this.renderer.getOutputRenderTarget().multiview&&l.enableMultiview(),l};let a=o(e.material);try{a.build()}catch(c){a=o(new fn),a.build(),ge("TSL: "+c)}n=this._createNodeBuilderState(a),i.set(r,n)}n.usedTimes++,t.nodeBuilderState=n}return n}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,t.usedTimes===0&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let n=t.nodeBuilderState;if(n===void 0){const i=this.backend.createNodeBuilder(e,this.renderer);i.build(),n=this._createNodeBuilderState(i),t.nodeBuilderState=n}return n}_createNodeBuilderState(e){return new lO(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.observer,e.transforms)}getEnvironmentNode(e){this.updateEnvironment(e);let t=null;if(e.environmentNode&&e.environmentNode.isNode)t=e.environmentNode;else{const n=this.get(e);n.environmentNode&&(t=n.environmentNode)}return t}getBackgroundNode(e){this.updateBackground(e);let t=null;if(e.backgroundNode&&e.backgroundNode.isNode)t=e.backgroundNode;else{const n=this.get(e);n.backgroundNode&&(t=n.backgroundNode)}return t}getFogNode(e){return this.updateFog(e),e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){Es[0]=e,Es[1]=t;const n=this.renderer.info.calls,i=this.callHashCache.get(Es)||{};if(i.callId!==n){const r=this.getEnvironmentNode(e),o=this.getFogNode(e);t&&Tr.push(t.getCacheKey(!0)),r&&Tr.push(r.getCacheKey()),o&&Tr.push(o.getCacheKey()),Tr.push(this.renderer.getOutputRenderTarget()&&this.renderer.getOutputRenderTarget().multiview?1:0),Tr.push(this.renderer.shadowMap.enabled?1:0),Tr.push(this.renderer.shadowMap.type),i.callId=n,i.cacheKey=dc(Tr),this.callHashCache.set(Es,i),Tr.length=0}return Es.length=0,i.cacheKey}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),n=e.background;if(n){const i=e.backgroundBlurriness===0&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&t.backgroundBlurriness===0;if(t.background!==n||i){const r=this.getCacheNode("background",n,()=>{if(n.isCubeTexture===!0||n.mapping===Na||n.mapping===Ca||n.mapping===Eo){if(e.backgroundBlurriness>0||n.mapping===Eo)return Tg(n);{let o;return n.isCubeTexture===!0?o=rc(n):o=xt(n),OS(o)}}else{if(n.isTexture===!0)return xt(n,hr.flipY()).setUpdateMatrix(!0);n.isColor!==!0&&ge("WebGPUNodes: Unsupported background configuration.",n)}},i);t.backgroundNode=r,t.background=n,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}getCacheNode(e,t,n,i=!1){const r=this.cacheLib[e]||(this.cacheLib[e]=new WeakMap);let o=r.get(t);return(o===void 0||i)&&(o=n(),r.set(t,o)),o}updateFog(e){const t=this.get(e),n=e.fog;if(n){if(t.fog!==n){const i=this.getCacheNode("fog",n,()=>{if(n.isFogExp2){const r=Gt("color","color",n).setGroup(ke),o=Gt("density","float",n).setGroup(ke);return Ll(r,Rg(o))}else if(n.isFog){const r=Gt("color","color",n).setGroup(ke),o=Gt("near","float",n).setGroup(ke),a=Gt("far","float",n).setGroup(ke);return Ll(r,wg(o,a))}else ge("Renderer: Unsupported fog configuration.",n)});t.fogNode=i,t.fog=n}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),n=e.environment;if(n){if(t.environment!==n){const i=this.getCacheNode("environment",n,()=>{if(n.isCubeTexture===!0)return rc(n);if(n.isTexture===!0)return xt(n);ge("Nodes: Unsupported environment configuration.",n)});t.environmentNode=i,t.environment=n}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,n=null,i=null,r=null){const o=this.nodeFrame;return o.renderer=e,o.scene=t,o.object=n,o.camera=i,o.material=r,o}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace+","+e.xr.isPresenting}hasOutputChange(e){return i_.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,n=this.getOutputCacheKey(),i=e.isArrayTexture?mT(e,F(hr,gr("gl_ViewID_OVR"))).renderOutput(t.toneMapping,t.currentColorSpace):xt(e,hr).renderOutput(t.toneMapping,t.currentColorSpace);return i_.set(e,n),i}updateBefore(e){const t=e.getNodeBuilderState();for(const n of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(n)}updateAfter(e){const t=e.getNodeBuilderState();for(const n of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(n)}updateForCompute(e){const t=this.getNodeFrame(),n=this.getForCompute(e);for(const i of n.updateNodes)t.updateNode(i)}updateForRender(e){const t=this.getNodeFrameForRender(e),n=e.getNodeBuilderState();for(const i of n.updateNodes)t.updateNode(i)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new t_,this.nodeBuilderCache=new Map,this.cacheLib={}}}const Cf=new Rs;class Bh{constructor(e=null){this.version=0,this.clipIntersection=null,this.cacheKey="",this.shadowPass=!1,this.viewNormalMatrix=new gt,this.clippingGroupContexts=new WeakMap,this.intersectionPlanes=[],this.unionPlanes=[],this.parentVersion=null,e!==null&&(this.viewNormalMatrix=e.viewNormalMatrix,this.clippingGroupContexts=e.clippingGroupContexts,this.shadowPass=e.shadowPass,this.viewMatrix=e.viewMatrix)}projectPlanes(e,t,n){const i=e.length;for(let r=0;r<i;r++){Cf.copy(e[r]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const o=t[n+r],a=Cf.normal;o.x=-a.x,o.y=-a.y,o.z=-a.z,o.w=Cf.constant}}updateGlobal(e,t){this.shadowPass=e.overrideMaterial!==null&&e.overrideMaterial.isShadowPassMaterial,this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix)}update(e,t){let n=!1;e.version!==this.parentVersion&&(this.intersectionPlanes=Array.from(e.intersectionPlanes),this.unionPlanes=Array.from(e.unionPlanes),this.parentVersion=e.version),this.clipIntersection!==t.clipIntersection&&(this.clipIntersection=t.clipIntersection,this.clipIntersection?this.unionPlanes.length=e.unionPlanes.length:this.intersectionPlanes.length=e.intersectionPlanes.length);const i=t.clippingPlanes,r=i.length;let o,a;if(this.clipIntersection?(o=this.intersectionPlanes,a=e.intersectionPlanes.length):(o=this.unionPlanes,a=e.unionPlanes.length),o.length!==a+r){o.length=a+r;for(let c=0;c<r;c++)o[a+c]=new Ke;n=!0}this.projectPlanes(i,o,a),n&&(this.version++,this.cacheKey=`${this.intersectionPlanes.length}:${this.unionPlanes.length}`)}getGroupContext(e){if(this.shadowPass&&!e.clipShadows)return this;let t=this.clippingGroupContexts.get(e);return t===void 0&&(t=new Bh(this),this.clippingGroupContexts.set(e,t)),t.update(this,e),t}get unionClippingCount(){return this.unionPlanes.length}}class qO{constructor(e,t){this.bundleGroup=e,this.camera=t}}const Vc=[];class YO{constructor(){this.bundles=new gs}get(e,t){const n=this.bundles;Vc[0]=e,Vc[1]=t;let i=n.get(Vc);return i===void 0&&(i=new qO(e,t),n.set(Vc,i)),Vc.length=0,i}dispose(){this.bundles=new gs}}class eM{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const n=this.getMaterialNodeClass(e.type);if(n!==null){t=new n;for(const i in e)t[i]=e[i]}return t}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,n){if(n.has(t)){te(`Redefinition of node ${t}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t=="function"||typeof t=="object")throw new Error(`Base class ${t} is not a class.`);n.set(t,e)}addClass(e,t,n){if(n.has(t)){te(`Redefinition of node ${t.name}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t!="function")throw new Error(`Base class ${t.name} is not a class.`);n.set(t,e)}}const jO=new Dg,Gc=[];class KO extends gs{constructor(){super()}createNode(e=[]){return new Dg().setLights(e)}getNode(e,t){if(e.isQuadMesh)return jO;Gc[0]=e,Gc[1]=t;let n=this.get(Gc);return n===void 0&&(n=this.createNode(),this.set(Gc,n)),Gc.length=0,n}}class qc extends mr{constructor(e=1,t=1,n={}){super(e,t,n),this.isXRRenderTarget=!0,this._hasExternalTextures=!1,this._autoAllocateDepthBuffer=!0,this._isOpaqueFramebuffer=!1}copy(e){return super.copy(e),this._hasExternalTextures=e._hasExternalTextures,this._autoAllocateDepthBuffer=e._autoAllocateDepthBuffer,this._isOpaqueFramebuffer=e._isOpaqueFramebuffer,this}}const s_=new P,r_=new P;class ZO extends xs{constructor(e,t=!1){super(),this.enabled=!1,this.isPresenting=!1,this.cameraAutoUpdate=!0,this._renderer=e,this._cameraL=new Wn,this._cameraL.viewport=new Ke,this._cameraR=new Wn,this._cameraR.viewport=new Ke,this._cameras=[this._cameraL,this._cameraR],this._cameraXR=new _y,this._currentDepthNear=null,this._currentDepthFar=null,this._controllers=[],this._controllerInputSources=[],this._xrRenderTarget=null,this._layers=[],this._sessionUsesLayers=!1,this._supportsGlBinding=typeof XRWebGLBinding<"u",this._frameBufferTargets=null,this._createXRLayer=iV.bind(this),this._gl=null,this._currentAnimationContext=null,this._currentAnimationLoop=null,this._currentPixelRatio=null,this._currentSize=new oe,this._onSessionEvent=eV.bind(this),this._onSessionEnd=tV.bind(this),this._onInputSourcesChange=nV.bind(this),this._onAnimationFrame=sV.bind(this),this._referenceSpace=null,this._referenceSpaceType="local-floor",this._customReferenceSpace=null,this._framebufferScaleFactor=1,this._foveation=1,this._session=null,this._glBaseLayer=null,this._glBinding=null,this._glProjLayer=null,this._xrFrame=null,this._supportsLayers=this._supportsGlBinding&&"createProjectionLayer"in XRWebGLBinding.prototype,this._useMultiviewIfPossible=t,this._useMultiview=!1}getController(e){return this._getController(e).getTargetRaySpace()}getControllerGrip(e){return this._getController(e).getGripSpace()}getHand(e){return this._getController(e).getHandSpace()}getFoveation(){if(!(this._glProjLayer===null&&this._glBaseLayer===null))return this._foveation}setFoveation(e){this._foveation=e,this._glProjLayer!==null&&(this._glProjLayer.fixedFoveation=e),this._glBaseLayer!==null&&this._glBaseLayer.fixedFoveation!==void 0&&(this._glBaseLayer.fixedFoveation=e)}getFramebufferScaleFactor(){return this._framebufferScaleFactor}setFramebufferScaleFactor(e){this._framebufferScaleFactor=e,this.isPresenting===!0&&te("XRManager: Cannot change framebuffer scale while presenting.")}getReferenceSpaceType(){return this._referenceSpaceType}setReferenceSpaceType(e){this._referenceSpaceType=e,this.isPresenting===!0&&te("XRManager: Cannot change reference space type while presenting.")}getReferenceSpace(){return this._customReferenceSpace||this._referenceSpace}setReferenceSpace(e){this._customReferenceSpace=e}getCamera(){return this._cameraXR}getEnvironmentBlendMode(){if(this._session!==null)return this._session.environmentBlendMode}getBinding(){return this._glBinding===null&&this._supportsGlBinding&&(this._glBinding=new XRWebGLBinding(this._session,this._gl)),this._glBinding}getFrame(){return this._xrFrame}useMultiview(){return this._useMultiview}createQuadLayer(e,t,n,i,r,o,a,c={}){const l=new Vl(e,t),u=new qc(r,o,{format:_n,type:un,depthTexture:new Vi(r,o,c.stencil?Fi:Kt,void 0,void 0,void 0,void 0,void 0,void 0,c.stencil?Oi:Bi),stencilBuffer:c.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1});u._autoAllocateDepthBuffer=!0;const h=new sr({color:16777215,side:Ui});h.map=u.texture,h.map.offset.y=1,h.map.repeat.y=-1;const d=new Vn(l,h);d.position.copy(n),d.quaternion.copy(i);const f={type:"quad",width:e,height:t,translation:n,quaternion:i,pixelwidth:r,pixelheight:o,plane:d,material:h,rendercall:a,renderTarget:u};if(this._layers.push(f),this._session!==null){f.plane.material=new sr({color:16777215,side:Ui}),f.plane.material.blending=ya,f.plane.material.blendEquation=Kn,f.plane.material.blendSrc=nr,f.plane.material.blendDst=nr,f.xrlayer=this._createXRLayer(f);const p=this._session.renderState.layers;p.unshift(f.xrlayer),this._session.updateRenderState({layers:p})}else u.isXRRenderTarget=!1;return d}createCylinderLayer(e,t,n,i,r,o,a,c,l={}){const u=new cm(e,e,e*t/n,64,64,!0,Math.PI-t/2,t),h=new qc(o,a,{format:_n,type:un,depthTexture:new Vi(o,a,l.stencil?Fi:Kt,void 0,void 0,void 0,void 0,void 0,void 0,l.stencil?Oi:Bi),stencilBuffer:l.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1});h._autoAllocateDepthBuffer=!0;const d=new sr({color:16777215,side:Xt});d.map=h.texture,d.map.offset.y=1,d.map.repeat.y=-1;const f=new Vn(u,d);f.position.copy(i),f.quaternion.copy(r);const p={type:"cylinder",radius:e,centralAngle:t,aspectratio:n,translation:i,quaternion:r,pixelwidth:o,pixelheight:a,plane:f,material:d,rendercall:c,renderTarget:h};if(this._layers.push(p),this._session!==null){p.plane.material=new sr({color:16777215,side:Xt}),p.plane.material.blending=ya,p.plane.material.blendEquation=Kn,p.plane.material.blendSrc=nr,p.plane.material.blendDst=nr,p.xrlayer=this._createXRLayer(p);const x=this._session.renderState.layers;x.unshift(p.xrlayer),this._session.updateRenderState({layers:x})}else h.isXRRenderTarget=!1;return f}renderLayers(){const e=new P,t=new ds,n=this._renderer,i=this.isPresenting,r=n.getOutputRenderTarget(),o=n._frameBufferTarget;this.isPresenting=!1;const a=new oe;n.getSize(a);const c=n._quad;for(const l of this._layers)if(l.renderTarget.isXRRenderTarget=this._session!==null,l.renderTarget._hasExternalTextures=l.renderTarget.isXRRenderTarget,l.renderTarget.isXRRenderTarget&&this._sessionUsesLayers){l.xrlayer.transform=new XRRigidTransform(l.plane.getWorldPosition(e),l.plane.getWorldQuaternion(t));const u=this._glBinding.getSubImage(l.xrlayer,this._xrFrame);n.backend.setXRRenderTargetTextures(l.renderTarget,u.colorTexture,void 0),n._setXRLayerSize(l.renderTarget.width,l.renderTarget.height),n.setOutputRenderTarget(l.renderTarget),n.setRenderTarget(null),n._frameBufferTarget=null,this._frameBufferTargets||(this._frameBufferTargets=new WeakMap);const{frameBufferTarget:h,quad:d}=this._frameBufferTargets.get(l.renderTarget)||{frameBufferTarget:null,quad:null};h?(n._frameBufferTarget=h,n._quad=d):(n._quad=new xd(new fn),this._frameBufferTargets.set(l.renderTarget,{frameBufferTarget:n._getFrameBufferTarget(),quad:n._quad})),l.rendercall(),n._frameBufferTarget=null}else n.setRenderTarget(l.renderTarget),l.rendercall();n.setRenderTarget(null),n.setOutputRenderTarget(r),n._frameBufferTarget=o,n._setXRLayerSize(a.x,a.y),n._quad=c,this.isPresenting=i}getSession(){return this._session}async setSession(e){const t=this._renderer,n=t.backend;this._gl=t.getContext();const i=this._gl,r=i.getContextAttributes();if(this._session=e,e!==null){if(n.isWebGPUBackend===!0)throw new Error('THREE.XRManager: XR is currently not supported with a WebGPU backend. Use WebGL by passing "{ forceWebGL: true }" to the constructor of the renderer.');if(e.addEventListener("select",this._onSessionEvent),e.addEventListener("selectstart",this._onSessionEvent),e.addEventListener("selectend",this._onSessionEvent),e.addEventListener("squeeze",this._onSessionEvent),e.addEventListener("squeezestart",this._onSessionEvent),e.addEventListener("squeezeend",this._onSessionEvent),e.addEventListener("end",this._onSessionEnd),e.addEventListener("inputsourceschange",this._onInputSourcesChange),await n.makeXRCompatible(),this._currentPixelRatio=t.getPixelRatio(),t.getSize(this._currentSize),this._currentAnimationContext=t._animation.getContext(),this._currentAnimationLoop=t._animation.getAnimationLoop(),t._animation.stop(),this._supportsLayers===!0){let o=null,a=null,c=null;t.depth&&(c=t.stencil?i.DEPTH24_STENCIL8:i.DEPTH_COMPONENT24,o=t.stencil?Oi:Bi,a=t.stencil?Fi:Kt);const l={colorFormat:i.RGBA8,depthFormat:c,scaleFactor:this._framebufferScaleFactor,clearOnAccess:!1};this._useMultiviewIfPossible&&t.hasFeature("OVR_multiview2")&&(l.textureType="texture-array",this._useMultiview=!0),this._glBinding=this.getBinding();const u=this._glBinding.createProjectionLayer(l),h=[u];this._glProjLayer=u,t.setPixelRatio(1),t._setXRLayerSize(u.textureWidth,u.textureHeight);const d=this._useMultiview?2:1,f=new Vi(u.textureWidth,u.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,o,d);if(this._xrRenderTarget=new qc(u.textureWidth,u.textureHeight,{format:_n,type:un,colorSpace:t.outputColorSpace,depthTexture:f,stencilBuffer:t.stencil,samples:r.antialias?4:0,resolveDepthBuffer:u.ignoreDepthValues===!1,resolveStencilBuffer:u.ignoreDepthValues===!1,depth:this._useMultiview?2:1,multiview:this._useMultiview}),this._xrRenderTarget._hasExternalTextures=!0,this._xrRenderTarget.depth=this._useMultiview?2:1,this._sessionUsesLayers=e.enabledFeatures.includes("layers"),this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType()),this._sessionUsesLayers)for(const p of this._layers)p.plane.material=new sr({color:16777215,side:p.type==="cylinder"?Xt:Ui}),p.plane.material.blending=ya,p.plane.material.blendEquation=Kn,p.plane.material.blendSrc=nr,p.plane.material.blendDst=nr,p.xrlayer=this._createXRLayer(p),h.unshift(p.xrlayer);e.updateRenderState({layers:h})}else{const o={antialias:t.currentSamples>0,alpha:!0,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:this.getFramebufferScaleFactor()},a=new XRWebGLLayer(e,i,o);this._glBaseLayer=a,e.updateRenderState({baseLayer:a}),t.setPixelRatio(1),t._setXRLayerSize(a.framebufferWidth,a.framebufferHeight),this._xrRenderTarget=new qc(a.framebufferWidth,a.framebufferHeight,{format:_n,type:un,colorSpace:t.outputColorSpace,stencilBuffer:t.stencil,resolveDepthBuffer:a.ignoreDepthValues===!1,resolveStencilBuffer:a.ignoreDepthValues===!1}),this._xrRenderTarget._isOpaqueFramebuffer=!0,this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType())}this.setFoveation(this.getFoveation()),t._animation.setAnimationLoop(this._onAnimationFrame),t._animation.setContext(e),t._animation.start(),this.isPresenting=!0,this.dispatchEvent({type:"sessionstart"})}}updateCamera(e){const t=this._session;if(t===null)return;const n=e.near,i=e.far,r=this._cameraXR,o=this._cameraL,a=this._cameraR;r.near=a.near=o.near=n,r.far=a.far=o.far=i,r.isMultiViewCamera=this._useMultiview,(this._currentDepthNear!==r.near||this._currentDepthFar!==r.far)&&(t.updateRenderState({depthNear:r.near,depthFar:r.far}),this._currentDepthNear=r.near,this._currentDepthFar=r.far),r.layers.mask=e.layers.mask|6,o.layers.mask=r.layers.mask&3,a.layers.mask=r.layers.mask&5;const c=e.parent,l=r.cameras;o_(r,c);for(let u=0;u<l.length;u++)o_(l[u],c);l.length===2?QO(r,o,a):r.projectionMatrix.copy(o.projectionMatrix),JO(e,r,c)}_getController(e){let t=this._controllers[e];return t===void 0&&(t=new ah,this._controllers[e]=t),t}}function QO(s,e,t){s_.setFromMatrixPosition(e.matrixWorld),r_.setFromMatrixPosition(t.matrixWorld);const n=s_.distanceTo(r_),i=e.projectionMatrix.elements,r=t.projectionMatrix.elements,o=i[14]/(i[10]-1),a=i[14]/(i[10]+1),c=(i[9]+1)/i[5],l=(i[9]-1)/i[5],u=(i[8]-1)/i[0],h=(r[8]+1)/r[0],d=o*u,f=o*h,p=n/(-u+h),x=p*-u;if(e.matrixWorld.decompose(s.position,s.quaternion,s.scale),s.translateX(x),s.translateZ(p),s.matrixWorld.compose(s.position,s.quaternion,s.scale),s.matrixWorldInverse.copy(s.matrixWorld).invert(),i[10]===-1)s.projectionMatrix.copy(e.projectionMatrix),s.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{const g=o+p,m=a+p,b=d-x,y=f+(n-x),v=c*a/m*g,w=l*a/m*g;s.projectionMatrix.makePerspective(b,y,v,w,g,m),s.projectionMatrixInverse.copy(s.projectionMatrix).invert()}}function o_(s,e){e===null?s.matrixWorld.copy(s.matrix):s.matrixWorld.multiplyMatrices(e.matrixWorld,s.matrix),s.matrixWorldInverse.copy(s.matrixWorld).invert()}function JO(s,e,t){t===null?s.matrix.copy(e.matrixWorld):(s.matrix.copy(t.matrixWorld),s.matrix.invert(),s.matrix.multiply(e.matrixWorld)),s.matrix.decompose(s.position,s.quaternion,s.scale),s.updateMatrixWorld(!0),s.projectionMatrix.copy(e.projectionMatrix),s.projectionMatrixInverse.copy(e.projectionMatrixInverse),s.isPerspectiveCamera&&(s.fov=Ro*2*Math.atan(1/s.projectionMatrix.elements[5]),s.zoom=1)}function eV(s){const e=this._controllerInputSources.indexOf(s.inputSource);if(e===-1)return;const t=this._controllers[e];if(t!==void 0){const n=this.getReferenceSpace();t.update(s.inputSource,s.frame,n),t.dispatchEvent({type:s.type,data:s.inputSource})}}function tV(){const s=this._session,e=this._renderer;s.removeEventListener("select",this._onSessionEvent),s.removeEventListener("selectstart",this._onSessionEvent),s.removeEventListener("selectend",this._onSessionEvent),s.removeEventListener("squeeze",this._onSessionEvent),s.removeEventListener("squeezestart",this._onSessionEvent),s.removeEventListener("squeezeend",this._onSessionEvent),s.removeEventListener("end",this._onSessionEnd),s.removeEventListener("inputsourceschange",this._onInputSourcesChange);for(let t=0;t<this._controllers.length;t++){const n=this._controllerInputSources[t];n!==null&&(this._controllerInputSources[t]=null,this._controllers[t].disconnect(n))}if(this._currentDepthNear=null,this._currentDepthFar=null,e._resetXRState(),this._session=null,this._xrRenderTarget=null,this._glBinding=null,this._glBaseLayer=null,this._glProjLayer=null,this._sessionUsesLayers===!0)for(const t of this._layers)t.renderTarget=new qc(t.pixelwidth,t.pixelheight,{format:_n,type:un,depthTexture:new Vi(t.pixelwidth,t.pixelheight,t.stencilBuffer?Fi:Kt,void 0,void 0,void 0,void 0,void 0,void 0,t.stencilBuffer?Oi:Bi),stencilBuffer:t.stencilBuffer,resolveDepthBuffer:!1,resolveStencilBuffer:!1}),t.renderTarget.isXRRenderTarget=!1,t.plane.material=t.material,t.material.map=t.renderTarget.texture,t.material.map.offset.y=1,t.material.map.repeat.y=-1,delete t.xrlayer;this.isPresenting=!1,this._useMultiview=!1,e._animation.stop(),e._animation.setAnimationLoop(this._currentAnimationLoop),e._animation.setContext(this._currentAnimationContext),e._animation.start(),e.setPixelRatio(this._currentPixelRatio),e.setSize(this._currentSize.width,this._currentSize.height,!1),this.dispatchEvent({type:"sessionend"})}function nV(s){const e=this._controllers,t=this._controllerInputSources;for(let n=0;n<s.removed.length;n++){const i=s.removed[n],r=t.indexOf(i);r>=0&&(t[r]=null,e[r].disconnect(i))}for(let n=0;n<s.added.length;n++){const i=s.added[n];let r=t.indexOf(i);if(r===-1){for(let a=0;a<e.length;a++)if(a>=t.length){t.push(i),r=a;break}else if(t[a]===null){t[a]=i,r=a;break}if(r===-1)break}const o=e[r];o&&o.connect(i)}}function iV(s){return s.type==="quad"?this._glBinding.createQuadLayer({transform:new XRRigidTransform(s.translation,s.quaternion),width:s.width/2,height:s.height/2,space:this._referenceSpace,viewPixelWidth:s.pixelwidth,viewPixelHeight:s.pixelheight,clearOnAccess:!1}):this._glBinding.createCylinderLayer({transform:new XRRigidTransform(s.translation,s.quaternion),radius:s.radius,centralAngle:s.centralAngle,aspectRatio:s.aspectRatio,space:this._referenceSpace,viewPixelWidth:s.pixelwidth,viewPixelHeight:s.pixelheight,clearOnAccess:!1})}function sV(s,e){if(e===void 0)return;const t=this._cameraXR,n=this._renderer,i=n.backend,r=this._glBaseLayer,o=this.getReferenceSpace(),a=e.getViewerPose(o);if(this._xrFrame=e,a!==null){const c=a.views;this._glBaseLayer!==null&&i.setXRTarget(r.framebuffer);let l=!1;c.length!==t.cameras.length&&(t.cameras.length=0,l=!0);for(let u=0;u<c.length;u++){const h=c[u];let d;if(this._supportsLayers===!0){const p=this._glBinding.getViewSubImage(this._glProjLayer,h);d=p.viewport,u===0&&i.setXRRenderTargetTextures(this._xrRenderTarget,p.colorTexture,this._glProjLayer.ignoreDepthValues&&!this._useMultiview?void 0:p.depthStencilTexture)}else d=r.getViewport(h);let f=this._cameras[u];f===void 0&&(f=new Wn,f.layers.enable(u),f.viewport=new Ke,this._cameras[u]=f),f.matrix.fromArray(h.transform.matrix),f.matrix.decompose(f.position,f.quaternion,f.scale),f.projectionMatrix.fromArray(h.projectionMatrix),f.projectionMatrixInverse.copy(f.projectionMatrix).invert(),f.viewport.set(d.x,d.y,d.width,d.height),u===0&&(t.matrix.copy(f.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale)),l===!0&&t.cameras.push(f)}n.setOutputRenderTarget(this._xrRenderTarget)}for(let c=0;c<this._controllers.length;c++){const l=this._controllerInputSources[c],u=this._controllers[c];l!==null&&u!==void 0&&u.update(l,e,o)}this._currentAnimationLoop&&this._currentAnimationLoop(s,e),e.detectedPlanes&&this.dispatchEvent({type:"planesdetected",data:e}),this._xrFrame=null}class rV extends xs{constructor(e){super(),this.domElement=e,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new Ke(0,0,this._width,this._height),this._scissor=new Ke(0,0,this._width,this._height),this._scissorTest=!1,this.colorTexture=new am,this.depthTexture=new Vi}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,t,n){this.xr&&this.xr.isPresenting||(this._width=e,this._height=t,this._pixelRatio=n,this.domElement.width=Math.floor(e*n),this.domElement.height=Math.floor(t*n),this.setViewport(0,0,e,t),this._dispatchResize())}setSize(e,t,n=!0){this.xr&&this.xr.isPresenting||(this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),n===!0&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._dispatchResize())}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,n,i){const r=this._scissor;e.isVector4?r.copy(e):r.set(e,t,n,i)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,n,i,r=0,o=1){const a=this._viewport;e.isVector4?a.copy(e):a.set(e,t,n,i),a.minDepth=r,a.maxDepth=o}_dispatchResize(){this.dispatchEvent({type:"resize"})}dispose(){this.dispatchEvent({type:"dispose"})}}const a_=new nm,la=new oe,Pf=new Ke,Lf=new Ol,Df=new rm,Yu=new ht,tr=new Ke;class oV{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:n=!1,alpha:i=!0,depth:r=!0,stencil:o=!1,antialias:a=!1,samples:c=0,getFallback:l=null,colorBufferType:u=hn,multiview:h=!1}=t;this.backend=e,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=i,this.logarithmicDepthBuffer=n,this.outputColorSpace=di,this.toneMapping=oi,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=r,this.stencil=o,this.info=new cD,this.overrideNodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new eM,this.lighting=new KO,this._samples=c||a===!0?4:0,this._onCanvasTargetResize=this._onCanvasTargetResize.bind(this),this._canvasTarget=new rV(e.getDomElement()),this._canvasTarget.addEventListener("resize",this._onCanvasTargetResize),this._canvasTarget.isDefaultCanvasTarget=!0,this._inspector=new uv,this._inspector.setRenderer(this),this._getFallback=l,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new xd(new fn),this._quad.name="Output Color Transform",this._quad.material.name="outputColorTransform",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const d=this.alpha===!0?0:1;this._clearColor=new Mg(0,0,0,d),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._outputRenderTarget=null,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._colorBufferType=u,this._cacheShadowNodes=new WeakMap,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:Rp},this.xr=new ZO(this,h),this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(f,p,x)=>{await this.compileAsync(f,p);const g=this._renderLists.get(f,p),m=this._renderContexts.get(f,p,this._renderTarget),b=f.overrideMaterial||x.material,y=this._objects.get(x,b,f,p,g.lightsNode,m,m.clippingContext),{fragmentShader:v,vertexShader:w}=y.getNodeBuilderState();return{fragmentShader:v,vertexShader:w}}}}async init(){return this._initPromise!==null?this._initPromise:(this._initPromise=new Promise(async(e,t)=>{let n=this.backend;try{await n.init(this)}catch(i){if(this._getFallback!==null)try{this.backend=n=this._getFallback(i),await n.init(this)}catch(r){t(r);return}else{t(i);return}}this._nodes=new XO(this,n),this._animation=new JL(this,this._nodes,this.info),this._attributes=new oD(n),this._background=new aO(this,this._nodes),this._geometries=new aD(this._attributes,this.info),this._textures=new TD(this,n,this.info),this._pipelines=new dD(n,this._nodes),this._bindings=new fD(n,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new iD(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new gD(this.lighting),this._bundles=new YO,this._renderContexts=new vD,this._animation.start(),this._initialized=!0,this._inspector.init(),e(this)}),this._initPromise)}get domElement(){return this._canvasTarget.domElement}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,n=null){if(this._isDeviceLost===!0)return;this._initialized===!1&&await this.init();const i=this._nodes.nodeFrame,r=i.renderId,o=this._currentRenderContext,a=this._currentRenderObjectFunction,c=this._compilationPromises,l=e.isScene===!0?e:a_;n===null&&(n=e);const u=this._renderTarget,h=this._renderContexts.get(n,t,u),d=this._activeMipmapLevel,f=[];this._currentRenderContext=h,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=f,i.renderId++,i.update(),h.depth=this.depth,h.stencil=this.stencil,h.clippingContext||(h.clippingContext=new Bh),h.clippingContext.updateGlobal(l,t),l.onBeforeRender(this,e,t,u);const p=this._renderLists.get(e,t);if(p.begin(),this._projectObject(e,t,0,p,h.clippingContext),n!==e&&n.traverseVisible(function(y){y.isLight&&y.layers.test(t.layers)&&p.pushLight(y)}),p.finish(),u!==null){this._textures.updateRenderTarget(u,d);const y=this._textures.get(u);h.textures=y.textures,h.depthTexture=y.depthTexture}else h.textures=null,h.depthTexture=null;this._background.update(l,p,h);const x=p.opaque,g=p.transparent,m=p.transparentDoublePass,b=p.lightsNode;this.opaque===!0&&x.length>0&&this._renderObjects(x,t,l,b),this.transparent===!0&&g.length>0&&this._renderTransparents(g,m,t,l,b),i.renderId=r,this._currentRenderContext=o,this._currentRenderObjectFunction=a,this._compilationPromises=c,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(f)}async renderAsync(e,t){Wt('Renderer: "renderAsync()" has been deprecated. Use "render()" and "await renderer.init();" when creating the renderer.'),await this.init(),this.render(e,t)}async waitForGPU(){ge("Renderer: waitForGPU() has been removed. Read https://github.com/mrdoob/three.js/issues/32012 for more information.")}set inspector(e){this._inspector!==null&&this._inspector.setRenderer(null),this._inspector=e,this._inspector.setRenderer(this)}get inspector(){return this._inspector}set highPrecision(e){e===!0?(this.overrideNodes.modelViewMatrix=dp,this.overrideNodes.modelNormalViewMatrix=fp):this.highPrecision&&(this.overrideNodes.modelViewMatrix=null,this.overrideNodes.modelNormalViewMatrix=null)}get highPrecision(){return this.overrideNodes.modelViewMatrix===dp&&this.overrideNodes.modelNormalViewMatrix===fp}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getColorBufferType(){return this._colorBufferType}_onDeviceLost(e){let t=`THREE.WebGPURenderer: ${e.api} Device Lost:

Message: ${e.message}`;e.reason&&(t+=`
Reason: ${e.reason}`),ge(t),this._isDeviceLost=!0}_renderBundle(e,t,n){const{bundleGroup:i,camera:r,renderList:o}=e,a=this._currentRenderContext,c=this._bundles.get(i,r),l=this.backend.get(c);l.renderContexts===void 0&&(l.renderContexts=new Set);const u=i.version!==l.version,h=l.renderContexts.has(a)===!1||u;if(l.renderContexts.add(a),h){this.backend.beginBundle(a),(l.renderObjects===void 0||u)&&(l.renderObjects=[]),this._currentRenderBundle=c;const{transparentDoublePass:d,transparent:f,opaque:p}=o;this.opaque===!0&&p.length>0&&this._renderObjects(p,r,t,n),this.transparent===!0&&f.length>0&&this._renderTransparents(f,d,r,t,n),this._currentRenderBundle=null,this.backend.finishBundle(a,c),l.version=i.version}else{const{renderObjects:d}=l;for(let f=0,p=d.length;f<p;f++){const x=d[f];this._nodes.needsRefresh(x)&&(this._nodes.updateBefore(x),this._nodes.updateForRender(x),this._bindings.updateForRender(x),this._nodes.updateAfter(x))}}this.backend.addBundle(a,c)}render(e,t){if(this._initialized===!1)throw new Error('Renderer: .render() called before the backend is initialized. Use "await renderer.init();" before rendering.');this._renderScene(e,t)}get initialized(){return this._initialized}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this,n=e!==oi,i=t!==et.workingColorSpace;if(n===!1&&i===!1)return null;const{width:r,height:o}=this.getDrawingBufferSize(la),{depth:a,stencil:c}=this;let l=this._frameBufferTarget;l===null&&(l=new mr(r,o,{depthBuffer:a,stencilBuffer:c,type:this._colorBufferType,format:_n,colorSpace:et.workingColorSpace,generateMipmaps:!1,minFilter:ln,magFilter:ln,samples:this.samples}),l.isPostProcessingRenderTarget=!0,this._frameBufferTarget=l);const u=this.getOutputRenderTarget();l.depthBuffer=a,l.stencilBuffer=c,u!==null?l.setSize(u.width,u.height,u.depth):l.setSize(r,o,1);const h=this._canvasTarget;return l.viewport.copy(h._viewport),l.scissor.copy(h._scissor),l.viewport.multiplyScalar(h._pixelRatio),l.scissor.multiplyScalar(h._pixelRatio),l.scissorTest=h._scissorTest,l.multiview=u!==null?u.multiview:!1,l.resolveDepthBuffer=u!==null?u.resolveDepthBuffer:!0,l._autoAllocateDepthBuffer=u!==null?u._autoAllocateDepthBuffer:!1,l}_renderScene(e,t,n=!0){if(this._isDeviceLost===!0)return;const i=n?this._getFrameBufferTarget():null,r=this._nodes.nodeFrame,o=r.renderId,a=this._currentRenderContext,c=this._currentRenderObjectFunction,l=e.isScene===!0?e:a_,u=this._renderTarget||this._outputRenderTarget,h=this._activeCubeFace,d=this._activeMipmapLevel;let f;i!==null?(f=i,this.setRenderTarget(f)):f=u;const p=this._renderContexts.get(e,t,f);this._currentRenderContext=p,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,r.renderId=this.info.calls,this.backend.updateTimeStampUID(p),this.inspector.beginRender(this.backend.getTimestampUID(p),e,t,f);const x=this.coordinateSystem,g=this.xr;if(t.coordinateSystem!==x&&g.isPresenting===!1&&(t.coordinateSystem=x,t.updateProjectionMatrix(),t.isArrayCamera))for(const $ of t.cameras)$.coordinateSystem=x,$.updateProjectionMatrix();e.matrixWorldAutoUpdate===!0&&e.updateMatrixWorld(),t.parent===null&&t.matrixWorldAutoUpdate===!0&&t.updateMatrixWorld(),g.enabled===!0&&g.isPresenting===!0&&(g.cameraAutoUpdate===!0&&g.updateCamera(t),t=g.getCamera());const m=this._canvasTarget;let b=m._viewport,y=m._scissor,v=m._pixelRatio;f!==null&&(b=f.viewport,y=f.scissor,v=1),this.getDrawingBufferSize(la),Pf.set(0,0,la.width,la.height);const w=b.minDepth===void 0?0:b.minDepth,S=b.maxDepth===void 0?1:b.maxDepth;p.viewportValue.copy(b).multiplyScalar(v).floor(),p.viewportValue.width>>=d,p.viewportValue.height>>=d,p.viewportValue.minDepth=w,p.viewportValue.maxDepth=S,p.viewport=p.viewportValue.equals(Pf)===!1,p.scissorValue.copy(y).multiplyScalar(v).floor(),p.scissor=m._scissorTest&&p.scissorValue.equals(Pf)===!1,p.scissorValue.width>>=d,p.scissorValue.height>>=d,p.clippingContext||(p.clippingContext=new Bh),p.clippingContext.updateGlobal(l,t),l.onBeforeRender(this,e,t,f);const E=t.isArrayCamera?Df:Lf;t.isArrayCamera||(Yu.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),E.setFromProjectionMatrix(Yu,t.coordinateSystem,t.reversedDepth));const C=this._renderLists.get(e,t);if(C.begin(),this._projectObject(e,t,0,C,p.clippingContext),C.finish(),this.sortObjects===!0&&C.sort(this._opaqueSort,this._transparentSort),f!==null){this._textures.updateRenderTarget(f,d);const $=this._textures.get(f);p.textures=$.textures,p.depthTexture=$.depthTexture,p.width=$.width,p.height=$.height,p.renderTarget=f,p.depth=f.depthBuffer,p.stencil=f.stencilBuffer}else p.textures=null,p.depthTexture=null,p.width=la.width,p.height=la.height,p.depth=this.depth,p.stencil=this.stencil;p.width>>=d,p.height>>=d,p.activeCubeFace=h,p.activeMipmapLevel=d,p.occlusionQueryCount=C.occlusionQueryCount,p.scissorValue.max(tr.set(0,0,0,0)),p.scissorValue.x+p.scissorValue.width>p.width&&(p.scissorValue.width=Math.max(p.width-p.scissorValue.x,0)),p.scissorValue.y+p.scissorValue.height>p.height&&(p.scissorValue.height=Math.max(p.height-p.scissorValue.y,0)),this._background.update(l,C,p),p.camera=t,this.backend.beginRender(p);const{bundles:T,lightsNode:M,transparentDoublePass:I,transparent:G,opaque:z}=C;return T.length>0&&this._renderBundles(T,l,M),this.opaque===!0&&z.length>0&&this._renderObjects(z,t,l,M),this.transparent===!0&&G.length>0&&this._renderTransparents(G,I,t,l,M),this.backend.finishRender(p),r.renderId=o,this._currentRenderContext=a,this._currentRenderObjectFunction=c,i!==null&&(this.setRenderTarget(u,h,d),this._renderOutput(f)),l.onAfterRender(this,e,t,f),this.inspector.finishRender(this.backend.getTimestampUID(p)),p}_setXRLayerSize(e,t){this._canvasTarget._width=e,this._canvasTarget._height=t,this.setViewport(0,0,e,t)}_renderOutput(e){const t=this._quad;this._nodes.hasOutputChange(e.texture)&&(t.material.fragmentNode=this._nodes.getOutputNode(e.texture),t.material.needsUpdate=!0);const n=this.autoClear,i=this.xr.enabled;this.autoClear=!1,this.xr.enabled=!1,this._renderScene(t,t.camera,!1),this.autoClear=n,this.xr.enabled=i}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){this._initialized===!1&&await this.init(),this._animation.setAnimationLoop(e)}getAnimationLoop(){return this._animation.getAnimationLoop()}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._canvasTarget.getPixelRatio()}getDrawingBufferSize(e){return this._canvasTarget.getDrawingBufferSize(e)}getSize(e){return this._canvasTarget.getSize(e)}setPixelRatio(e=1){this._canvasTarget.setPixelRatio(e)}setDrawingBufferSize(e,t,n){this.xr&&this.xr.isPresenting||this._canvasTarget.setDrawingBufferSize(e,t,n)}setSize(e,t,n=!0){this.xr&&this.xr.isPresenting||this._canvasTarget.setSize(e,t,n)}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){return this._canvasTarget.getScissor(e)}setScissor(e,t,n,i){this._canvasTarget.setScissor(e,t,n,i)}getScissorTest(){return this._canvasTarget.getScissorTest()}setScissorTest(e){this._canvasTarget.setScissorTest(e),this.backend.setScissorTest(e)}getViewport(e){return this._canvasTarget.getViewport(e)}setViewport(e,t,n,i,r=0,o=1){this._canvasTarget.setViewport(e,t,n,i,r,o)}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,n=!0){if(this._initialized===!1)throw new Error('Renderer: .clear() called before the backend is initialized. Use "await renderer.init();" before before using this method.');const i=this._renderTarget||this._getFrameBufferTarget();let r=null;if(i!==null){this._textures.updateRenderTarget(i);const o=this._textures.get(i);r=this._renderContexts.getForClear(i),r.textures=o.textures,r.depthTexture=o.depthTexture,r.width=o.width,r.height=o.height,r.renderTarget=i,r.depth=i.depthBuffer,r.stencil=i.stencilBuffer,r.clearColorValue=this.backend.getClearColor(),r.activeCubeFace=this.getActiveCubeFace(),r.activeMipmapLevel=this.getActiveMipmapLevel()}this.backend.clear(e,t,n,r),i!==null&&this._renderTarget===null&&this._renderOutput(i)}clearColor(){this.clear(!0,!1,!1)}clearDepth(){this.clear(!1,!0,!1)}clearStencil(){this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,n=!0){Wt('Renderer: "clearAsync()" has been deprecated. Use "clear()" and "await renderer.init();" when creating the renderer.'),await this.init(),this.clear(e,t,n)}async clearColorAsync(){Wt('Renderer: "clearColorAsync()" has been deprecated. Use "clearColor()" and "await renderer.init();" when creating the renderer.'),this.clear(!0,!1,!1)}async clearDepthAsync(){Wt('Renderer: "clearDepthAsync()" has been deprecated. Use "clearDepth()" and "await renderer.init();" when creating the renderer.'),this.clear(!1,!0,!1)}async clearStencilAsync(){Wt('Renderer: "clearStencilAsync()" has been deprecated. Use "clearStencil()" and "await renderer.init();" when creating the renderer.'),this.clear(!1,!1,!0)}get needsFrameBufferTarget(){const e=this.currentToneMapping!==oi,t=this.currentColorSpace!==et.workingColorSpace;return e||t}get samples(){return this._samples}get currentSamples(){let e=this._samples;return this._renderTarget!==null?e=this._renderTarget.samples:this.needsFrameBufferTarget&&(e=0),e}get currentToneMapping(){return this.isOutputTarget?this.toneMapping:oi}get currentColorSpace(){return this.isOutputTarget?this.outputColorSpace:et.workingColorSpace}get isOutputTarget(){return this._renderTarget===this._outputRenderTarget||this._renderTarget===null}dispose(){this._initialized===!0&&(this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._geometries.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this._frameBufferTarget!==null&&this._frameBufferTarget.dispose(),Object.values(this.backend.timestampQueryPool).forEach(e=>{e!==null&&e.dispose()})),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,n=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=n}getRenderTarget(){return this._renderTarget}setOutputRenderTarget(e){this._outputRenderTarget=e}getOutputRenderTarget(){return this._outputRenderTarget}setCanvasTarget(e){this._canvasTarget.removeEventListener("resize",this._onCanvasTargetResize),this._canvasTarget=e,this._canvasTarget.addEventListener("resize",this._onCanvasTargetResize)}getCanvasTarget(){return this._canvasTarget}_resetXRState(){this.backend.setXRTarget(null),this.setOutputRenderTarget(null),this.setRenderTarget(null),this._frameBufferTarget.dispose(),this._frameBufferTarget=null}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e,t=null){if(this._isDeviceLost===!0)return;if(this._initialized===!1)return te("Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e,t);const n=this._nodes.nodeFrame,i=n.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,n.renderId=this.info.calls,this.backend.updateTimeStampUID(e),this.inspector.beginCompute(this.backend.getTimestampUID(e),e);const r=this.backend,o=this._pipelines,a=this._bindings,c=this._nodes,l=Array.isArray(e)?e:[e];if(l[0]===void 0||l[0].isComputeNode!==!0)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");r.beginCompute(e);for(const u of l){if(o.has(u)===!1){const f=()=>{u.removeEventListener("dispose",f),o.delete(u),a.deleteForCompute(u),c.delete(u)};u.addEventListener("dispose",f);const p=u.onInitFunction;p!==null&&p.call(u,{renderer:this})}c.updateForCompute(u),a.updateForCompute(u);const h=a.getForCompute(u),d=o.getForCompute(u,h);r.compute(e,u,h,d,t)}r.finishCompute(e),n.renderId=i,this.inspector.finishCompute(this.backend.getTimestampUID(e))}async computeAsync(e,t=null){this._initialized===!1&&await this.init(),this.compute(e,t)}async hasFeatureAsync(e){return Wt('Renderer: "hasFeatureAsync()" has been deprecated. Use "hasFeature()" and "await renderer.init();" when creating the renderer.'),await this.init(),this.hasFeature(e)}async resolveTimestampsAsync(e="render"){return this._initialized===!1&&await this.init(),this.backend.resolveTimestampsAsync(e)}hasFeature(e){if(this._initialized===!1)throw new Error('Renderer: .hasFeature() called before the backend is initialized. Use "await renderer.init();" before before using this method.');return this.backend.hasFeature(e)}hasInitialized(){return this._initialized}async initTextureAsync(e){Wt('Renderer: "initTextureAsync()" has been deprecated. Use "initTexture()" and "await renderer.init();" when creating the renderer.'),await this.init(),this.initTexture(e)}initTexture(e){if(this._initialized===!1)throw new Error('Renderer: .initTexture() called before the backend is initialized. Use "await renderer.init();" before before using this method.');this._textures.updateTexture(e)}copyFramebufferToTexture(e,t=null){if(t!==null)if(t.isVector2)t=tr.set(t.x,t.y,e.image.width,e.image.height).floor();else if(t.isVector4)t=tr.copy(t).floor();else{ge("Renderer.copyFramebufferToTexture: Invalid rectangle.");return}else t=tr.set(0,0,e.image.width,e.image.height);let n=this._currentRenderContext,i;n!==null?i=n.renderTarget:(i=this._renderTarget||this._getFrameBufferTarget(),i!==null&&(this._textures.updateRenderTarget(i),n=this._textures.get(i))),this._textures.updateTexture(e,{renderTarget:i}),this.backend.copyFramebufferToTexture(e,n,t),this._inspector.copyFramebufferToTexture(e)}copyTextureToTexture(e,t,n=null,i=null,r=0,o=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,n,i,r,o),this._inspector.copyTextureToTexture(e,t)}async readRenderTargetPixelsAsync(e,t,n,i,r,o=0,a=0){return this.backend.copyTextureToBuffer(e.textures[o],t,n,i,r,a)}_projectObject(e,t,n,i,r){if(e.visible===!1)return;if(e.layers.test(t.layers)){if(e.isGroup)n=e.renderOrder,e.isClippingGroup&&e.enabled&&(r=r.getGroupContext(e));else if(e.isLOD)e.autoUpdate===!0&&e.update(t);else if(e.isLight)i.pushLight(e);else if(e.isSprite){const c=t.isArrayCamera?Df:Lf;if(!e.frustumCulled||c.intersectsSprite(e,t)){this.sortObjects===!0&&tr.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Yu);const{geometry:l,material:u}=e;u.visible&&i.push(e,l,u,n,tr.z,null,r)}}else if(e.isLineLoop)ge("Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if(e.isMesh||e.isLine||e.isPoints){const c=t.isArrayCamera?Df:Lf;if(!e.frustumCulled||c.intersectsObject(e,t)){const{geometry:l,material:u}=e;if(this.sortObjects===!0&&(l.boundingSphere===null&&l.computeBoundingSphere(),tr.copy(l.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(Yu)),Array.isArray(u)){const h=l.groups;for(let d=0,f=h.length;d<f;d++){const p=h[d],x=u[p.materialIndex];x&&x.visible&&i.push(e,l,x,n,tr.z,p,r)}}else u.visible&&i.push(e,l,u,n,tr.z,null,r)}}}if(e.isBundleGroup===!0&&this.backend.beginBundle!==void 0){const c=i;i=this._renderLists.get(e,t),i.begin(),c.pushBundle({bundleGroup:e,camera:t,renderList:i}),i.finish()}const a=e.children;for(let c=0,l=a.length;c<l;c++)this._projectObject(a[c],t,n,i,r)}_renderBundles(e,t,n){for(const i of e)this._renderBundle(i,t,n)}_renderTransparents(e,t,n,i,r){if(t.length>0){for(const{material:o}of t)o.side=Xt;this._renderObjects(t,n,i,r,"backSide");for(const{material:o}of t)o.side=Ui;this._renderObjects(e,n,i,r);for(const{material:o}of t)o.side=jn}else this._renderObjects(e,n,i,r)}_renderObjects(e,t,n,i,r=null){for(let o=0,a=e.length;o<a;o++){const{object:c,geometry:l,material:u,group:h,clippingContext:d}=e[o];this._currentRenderObjectFunction(c,n,t,l,u,h,i,d,r)}}_getShadowNodes(e){const t=e.version;let n=this._cacheShadowNodes.get(e);if(n===void 0||n.version!==t){const i=e.map!==null,r=e.colorNode&&e.colorNode.isNode,o=e.castShadowNode&&e.castShadowNode.isNode;let a=null,c=null,l=null;if(i||r||o){let u,h;o?(u=e.castShadowNode.rgb,h=e.castShadowNode.a):(u=F(0),h=R(1)),i&&(h=h.mul(Gt("map","texture",e).a)),r&&(h=h.mul(e.colorNode.a)),c=$e(u,h)}e.depthNode&&e.depthNode.isNode&&(l=e.depthNode),e.castShadowPositionNode&&e.castShadowPositionNode.isNode?a=e.castShadowPositionNode:e.positionNode&&e.positionNode.isNode&&(a=e.positionNode),n={version:t,colorNode:c,depthNode:l,positionNode:a},this._cacheShadowNodes.set(e,n)}return n}renderObject(e,t,n,i,r,o,a,c=null,l=null){let u=!1,h,d,f,p;if(e.onBeforeRender(this,t,n,i,r,o),r.allowOverride===!0&&t.overrideMaterial!==null){const x=t.overrideMaterial;if(u=!0,h=t.overrideMaterial.colorNode,d=t.overrideMaterial.depthNode,f=t.overrideMaterial.positionNode,p=t.overrideMaterial.side,r.positionNode&&r.positionNode.isNode&&(x.positionNode=r.positionNode),x.alphaTest=r.alphaTest,x.alphaMap=r.alphaMap,x.transparent=r.transparent||r.transmission>0||r.transmissionNode&&r.transmissionNode.isNode||r.backdropNode&&r.backdropNode.isNode,x.isShadowPassMaterial){const{colorNode:g,depthNode:m,positionNode:b}=this._getShadowNodes(r);x.side=r.shadowSide===null?r.side:r.shadowSide,g!==null&&(x.colorNode=g),m!==null&&(x.depthNode=m),b!==null&&(x.positionNode=b)}r=x}r.transparent===!0&&r.side===jn&&r.forceSinglePass===!1?(r.side=Xt,this._handleObjectFunction(e,r,t,n,a,o,c,"backSide"),r.side=Ui,this._handleObjectFunction(e,r,t,n,a,o,c,l),r.side=jn):this._handleObjectFunction(e,r,t,n,a,o,c,l),u&&(t.overrideMaterial.colorNode=h,t.overrideMaterial.depthNode=d,t.overrideMaterial.positionNode=f,t.overrideMaterial.side=p),e.onAfterRender(this,t,n,i,r,o)}_renderObjectDirect(e,t,n,i,r,o,a,c){const l=this._objects.get(e,t,n,i,r,this._currentRenderContext,a,c);l.drawRange=e.geometry.drawRange,l.group=o;const u=this._nodes.needsRefresh(l);u&&(this._nodes.updateBefore(l),this._geometries.updateForRender(l),this._nodes.updateForRender(l),this._bindings.updateForRender(l)),this._pipelines.updateForRender(l),this._currentRenderBundle!==null&&(this.backend.get(this._currentRenderBundle).renderObjects.push(l),l.bundle=this._currentRenderBundle.bundleGroup),this.backend.draw(l,this.info),u&&this._nodes.updateAfter(l)}_createObjectPipeline(e,t,n,i,r,o,a,c){const l=this._objects.get(e,t,n,i,r,this._currentRenderContext,a,c);l.drawRange=e.geometry.drawRange,l.group=o,this._nodes.updateBefore(l),this._geometries.updateForRender(l),this._nodes.updateForRender(l),this._bindings.updateForRender(l),this._pipelines.getForRender(l,this._compilationPromises),this._nodes.updateAfter(l)}_onCanvasTargetResize(){this._initialized&&this.backend.updateSize()}get compile(){return this.compileAsync}}class tM{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function aV(s){return s+(Nr-s%Nr)%Nr}class nM extends tM{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return aV(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class iM extends nM{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let cV=0;class sM extends iM{constructor(e,t){super("UniformBuffer_"+cV++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class lV extends iM{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}get values(){return this._values===null&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(e===null){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){const e=this.bytesPerElement;let t=0;for(let n=0,i=this.uniforms.length;n<i;n++){const r=this.uniforms[n],o=r.boundary,a=r.itemSize*e,c=t%Nr,l=c%o,u=c+l;t+=l,u!==0&&Nr-u<a&&(t+=Nr-u),r.offset=t/e,t+=a}return Math.ceil(t/Nr)*Nr}update(){let e=!1;for(const t of this.uniforms)this.updateByType(t)===!0&&(e=!0);return e}updateByType(e){if(e.isNumberUniform)return this.updateNumber(e);if(e.isVector2Uniform)return this.updateVector2(e);if(e.isVector3Uniform)return this.updateVector3(e);if(e.isVector4Uniform)return this.updateVector4(e);if(e.isColorUniform)return this.updateColor(e);if(e.isMatrix3Uniform)return this.updateMatrix3(e);if(e.isMatrix4Uniform)return this.updateMatrix4(e);ge("WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const n=this.values,i=e.getValue(),r=e.offset,o=e.getType();if(n[r]!==i){const a=this._getBufferForType(o);a[r]=n[r]=i,t=!0}return t}updateVector2(e){let t=!1;const n=this.values,i=e.getValue(),r=e.offset,o=e.getType();if(n[r+0]!==i.x||n[r+1]!==i.y){const a=this._getBufferForType(o);a[r+0]=n[r+0]=i.x,a[r+1]=n[r+1]=i.y,t=!0}return t}updateVector3(e){let t=!1;const n=this.values,i=e.getValue(),r=e.offset,o=e.getType();if(n[r+0]!==i.x||n[r+1]!==i.y||n[r+2]!==i.z){const a=this._getBufferForType(o);a[r+0]=n[r+0]=i.x,a[r+1]=n[r+1]=i.y,a[r+2]=n[r+2]=i.z,t=!0}return t}updateVector4(e){let t=!1;const n=this.values,i=e.getValue(),r=e.offset,o=e.getType();if(n[r+0]!==i.x||n[r+1]!==i.y||n[r+2]!==i.z||n[r+4]!==i.w){const a=this._getBufferForType(o);a[r+0]=n[r+0]=i.x,a[r+1]=n[r+1]=i.y,a[r+2]=n[r+2]=i.z,a[r+3]=n[r+3]=i.w,t=!0}return t}updateColor(e){let t=!1;const n=this.values,i=e.getValue(),r=e.offset;if(n[r+0]!==i.r||n[r+1]!==i.g||n[r+2]!==i.b){const o=this.buffer;o[r+0]=n[r+0]=i.r,o[r+1]=n[r+1]=i.g,o[r+2]=n[r+2]=i.b,t=!0}return t}updateMatrix3(e){let t=!1;const n=this.values,i=e.getValue().elements,r=e.offset;if(n[r+0]!==i[0]||n[r+1]!==i[1]||n[r+2]!==i[2]||n[r+4]!==i[3]||n[r+5]!==i[4]||n[r+6]!==i[5]||n[r+8]!==i[6]||n[r+9]!==i[7]||n[r+10]!==i[8]){const o=this.buffer;o[r+0]=n[r+0]=i[0],o[r+1]=n[r+1]=i[1],o[r+2]=n[r+2]=i[2],o[r+4]=n[r+4]=i[3],o[r+5]=n[r+5]=i[4],o[r+6]=n[r+6]=i[5],o[r+8]=n[r+8]=i[6],o[r+9]=n[r+9]=i[7],o[r+10]=n[r+10]=i[8],t=!0}return t}updateMatrix4(e){let t=!1;const n=this.values,i=e.getValue().elements,r=e.offset;return hV(n,i,r)===!1&&(this.buffer.set(i,r),uV(n,i,r),t=!0),t}_getBufferForType(e){return e==="int"||e==="ivec2"||e==="ivec3"||e==="ivec4"?new Int32Array(this.buffer.buffer):e==="uint"||e==="uvec2"||e==="uvec3"||e==="uvec4"?new Uint32Array(this.buffer.buffer):this.buffer}}function uV(s,e,t){for(let n=0,i=e.length;n<i;n++)s[t+n]=e[n]}function hV(s,e,t){for(let n=0,i=e.length;n<i;n++)if(s[t+n]!==e[n])return!1;return!0}let dV=0;class rM extends lV{constructor(e,t){super(e),this.id=dV++,this.groupNode=t,this.isNodeUniformsGroup=!0}}class oM extends tM{constructor(e,t){super(e),this._texture=null,this._onTextureDispose=()=>{this.generation=null,this.version=0},this.texture=t,this.version=t?t.version:0,this.generation=null,this.samplerKey="",this.isSampler=!0}set texture(e){this._texture!==e&&(this._texture&&this._texture.removeEventListener("dispose",this._onTextureDispose),this._texture=e,this.generation=null,this.version=0,this._texture&&this._texture.addEventListener("dispose",this._onTextureDispose))}get texture(){return this._texture}update(){const{texture:e,version:t}=this;return t!==e.version?(this.version=e.version,!0):!1}clone(){const e=super.clone();return e._texture=null,e._onTextureDispose=()=>{e.generation=null,e.version=0},e.texture=this.texture,e}}let fV=0;class pV extends oM{constructor(e,t){super(e,t),this.id=fV++,this.store=!1,this.mipLevel=0,this.isSampledTexture=!0}}class Md extends pV{constructor(e,t,n,i=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=n,this.access=i}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class aM extends Md{constructor(e,t,n,i=null){super(e,t,n,i),this.isSampledCubeTexture=!0}}class Ep extends Md{constructor(e,t,n,i=null){super(e,t,n,i),this.isSampledTexture3D=!0}}const c_={bitcast_int_uint:new Fn("uint tsl_bitcast_uint_to_int ( int x ) { return floatBitsToInt( uintBitsToFloat( x ) ); }"),bitcast_uint_int:new Fn("uint tsl_bitcast_int_to_uint ( int x ) { return floatBitsToUint( intBitsToFloat ( x ) ); }")},mV={textureDimensions:"textureSize",equals:"equal",bitcast_float_int:"floatBitsToInt",bitcast_int_float:"intBitsToFloat",bitcast_uint_float:"uintBitsToFloat",bitcast_float_uint:"floatBitsToUint",bitcast_uint_int:"tsl_bitcast_uint_to_int",bitcast_int_uint:"tsl_bitcast_int_to_uint"},gV={low:"lowp",medium:"mediump",high:"highp"},l_={swizzleAssign:!0,storageBuffer:!1},u_={perspective:"smooth",linear:"noperspective"},h_={centroid:"centroid"},d_=`
precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler3D;
precision highp samplerCube;
precision highp sampler2DArray;

precision highp usampler2D;
precision highp usampler3D;
precision highp usamplerCube;
precision highp usampler2DArray;

precision highp isampler2D;
precision highp isampler3D;
precision highp isamplerCube;
precision highp isampler2DArray;

precision lowp sampler2DShadow;
precision lowp sampler2DArrayShadow;
precision lowp samplerCubeShadow;
`;class xV extends QT{constructor(e,t){super(e,t,new $O),this.uniformGroups={},this.transforms=[],this.extensions={},this.builtins={vertex:[],fragment:[],compute:[]}}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==mi}_include(e){const t=c_[e];return t.build(this),this.addInclude(t),t}getMethod(e){return c_[e]!==void 0&&this._include(e),mV[e]||e}getBitcastMethod(e,t){return this.getMethod(`bitcast_${t}_${e}`)}getTernary(e,t,n){return`${e} ? ${t} : ${n}`}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,n=this.flowShaderNode(e),i=[];for(const o of t.inputs)i.push(this.getType(o.type)+" "+o.name);return`${this.getType(t.type)} ${t.name}( ${i.join(", ")} ) {

	${n.vars}

${n.code}
	return ${n.result};

}`}setupPBO(e){const t=e.value;if(t.pbo===void 0){const n=t.array,i=t.count*t.itemSize,{itemSize:r}=t,o=t.array.constructor.name.toLowerCase().includes("int");let a=o?cc:Il;r===2?a=o?lc:hs:r===3?a=o?CM:Ul:r===4&&(a=o?uc:_n);const c={Float32Array:Sn,Uint8Array:un,Uint16Array:us,Uint32Array:Kt,Int8Array:_o,Int16Array:yo,Int32Array:On,Uint8ClampedArray:un},l=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(i/r))));let u=Math.ceil(i/r/l);l*u*r<i&&u++;const h=l*u*r,d=new n.constructor(h);d.set(n,0),t.array=d;const f=new sm(t.array,l,u,a,c[t.array.constructor.name]||Sn);f.needsUpdate=!0,f.isPBOTexture=!0;const p=new Hs(f,null,null);p.setPrecision("high"),t.pboNode=p,t.pbo=p.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.nodeName)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&e.node.isTextureNode!==!0&&e.node.isBufferNode!==!0?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:n}=e,i=t.value;if(this.renderer.backend.has(i)){const u=this.renderer.backend.get(i);u.pbo=i.pbo}const r=this.getUniformFromNode(i.pboNode,"texture",this.shaderStage,this.context.nodeName),o=this.getPropertyName(r);this.increaseUsage(n);const a=n.build(this,"uint"),c=this.getDataFromNode(e);let l=c.propertyName;if(l===void 0){const u=this.getVarFromNode(e);l=this.getPropertyName(u);const h=this.getDataFromNode(t);let d=h.propertySizeName;d===void 0&&(d=l+"Size",this.getVarFromNode(t,d,"uint"),this.addLineFlowCode(`${d} = uint( textureSize( ${o}, 0 ).x )`,e),h.propertySizeName=d);const{itemSize:f}=i,p="."+Io.join("").slice(0,f),x=`ivec2(${a} % ${d}, ${a} / ${d})`,g=this.generateTextureLoad(null,o,x,"0",null,null);let m="vec4";i.pbo.type===Kt?m="uvec4":i.pbo.type===On&&(m="ivec4"),this.addLineFlowCode(`${l} = ${m}(${g})${p}`,e),c.propertyName=l}return l}generateTextureLoad(e,t,n,i,r,o){i===null&&(i="0");let a;return r?o?a=`texelFetchOffset( ${t}, ivec3( ${n}, ${r} ), ${i}, ${o} )`:a=`texelFetch( ${t}, ivec3( ${n}, ${r} ), ${i} )`:o?a=`texelFetchOffset( ${t}, ${n}, ${i}, ${o} )`:a=`texelFetch( ${t}, ${n}, ${i} )`,e!==null&&e.isDepthTexture&&(a+=".x"),a}generateTexture(e,t,n,i,r){return i&&(n=`vec3( ${n}, ${i} )`),e.isDepthTexture?r?`textureOffset( ${t}, ${n}, ${r} ).x`:`texture( ${t}, ${n} ).x`:r?`textureOffset( ${t}, ${n}, ${r} )`:`texture( ${t}, ${n} )`}generateTextureLevel(e,t,n,i,r){return r?`textureLodOffset( ${t}, ${n}, ${i}, ${r} )`:`textureLod( ${t}, ${n}, ${i} )`}generateTextureBias(e,t,n,i,r){return r?`textureOffset( ${t}, ${n}, ${r}, ${i} )`:`texture( ${t}, ${n}, ${i} )`}generateTextureGrad(e,t,n,i,r){return r?`textureGradOffset( ${t}, ${n}, ${i[0]}, ${i[1]}, ${r} )`:`textureGrad( ${t}, ${n}, ${i[0]}, ${i[1]} )`}generateTextureCompare(e,t,n,i,r,o,a=this.shaderStage){if(a==="fragment")return r?o?`textureOffset( ${t}, vec4( ${n}, ${r}, ${i} ), ${o} )`:`texture( ${t}, vec4( ${n}, ${r}, ${i} ) )`:o?`textureOffset( ${t}, vec3( ${n}, ${i} ), ${o} )`:`texture( ${t}, vec3( ${n}, ${i} ) )`;ge(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${a} shader.`)}getVars(e){const t=[],n=this.vars[e];if(n!==void 0)for(const i of n)t.push(`${this.getVar(i.type,i.name,i.count)};`);return t.join(`
	`)}getUniforms(e){const t=this.uniforms[e],n=[],i={};for(const o of t){let a=null,c=!1;if(o.type==="texture"||o.type==="texture3D"){const u=o.node.value;let h="";(u.isDataTexture===!0||u.isData3DTexture===!0)&&(u.type===Kt?h="u":u.type===On&&(h="i")),o.type==="texture3D"&&u.isArrayTexture===!1?a=`${h}sampler3D ${o.name};`:u.compareFunction?u.isArrayTexture===!0?a=`sampler2DArrayShadow ${o.name};`:a=`sampler2DShadow ${o.name};`:u.isArrayTexture===!0||u.isDataArrayTexture===!0||u.isCompressedArrayTexture===!0?a=`${h}sampler2DArray ${o.name};`:a=`${h}sampler2D ${o.name};`}else if(o.type==="cubeTexture")a=`samplerCube ${o.name};`;else if(o.type==="buffer"){const u=o.node,h=this.getType(u.bufferType),d=u.bufferCount,f=d>0?d:"";a=`${u.name} {
	${h} ${o.name}[${f}];
};
`}else a=`${this.getVectorType(o.type)} ${this.getPropertyName(o,e)};`,c=!0;const l=o.node.precision;if(l!==null&&(a=gV[l]+" "+a),c){a="	"+a;const u=o.groupNode.name;(i[u]||(i[u]=[])).push(a)}else a="uniform "+a,n.push(a)}let r="";for(const o in i){const a=i[o];r+=this._getGLSLUniformStruct(e+"_"+o,a.join(`
`))+`
`}return r+=n.join(`
`),r}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==On){let n=e;e.isInterleavedBufferAttribute&&(n=e.data);const i=n.array;i instanceof Uint32Array||i instanceof Int32Array||(t=t.slice(1))}return t}getAttributes(e){let t="";if(e==="vertex"||e==="compute"){const n=this.getAttributesArray();let i=0;for(const r of n)t+=`layout( location = ${i++} ) in ${r.type} ${r.name};
`}return t}getStructMembers(e){const t=[];for(const n of e.members)t.push(`	${n.type} ${n.name};`);return t.join(`
`)}getStructs(e){const t=[],n=this.structs[e],i=[];for(const r of n)if(r.output)for(const o of r.members)i.push(`layout( location = ${o.index} ) out ${o.type} ${o.name};`);else{let o="struct "+r.name+` {
`;o+=this.getStructMembers(r),o+=`
};
`,t.push(o)}return i.length===0&&i.push("layout( location = 0 ) out vec4 fragColor;"),`
`+i.join(`
`)+`

`+t.join(`
`)}getVaryings(e){let t="";const n=this.varyings;if(e==="vertex"||e==="compute")for(const i of n){e==="compute"&&(i.needsInterpolation=!0);const r=this.getType(i.type);if(i.needsInterpolation)if(i.interpolationType){const o=u_[i.interpolationType]||i.interpolationType,a=h_[i.interpolationSampling]||"";t+=`${o} ${a} out ${r} ${i.name};
`}else{const o=r.includes("int")||r.includes("uv")||r.includes("iv")?"flat ":"";t+=`${o}out ${r} ${i.name};
`}else t+=`${r} ${i.name};
`}else if(e==="fragment"){for(const i of n)if(i.needsInterpolation){const r=this.getType(i.type);if(i.interpolationType){const o=u_[i.interpolationType]||i.interpolationType,a=h_[i.interpolationSampling]||"";t+=`${o} ${a} in ${r} ${i.name};
`}else{const o=r.includes("int")||r.includes("uv")||r.includes("iv")?"flat ":"";t+=`${o}in ${r} ${i.name};
`}}}for(const i of this.builtins[e])t+=`${i};
`;return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((n,i)=>n*i,1)}u`}getSubgroupSize(){ge("GLSLNodeBuilder: WebGLBackend does not support the subgroupSize node")}getInvocationSubgroupIndex(){ge("GLSLNodeBuilder: WebGLBackend does not support the invocationSubgroupIndex node")}getSubgroupIndex(){ge("GLSLNodeBuilder: WebGLBackend does not support the subgroupIndex node")}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,n=this.shaderStage){const i=this.extensions[n]||(this.extensions[n]=new Map);i.has(e)===!1&&i.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if(e==="vertex"){const i=this.renderer.backend.extensions;this.object.isBatchedMesh&&i.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const n=this.extensions[e];if(n!==void 0)for(const{name:i,behavior:r}of n.values())t.push(`#extension ${i} : ${r}`);return t.join(`
`)}getClipDistance(){return"gl_ClipDistance"}isAvailable(e){let t=l_[e];if(t===void 0){let n;switch(t=!1,e){case"float32Filterable":n="OES_texture_float_linear";break;case"clipDistance":n="WEBGL_clip_cull_distance";break}if(n!==void 0){const i=this.renderer.backend.extensions;i.has(n)&&(i.get(n),t=!0)}l_[e]=t}return t}isFlipY(){return!0}enableHardwareClipping(e){this.enableExtension("GL_ANGLE_clip_cull_distance","require"),this.builtins.vertex.push(`out float gl_ClipDistance[ ${e} ]`)}enableMultiview(){this.enableExtension("GL_OVR_multiview2","require","fragment"),this.enableExtension("GL_OVR_multiview2","require","vertex"),this.builtins.vertex.push("layout(num_views = 2) in")}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let n=0;n<e.length;n++){const i=e[n],r=this.getPropertyName(i.attributeNode);r&&(t+=`${i.varyingName} = ${r};
	`)}return t}_getGLSLUniformStruct(e,t){return`
layout( std140 ) uniform ${e} {
${t}
};`}_getGLSLVertexCode(e){return`#version 300 es

${this.getSignature()}

// extensions
${e.extensions}

// precision
${d_}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// attributes
${e.attributes}

// codes
${e.codes}

void main() {

	// vars
	${e.vars}

	// transforms
	${e.transforms}

	// flow
	${e.flow}

	gl_PointSize = 1.0;

}
`}_getGLSLFragmentCode(e){return`#version 300 es

${this.getSignature()}

// extensions
${e.extensions}

// precision
${d_}

// structs
${e.structs}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// codes
${e.codes}

void main() {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){let n=`// code

`;n+=this.flowCode[t];const i=this.flowNodes[t],r=i[i.length-1];for(const a of i){const c=this.getFlowData(a),l=a.name;l&&(n.length>0&&(n+=`
`),n+=`	// flow -> ${l}
	`),n+=`${c.code}
	`,a===r&&t!=="compute"&&(n+=`// result
	`,t==="vertex"?(n+="gl_Position = ",n+=`${c.result};`):t==="fragment"&&(a.outputNode.isOutputStructNode||(n+="fragColor = ",n+=`${c.result};`)))}const o=e[t];o.extensions=this.getExtensions(t),o.uniforms=this.getUniforms(t),o.attributes=this.getAttributes(t),o.varyings=this.getVaryings(t),o.vars=this.getVars(t),o.structs=this.getStructs(t),o.codes=this.getCodes(t),o.transforms=this.getTransforms(t),o.flow=n}this.material!==null?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,n,i=null){const r=super.getUniformFromNode(e,t,n,i),o=this.getDataFromNode(e,n,this.globalCache);let a=o.uniformGPU;if(a===void 0){const c=e.groupNode,l=c.name,u=this.getBindGroupArray(l,n);if(t==="texture")a=new Md(r.name,r.node,c),u.push(a);else if(t==="cubeTexture")a=new aM(r.name,r.node,c),u.push(a);else if(t==="texture3D")a=new Ep(r.name,r.node,c),u.push(a);else if(t==="buffer"){e.name=`NodeBuffer_${e.id}`,r.name=`buffer${e.id}`;const h=new sM(e,c);h.name=e.name,u.push(h),a=h}else{const h=this.uniformGroups[n]||(this.uniformGroups[n]={});let d=h[l];d===void 0&&(d=new rM(n+"_"+l,c),h[l]=d,u.push(d)),a=this.getNodeUniform(r,t),d.addUniform(a)}o.uniformGPU=a}return r}}let Uf=null,ua=null;class cM{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null,this.timestampQueryPool={[Ls.RENDER]:null,[Ls.COMPUTE]:null},this.trackTimestamp=e.trackTimestamp===!0}async init(e){this.renderer=e}get coordinateSystem(){}beginRender(){}finishRender(){}beginCompute(){}finishCompute(){}draw(){}compute(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}updateBinding(){}createRenderPipeline(){}createComputePipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}updateSampler(){}createDefaultTexture(){}createTexture(){}updateTexture(){}generateMipmaps(){}destroyTexture(){}async copyTextureToBuffer(){}copyTextureToTexture(){}copyFramebufferToTexture(){}createAttribute(){}createIndexAttribute(){}createStorageAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}updateViewport(){}updateTimeStampUID(e){const t=this.get(e),n=this.renderer.info.frame;let i;e.isComputeNode===!0?i="c:"+this.renderer.info.compute.frameCalls:i="r:"+this.renderer.info.render.frameCalls,t.timestampUID=i+":"+e.id+":f"+n}getTimestampUID(e){return this.get(e).timestampUID}getTimestampFrames(e){const t=this.timestampQueryPool[e];return t?t.getTimestampFrames():[]}_getQueryPool(e){const t=e.startsWith("c:")?Ls.COMPUTE:Ls.RENDER;return this.timestampQueryPool[t]}getTimestamp(e){return this._getQueryPool(e).getTimestamp(e)}hasTimestamp(e){return this._getQueryPool(e).hasTimestamp(e)}isOccluded(){}async resolveTimestampsAsync(e="render"){if(!this.trackTimestamp){Wt("WebGPURenderer: Timestamp tracking is disabled.");return}const t=this.timestampQueryPool[e];if(!t)return;const n=await t.resolveQueriesAsync();return this.renderer.info[e].timestamp=n,n}async getArrayBufferAsync(){}async hasFeatureAsync(){}hasFeature(){}getMaxAnisotropy(){}getDrawingBufferSize(){return Uf=Uf||new oe,this.renderer.getDrawingBufferSize(Uf)}setScissorTest(){}getClearColor(){const e=this.renderer;return ua=ua||new Mg,e.getClearColor(ua),ua.getRGB(ua),ua}getDomElement(){let e=this.domElement;return e===null&&(e=this.parameters.canvas!==void 0?this.parameters.canvas:Q_(),"setAttribute"in e&&e.setAttribute("data-engine","three.js r181 webgpu"),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let _V=0;class yV{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[this.activeBufferIndex^1]}switchBuffers(){this.activeBufferIndex^=1}}class bV{constructor(e){this.backend=e}createAttribute(e,t){const n=this.backend,{gl:i}=n,r=e.array,o=e.usage||i.STATIC_DRAW,a=e.isInterleavedBufferAttribute?e.data:e,c=n.get(a);let l=c.bufferGPU;l===void 0&&(l=this._createBuffer(i,t,r,o),c.bufferGPU=l,c.bufferType=t,c.version=a.version);let u;if(r instanceof Float32Array)u=i.FLOAT;else if(typeof Float16Array<"u"&&r instanceof Float16Array)u=i.HALF_FLOAT;else if(r instanceof Uint16Array)e.isFloat16BufferAttribute?u=i.HALF_FLOAT:u=i.UNSIGNED_SHORT;else if(r instanceof Int16Array)u=i.SHORT;else if(r instanceof Uint32Array)u=i.UNSIGNED_INT;else if(r instanceof Int32Array)u=i.INT;else if(r instanceof Int8Array)u=i.BYTE;else if(r instanceof Uint8Array)u=i.UNSIGNED_BYTE;else if(r instanceof Uint8ClampedArray)u=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+r);let h={bufferGPU:l,bufferType:t,type:u,byteLength:r.byteLength,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:u===i.INT||u===i.UNSIGNED_INT||e.gpuType===On,id:_V++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const d=this._createBuffer(i,t,r,o);h=new yV(h,d)}n.set(e,h)}updateAttribute(e){const t=this.backend,{gl:n}=t,i=e.array,r=e.isInterleavedBufferAttribute?e.data:e,o=t.get(r),a=o.bufferType,c=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(n.bindBuffer(a,o.bufferGPU),c.length===0)n.bufferSubData(a,0,i);else{for(let l=0,u=c.length;l<u;l++){const h=c[l];n.bufferSubData(a,h.start*i.BYTES_PER_ELEMENT,i,h.start,h.count)}r.clearUpdateRanges()}n.bindBuffer(a,null),o.version=r.version}destroyAttribute(e){const t=this.backend,{gl:n}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const i=t.get(e);n.deleteBuffer(i.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:n}=t,i=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:r}=t.get(i),o=e.array,a=o.byteLength;n.bindBuffer(n.COPY_READ_BUFFER,r);const c=n.createBuffer();n.bindBuffer(n.COPY_WRITE_BUFFER,c),n.bufferData(n.COPY_WRITE_BUFFER,a,n.STREAM_READ),n.copyBufferSubData(n.COPY_READ_BUFFER,n.COPY_WRITE_BUFFER,0,0,a),await t.utils._clientWaitAsync();const l=new e.array.constructor(o.length);return n.bindBuffer(n.COPY_WRITE_BUFFER,c),n.getBufferSubData(n.COPY_WRITE_BUFFER,0,l),n.deleteBuffer(c),n.bindBuffer(n.COPY_READ_BUFFER,null),n.bindBuffer(n.COPY_WRITE_BUFFER,null),l.buffer}_createBuffer(e,t,n,i){const r=e.createBuffer();return e.bindBuffer(t,r),e.bufferData(t,n,i),e.bindBuffer(t,null),r}}let If,zc;class vV{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentClippingPlanes=0,this.currentVAO=null,this.currentIndex=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},this._init()}_init(){const e=this.gl;If={[Kn]:e.FUNC_ADD,[Np]:e.FUNC_SUBTRACT,[Cp]:e.FUNC_REVERSE_SUBTRACT},zc={[nr]:e.ZERO,[Pp]:e.ONE,[Lp]:e.SRC_COLOR,[rl]:e.SRC_ALPHA,[Op]:e.SRC_ALPHA_SATURATE,[Fp]:e.DST_COLOR,[Up]:e.DST_ALPHA,[Dp]:e.ONE_MINUS_SRC_COLOR,[ol]:e.ONE_MINUS_SRC_ALPHA,[Bp]:e.ONE_MINUS_DST_COLOR,[Ip]:e.ONE_MINUS_DST_ALPHA};const t=e.getParameter(e.SCISSOR_BOX),n=e.getParameter(e.VIEWPORT);this.currentScissor=new Ke().fromArray(t),this.currentViewport=new Ke().fromArray(n),this._tempVec4=new Ke}enable(e){const{enabled:t}=this;t[e]!==!0&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;t[e]!==!1&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==V_?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===qf?t.cullFace(t.BACK):e===G_?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:n}=this;e!==t&&(n.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,n,i,r,o,a,c){const{gl:l}=this;if(e===ci){this.currentBlendingEnabled===!0&&(this.disable(l.BLEND),this.currentBlendingEnabled=!1);return}if(this.currentBlendingEnabled===!1&&(this.enable(l.BLEND),this.currentBlendingEnabled=!0),e!==ya){if(e!==this.currentBlending||c!==this.currentPremultipledAlpha){if((this.currentBlendEquation!==Kn||this.currentBlendEquationAlpha!==Kn)&&(l.blendEquation(l.FUNC_ADD),this.currentBlendEquation=Kn,this.currentBlendEquationAlpha=Kn),c)switch(e){case Ii:l.blendFuncSeparate(l.ONE,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case Aa:l.blendFunc(l.ONE,l.ONE);break;case wa:l.blendFuncSeparate(l.ZERO,l.ONE_MINUS_SRC_COLOR,l.ZERO,l.ONE);break;case Ra:l.blendFuncSeparate(l.DST_COLOR,l.ONE_MINUS_SRC_ALPHA,l.ZERO,l.ONE);break;default:ge("WebGLState: Invalid blending: ",e);break}else switch(e){case Ii:l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case Aa:l.blendFuncSeparate(l.SRC_ALPHA,l.ONE,l.ONE,l.ONE);break;case wa:ge("WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Ra:ge("WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:ge("WebGLState: Invalid blending: ",e);break}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=c}return}r=r||t,o=o||n,a=a||i,(t!==this.currentBlendEquation||r!==this.currentBlendEquationAlpha)&&(l.blendEquationSeparate(If[t],If[r]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=r),(n!==this.currentBlendSrc||i!==this.currentBlendDst||o!==this.currentBlendSrcAlpha||a!==this.currentBlendDstAlpha)&&(l.blendFuncSeparate(zc[n],zc[i],zc[o],zc[a]),this.currentBlendSrc=n,this.currentBlendDst=i,this.currentBlendSrcAlpha=o,this.currentBlendDstAlpha=a),this.currentBlending=e,this.currentPremultipledAlpha=!1}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case al:t.depthFunc(t.NEVER);break;case cl:t.depthFunc(t.ALWAYS);break;case ll:t.depthFunc(t.LESS);break;case Vr:t.depthFunc(t.LEQUAL);break;case ul:t.depthFunc(t.EQUAL);break;case hl:t.depthFunc(t.GEQUAL);break;case dl:t.depthFunc(t.GREATER);break;case fl:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}scissor(e,t,n,i){const r=this._tempVec4.set(e,t,n,i);if(this.currentScissor.equals(r)===!1){const{gl:o}=this;o.scissor(r.x,r.y,r.z,r.w),this.currentScissor.copy(r)}}viewport(e,t,n,i){const r=this._tempVec4.set(e,t,n,i);if(this.currentViewport.equals(r)===!1){const{gl:o}=this;o.viewport(r.x,r.y,r.z,r.w),this.currentViewport.copy(r)}}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,n){(this.currentStencilFunc!==e||this.currentStencilRef!==t||this.currentStencilFuncMask!==n)&&(this.gl.stencilFunc(e,t,n),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=n)}setStencilOp(e,t,n){(this.currentStencilFail!==e||this.currentStencilZFail!==t||this.currentStencilZPass!==n)&&(this.gl.stencilOp(e,t,n),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=n)}setMaterial(e,t,n){const{gl:i}=this;e.side===jn?this.disable(i.CULL_FACE):this.enable(i.CULL_FACE);let r=e.side===Xt;t&&(r=!r),this.setFlipSided(r),e.blending===Ii&&e.transparent===!1?this.setBlending(ci):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const o=e.stencilWrite;if(this.setStencilTest(o),o&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),e.alphaToCoverage===!0&&this.backend.renderer.currentSamples>0?this.enable(i.SAMPLE_ALPHA_TO_COVERAGE):this.disable(i.SAMPLE_ALPHA_TO_COVERAGE),n>0&&this.currentClippingPlanes!==n)for(let c=0;c<8;c++)c<n?this.enable(12288+c):this.disable(12288+c)}setPolygonOffset(e,t,n){const{gl:i}=this;e?(this.enable(i.POLYGON_OFFSET_FILL),(this.currentPolygonOffsetFactor!==t||this.currentPolygonOffsetUnits!==n)&&(i.polygonOffset(t,n),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=n)):this.disable(i.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e?(this.gl.useProgram(e),this.currentProgram=e,!0):!1}setVertexState(e,t=null){const n=this.gl;return this.currentVAO!==e||this.currentIndex!==t?(n.bindVertexArray(e),t!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t),this.currentVAO=e,this.currentIndex=t,!0):!1}resetVertexState(){const e=this.gl;e.bindVertexArray(null),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),this.currentVAO=null,this.currentIndex=null}bindFramebuffer(e,t){const{gl:n,currentBoundFramebuffers:i}=this;return i[e]!==t?(n.bindFramebuffer(e,t),i[e]=t,e===n.DRAW_FRAMEBUFFER&&(i[n.FRAMEBUFFER]=t),e===n.FRAMEBUFFER&&(i[n.DRAW_FRAMEBUFFER]=t),!0):!1}drawBuffers(e,t){const{gl:n}=this;let i=[],r=!1;if(e.textures!==null){i=this.currentDrawbuffers.get(t),i===void 0&&(i=[],this.currentDrawbuffers.set(t,i));const o=e.textures;if(i.length!==o.length||i[0]!==n.COLOR_ATTACHMENT0){for(let a=0,c=o.length;a<c;a++)i[a]=n.COLOR_ATTACHMENT0+a;i.length=o.length,r=!0}}else i[0]!==n.BACK&&(i[0]=n.BACK,r=!0);r&&n.drawBuffers(i)}activeTexture(e){const{gl:t,currentTextureSlot:n,maxTextures:i}=this;e===void 0&&(e=t.TEXTURE0+i-1),n!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,n){const{gl:i,currentTextureSlot:r,currentBoundTextures:o,maxTextures:a}=this;n===void 0&&(r===null?n=i.TEXTURE0+a-1:n=r);let c=o[n];c===void 0&&(c={type:void 0,texture:void 0},o[n]=c),(c.type!==e||c.texture!==t)&&(r!==n&&(i.activeTexture(n),this.currentTextureSlot=n),i.bindTexture(e,t),c.type=e,c.texture=t)}bindBufferBase(e,t,n){const{gl:i}=this,r=`${e}-${t}`;return this.currentBoundBufferBases[r]!==n?(i.bindBufferBase(e,t,n),this.currentBoundBufferBases[r]=n,!0):!1}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:n}=this,i=n[t];i!==void 0&&i.type!==void 0&&(e.bindTexture(i.type,null),i.type=void 0,i.texture=void 0)}}class SV{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=mi){const{gl:n,extensions:i}=this;let r;const o=et.getTransfer(t);if(e===un)return n.UNSIGNED_BYTE;if(e===Oh)return n.UNSIGNED_SHORT_4_4_4_4;if(e===Vh)return n.UNSIGNED_SHORT_5_5_5_1;if(e===Gh)return n.UNSIGNED_INT_5_9_9_9_REV;if(e===zh)return n.UNSIGNED_INT_10F_11F_11F_REV;if(e===_o)return n.BYTE;if(e===yo)return n.SHORT;if(e===us)return n.UNSIGNED_SHORT;if(e===On)return n.INT;if(e===Kt)return n.UNSIGNED_INT;if(e===Sn)return n.FLOAT;if(e===hn)return n.HALF_FLOAT;if(e===zp)return n.ALPHA;if(e===Ul)return n.RGB;if(e===_n)return n.RGBA;if(e===Bi)return n.DEPTH_COMPONENT;if(e===Oi)return n.DEPTH_STENCIL;if(e===Il)return n.RED;if(e===cc)return n.RED_INTEGER;if(e===hs)return n.RG;if(e===lc)return n.RG_INTEGER;if(e===uc)return n.RGBA_INTEGER;if(e===Dr||e===Ur||e===Ir||e===Fr)if(o===Ue)if(r=i.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(e===Dr)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===Ur)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===Ir)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===Fr)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=i.get("WEBGL_compressed_texture_s3tc"),r!==null){if(e===Dr)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Ur)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Ir)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Fr)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===pl||e===ml||e===gl||e===xl)if(r=i.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(e===pl)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===ml)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===gl)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===xl)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===Pa||e===La||e===Da)if(r=i.get("WEBGL_compressed_texture_etc"),r!==null){if(e===Pa||e===La)return o===Ue?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(e===Da)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(e===Ua||e===Ia||e===Fa||e===Ba||e===Oa||e===Va||e===Ga||e===za||e===ka||e===Ha||e===Wa||e===$a||e===Xa||e===qa)if(r=i.get("WEBGL_compressed_texture_astc"),r!==null){if(e===Ua)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Ia)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Fa)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Ba)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Oa)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===Va)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Ga)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===za)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===ka)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===Ha)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===Wa)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===$a)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===Xa)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===qa)return o===Ue?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(e===Ya)if(r=i.get("EXT_texture_compression_bptc"),r!==null){if(e===Ya)return o===Ue?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(e===ja||e===Ka||e===Za||e===Qa)if(r=i.get("EXT_texture_compression_rgtc"),r!==null){if(e===ja)return r.COMPRESSED_RED_RGTC1_EXT;if(e===Ka)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===Za)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===Qa)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return e===Fi?n.UNSIGNED_INT_24_8:n[e]!==void 0?n[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise((n,i)=>{function r(){const o=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(o===e.WAIT_FAILED){e.deleteSync(t),i();return}if(o===e.TIMEOUT_EXPIRED){requestAnimationFrame(r);return}e.deleteSync(t),n()}r()})}}let f_=!1,ju,Ff,p_;class TV{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},this._srcFramebuffer=null,this._dstFramebuffer=null,f_===!1&&(this._init(),f_=!0)}_init(){const e=this.gl;ju={[Ao]:e.REPEAT,[gi]:e.CLAMP_TO_EDGE,[wo]:e.MIRRORED_REPEAT},Ff={[Qt]:e.NEAREST,[Gp]:e.NEAREST_MIPMAP_NEAREST,[ar]:e.NEAREST_MIPMAP_LINEAR,[ln]:e.LINEAR,[ba]:e.LINEAR_MIPMAP_NEAREST,[xi]:e.LINEAR_MIPMAP_LINEAR},p_={[kp]:e.NEVER,[qp]:e.ALWAYS,[kh]:e.LESS,[Hh]:e.LEQUAL,[Hp]:e.EQUAL,[Xp]:e.GEQUAL,[Wp]:e.GREATER,[$p]:e.NOTEQUAL}}getGLTextureType(e){const{gl:t}=this;let n;return e.isCubeTexture===!0?n=t.TEXTURE_CUBE_MAP:e.isArrayTexture===!0||e.isDataArrayTexture===!0||e.isCompressedArrayTexture===!0?n=t.TEXTURE_2D_ARRAY:e.isData3DTexture===!0?n=t.TEXTURE_3D:n=t.TEXTURE_2D,n}getInternalFormat(e,t,n,i,r=!1){const{gl:o,extensions:a}=this;if(e!==null){if(o[e]!==void 0)return o[e];te("WebGLBackend: Attempt to use non-existing WebGL internal format '"+e+"'")}let c=t;if(t===o.RED&&(n===o.FLOAT&&(c=o.R32F),n===o.HALF_FLOAT&&(c=o.R16F),n===o.UNSIGNED_BYTE&&(c=o.R8),n===o.UNSIGNED_SHORT&&(c=o.R16),n===o.UNSIGNED_INT&&(c=o.R32UI),n===o.BYTE&&(c=o.R8I),n===o.SHORT&&(c=o.R16I),n===o.INT&&(c=o.R32I)),t===o.RED_INTEGER&&(n===o.UNSIGNED_BYTE&&(c=o.R8UI),n===o.UNSIGNED_SHORT&&(c=o.R16UI),n===o.UNSIGNED_INT&&(c=o.R32UI),n===o.BYTE&&(c=o.R8I),n===o.SHORT&&(c=o.R16I),n===o.INT&&(c=o.R32I)),t===o.RG&&(n===o.FLOAT&&(c=o.RG32F),n===o.HALF_FLOAT&&(c=o.RG16F),n===o.UNSIGNED_BYTE&&(c=o.RG8),n===o.UNSIGNED_SHORT&&(c=o.RG16),n===o.UNSIGNED_INT&&(c=o.RG32UI),n===o.BYTE&&(c=o.RG8I),n===o.SHORT&&(c=o.RG16I),n===o.INT&&(c=o.RG32I)),t===o.RG_INTEGER&&(n===o.UNSIGNED_BYTE&&(c=o.RG8UI),n===o.UNSIGNED_SHORT&&(c=o.RG16UI),n===o.UNSIGNED_INT&&(c=o.RG32UI),n===o.BYTE&&(c=o.RG8I),n===o.SHORT&&(c=o.RG16I),n===o.INT&&(c=o.RG32I)),t===o.RGB){const l=r?Ja:et.getTransfer(i);n===o.FLOAT&&(c=o.RGB32F),n===o.HALF_FLOAT&&(c=o.RGB16F),n===o.UNSIGNED_BYTE&&(c=o.RGB8),n===o.UNSIGNED_SHORT&&(c=o.RGB16),n===o.UNSIGNED_INT&&(c=o.RGB32UI),n===o.BYTE&&(c=o.RGB8I),n===o.SHORT&&(c=o.RGB16I),n===o.INT&&(c=o.RGB32I),n===o.UNSIGNED_BYTE&&(c=l===Ue?o.SRGB8:o.RGB8),n===o.UNSIGNED_SHORT_5_6_5&&(c=o.RGB565),n===o.UNSIGNED_SHORT_5_5_5_1&&(c=o.RGB5_A1),n===o.UNSIGNED_SHORT_4_4_4_4&&(c=o.RGB4),n===o.UNSIGNED_INT_5_9_9_9_REV&&(c=o.RGB9_E5),n===o.UNSIGNED_INT_10F_11F_11F_REV&&(c=o.R11F_G11F_B10F)}if(t===o.RGB_INTEGER&&(n===o.UNSIGNED_BYTE&&(c=o.RGB8UI),n===o.UNSIGNED_SHORT&&(c=o.RGB16UI),n===o.UNSIGNED_INT&&(c=o.RGB32UI),n===o.BYTE&&(c=o.RGB8I),n===o.SHORT&&(c=o.RGB16I),n===o.INT&&(c=o.RGB32I)),t===o.RGBA){const l=r?Ja:et.getTransfer(i);n===o.FLOAT&&(c=o.RGBA32F),n===o.HALF_FLOAT&&(c=o.RGBA16F),n===o.UNSIGNED_BYTE&&(c=o.RGBA8),n===o.UNSIGNED_SHORT&&(c=o.RGBA16),n===o.UNSIGNED_INT&&(c=o.RGBA32UI),n===o.BYTE&&(c=o.RGBA8I),n===o.SHORT&&(c=o.RGBA16I),n===o.INT&&(c=o.RGBA32I),n===o.UNSIGNED_BYTE&&(c=l===Ue?o.SRGB8_ALPHA8:o.RGBA8),n===o.UNSIGNED_SHORT_4_4_4_4&&(c=o.RGBA4),n===o.UNSIGNED_SHORT_5_5_5_1&&(c=o.RGB5_A1)}return t===o.RGBA_INTEGER&&(n===o.UNSIGNED_BYTE&&(c=o.RGBA8UI),n===o.UNSIGNED_SHORT&&(c=o.RGBA16UI),n===o.UNSIGNED_INT&&(c=o.RGBA32UI),n===o.BYTE&&(c=o.RGBA8I),n===o.SHORT&&(c=o.RGBA16I),n===o.INT&&(c=o.RGBA32I)),t===o.DEPTH_COMPONENT&&(n===o.UNSIGNED_SHORT&&(c=o.DEPTH_COMPONENT16),n===o.UNSIGNED_INT&&(c=o.DEPTH_COMPONENT24),n===o.FLOAT&&(c=o.DEPTH_COMPONENT32F)),t===o.DEPTH_STENCIL&&n===o.UNSIGNED_INT_24_8&&(c=o.DEPTH24_STENCIL8),(c===o.R16F||c===o.R32F||c===o.RG16F||c===o.RG32F||c===o.RGBA16F||c===o.RGBA32F)&&a.get("EXT_color_buffer_float"),c}setTextureParameters(e,t){const{gl:n,extensions:i,backend:r}=this,o=et.getPrimaries(et.workingColorSpace),a=t.colorSpace===mi?null:et.getPrimaries(t.colorSpace),c=t.colorSpace===mi||o===a?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,t.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,t.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,c),n.texParameteri(e,n.TEXTURE_WRAP_S,ju[t.wrapS]),n.texParameteri(e,n.TEXTURE_WRAP_T,ju[t.wrapT]),(e===n.TEXTURE_3D||e===n.TEXTURE_2D_ARRAY)&&(t.isArrayTexture||n.texParameteri(e,n.TEXTURE_WRAP_R,ju[t.wrapR])),n.texParameteri(e,n.TEXTURE_MAG_FILTER,Ff[t.magFilter]);const l=t.mipmaps!==void 0&&t.mipmaps.length>0,u=t.minFilter===ln&&l?xi:t.minFilter;if(n.texParameteri(e,n.TEXTURE_MIN_FILTER,Ff[u]),t.compareFunction&&(n.texParameteri(e,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(e,n.TEXTURE_COMPARE_FUNC,p_[t.compareFunction])),i.has("EXT_texture_filter_anisotropic")===!0){if(t.magFilter===Qt||t.minFilter!==ar&&t.minFilter!==xi||t.type===Sn&&i.has("OES_texture_float_linear")===!1)return;if(t.anisotropy>1){const h=i.get("EXT_texture_filter_anisotropic");n.texParameterf(e,h.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,r.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:n,defaultTextures:i}=this,r=this.getGLTextureType(e);let o=i[r];o===void 0&&(o=t.createTexture(),n.state.bindTexture(r,o),t.texParameteri(r,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(r,t.TEXTURE_MAG_FILTER,t.NEAREST),i[r]=o),n.set(e,{textureGPU:o,glTextureType:r})}createTexture(e,t){const{gl:n,backend:i}=this,{levels:r,width:o,height:a,depth:c}=t,l=i.utils.convert(e.format,e.colorSpace),u=i.utils.convert(e.type),h=this.getInternalFormat(e.internalFormat,l,u,e.colorSpace,e.isVideoTexture),d=n.createTexture(),f=this.getGLTextureType(e);i.state.bindTexture(f,d),this.setTextureParameters(f,e),e.isArrayTexture||e.isDataArrayTexture||e.isCompressedArrayTexture?n.texStorage3D(n.TEXTURE_2D_ARRAY,r,h,o,a,c):e.isData3DTexture?n.texStorage3D(n.TEXTURE_3D,r,h,o,a,c):e.isVideoTexture||n.texStorage2D(f,r,h,o,a),i.set(e,{textureGPU:d,glTextureType:f,glFormat:l,glType:u,glInternalFormat:h})}copyBufferToTexture(e,t){const{gl:n,backend:i}=this,{textureGPU:r,glTextureType:o,glFormat:a,glType:c}=i.get(t),{width:l,height:u}=t.source.data;n.bindBuffer(n.PIXEL_UNPACK_BUFFER,e),i.state.bindTexture(o,r),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!1),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),n.texSubImage2D(o,0,0,0,l,u,a,c,0),n.bindBuffer(n.PIXEL_UNPACK_BUFFER,null),i.state.unbindTexture()}updateTexture(e,t){const{gl:n}=this,{width:i,height:r}=t,{textureGPU:o,glTextureType:a,glFormat:c,glType:l,glInternalFormat:u}=this.backend.get(e);if(!(e.isRenderTargetTexture||o===void 0))if(this.backend.state.bindTexture(a,o),this.setTextureParameters(a,e),e.isCompressedTexture){const h=e.mipmaps,d=t.image;for(let f=0;f<h.length;f++){const p=h[f];e.isCompressedArrayTexture?e.format!==n.RGBA?c!==null?n.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,f,0,0,0,p.width,p.height,d.depth,c,p.data):te("WebGLBackend: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texSubImage3D(n.TEXTURE_2D_ARRAY,f,0,0,0,p.width,p.height,d.depth,c,l,p.data):c!==null?n.compressedTexSubImage2D(n.TEXTURE_2D,f,0,0,p.width,p.height,c,p.data):te("WebGLBackend: Unsupported compressed texture format")}}else if(e.isCubeTexture){const h=t.images,d=e.mipmaps;for(let f=0;f<6;f++){const p=Ku(h[f]);n.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,0,0,i,r,c,l,p);for(let x=0;x<d.length;x++){const g=d[x],m=Ku(g.images[f]);n.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f,x+1,0,0,m.width,m.height,c,l,m)}}}else if(e.isDataArrayTexture||e.isArrayTexture){const h=t.image;if(e.layerUpdates.size>0){const d=np(h.width,h.height,e.format,e.type);for(const f of e.layerUpdates){const p=h.data.subarray(f*d/h.data.BYTES_PER_ELEMENT,(f+1)*d/h.data.BYTES_PER_ELEMENT);n.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,f,h.width,h.height,1,c,l,p)}e.clearLayerUpdates()}else n.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,h.width,h.height,h.depth,c,l,h.data)}else if(e.isData3DTexture){const h=t.image;n.texSubImage3D(n.TEXTURE_3D,0,0,0,0,h.width,h.height,h.depth,c,l,h.data)}else if(e.isVideoTexture)e.update(),n.texImage2D(a,0,u,c,l,t.image);else{const h=e.mipmaps;if(h.length>0)for(let d=0,f=h.length;d<f;d++){const p=h[d],x=Ku(p);n.texSubImage2D(a,d,0,0,p.width,p.height,c,l,x)}else{const d=Ku(t.image);n.texSubImage2D(a,0,0,0,i,r,c,l,d)}}}generateMipmaps(e){const{gl:t,backend:n}=this,{textureGPU:i,glTextureType:r}=n.get(e);n.state.bindTexture(r,i),t.generateMipmap(r)}deallocateRenderBuffers(e){const{gl:t,backend:n}=this;if(e){const i=n.get(e);if(i.renderBufferStorageSetup=void 0,i.framebuffers){for(const r in i.framebuffers)t.deleteFramebuffer(i.framebuffers[r]);delete i.framebuffers}if(i.depthRenderbuffer&&(t.deleteRenderbuffer(i.depthRenderbuffer),delete i.depthRenderbuffer),i.stencilRenderbuffer&&(t.deleteRenderbuffer(i.stencilRenderbuffer),delete i.stencilRenderbuffer),i.msaaFrameBuffer&&(t.deleteFramebuffer(i.msaaFrameBuffer),delete i.msaaFrameBuffer),i.msaaRenderbuffers){for(let r=0;r<i.msaaRenderbuffers.length;r++)t.deleteRenderbuffer(i.msaaRenderbuffers[r]);delete i.msaaRenderbuffers}}}destroyTexture(e,t=!1){const{gl:n,backend:i}=this,{textureGPU:r,renderTarget:o}=i.get(e);this.deallocateRenderBuffers(o),t===!1&&n.deleteTexture(r),i.delete(e)}copyTextureToTexture(e,t,n=null,i=null,r=0,o=0){const{gl:a,backend:c}=this,{state:l}=this.backend,{textureGPU:u,glTextureType:h,glType:d,glFormat:f}=c.get(t);l.bindTexture(h,u);let p,x,g,m,b,y,v,w,S;const E=e.isCompressedTexture?e.mipmaps[o]:e.image;if(n!==null)p=n.max.x-n.min.x,x=n.max.y-n.min.y,g=n.isBox3?n.max.z-n.min.z:1,m=n.min.x,b=n.min.y,y=n.isBox3?n.min.z:0;else{const Y=Math.pow(2,-r);p=Math.floor(E.width*Y),x=Math.floor(E.height*Y),e.isDataArrayTexture||e.isArrayTexture?g=E.depth:e.isData3DTexture?g=Math.floor(E.depth*Y):g=1,m=0,b=0,y=0}i!==null?(v=i.x,w=i.y,S=i.z):(v=0,w=0,S=0),a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,t.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,t.unpackAlignment);const C=a.getParameter(a.UNPACK_ROW_LENGTH),T=a.getParameter(a.UNPACK_IMAGE_HEIGHT),M=a.getParameter(a.UNPACK_SKIP_PIXELS),I=a.getParameter(a.UNPACK_SKIP_ROWS),G=a.getParameter(a.UNPACK_SKIP_IMAGES);a.pixelStorei(a.UNPACK_ROW_LENGTH,E.width),a.pixelStorei(a.UNPACK_IMAGE_HEIGHT,E.height),a.pixelStorei(a.UNPACK_SKIP_PIXELS,m),a.pixelStorei(a.UNPACK_SKIP_ROWS,b),a.pixelStorei(a.UNPACK_SKIP_IMAGES,y);const z=e.isDataArrayTexture||e.isData3DTexture||t.isArrayTexture,$=t.isDataArrayTexture||t.isData3DTexture||t.isArrayTexture;if(e.isDepthTexture){const Y=c.get(e),q=c.get(t),he=c.get(Y.renderTarget),K=c.get(q.renderTarget),ue=he.framebuffers[Y.cacheKey],ye=K.framebuffers[q.cacheKey];l.bindFramebuffer(a.READ_FRAMEBUFFER,ue),l.bindFramebuffer(a.DRAW_FRAMEBUFFER,ye);for(let Ie=0;Ie<g;Ie++)z&&(a.framebufferTextureLayer(a.READ_FRAMEBUFFER,a.COLOR_ATTACHMENT0,Y.textureGPU,r,y+Ie),a.framebufferTextureLayer(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0,u,o,S+Ie)),a.blitFramebuffer(m,b,p,x,v,w,p,x,a.DEPTH_BUFFER_BIT,a.NEAREST);l.bindFramebuffer(a.READ_FRAMEBUFFER,null),l.bindFramebuffer(a.DRAW_FRAMEBUFFER,null)}else if(r!==0||e.isRenderTargetTexture||c.has(e)){const Y=c.get(e);this._srcFramebuffer===null&&(this._srcFramebuffer=a.createFramebuffer()),this._dstFramebuffer===null&&(this._dstFramebuffer=a.createFramebuffer()),l.bindFramebuffer(a.READ_FRAMEBUFFER,this._srcFramebuffer),l.bindFramebuffer(a.DRAW_FRAMEBUFFER,this._dstFramebuffer);for(let q=0;q<g;q++)z?a.framebufferTextureLayer(a.READ_FRAMEBUFFER,a.COLOR_ATTACHMENT0,Y.textureGPU,r,y+q):a.framebufferTexture2D(a.READ_FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,Y.textureGPU,r),$?a.framebufferTextureLayer(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0,u,o,S+q):a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,u,o),r!==0?a.blitFramebuffer(m,b,p,x,v,w,p,x,a.COLOR_BUFFER_BIT,a.NEAREST):$?a.copyTexSubImage3D(h,o,v,w,S+q,m,b,p,x):a.copyTexSubImage2D(h,o,v,w,m,b,p,x);l.bindFramebuffer(a.READ_FRAMEBUFFER,null),l.bindFramebuffer(a.DRAW_FRAMEBUFFER,null)}else $?e.isDataTexture||e.isData3DTexture?a.texSubImage3D(h,o,v,w,S,p,x,g,f,d,E.data):t.isCompressedArrayTexture?a.compressedTexSubImage3D(h,o,v,w,S,p,x,g,f,E.data):a.texSubImage3D(h,o,v,w,S,p,x,g,f,d,E):e.isDataTexture?a.texSubImage2D(a.TEXTURE_2D,o,v,w,p,x,f,d,E.data):e.isCompressedTexture?a.compressedTexSubImage2D(a.TEXTURE_2D,o,v,w,E.width,E.height,f,E.data):a.texSubImage2D(a.TEXTURE_2D,o,v,w,p,x,f,d,E);a.pixelStorei(a.UNPACK_ROW_LENGTH,C),a.pixelStorei(a.UNPACK_IMAGE_HEIGHT,T),a.pixelStorei(a.UNPACK_SKIP_PIXELS,M),a.pixelStorei(a.UNPACK_SKIP_ROWS,I),a.pixelStorei(a.UNPACK_SKIP_IMAGES,G),o===0&&t.generateMipmaps&&a.generateMipmap(h),l.unbindTexture()}copyFramebufferToTexture(e,t,n){const{gl:i}=this,{state:r}=this.backend,{textureGPU:o}=this.backend.get(e),{x:a,y:c,z:l,w:u}=n,h=e.isDepthTexture===!0||t.renderTarget&&t.renderTarget.samples>0,d=t.renderTarget?t.renderTarget.height:this.backend.getDrawingBufferSize().y;if(h){const f=a!==0||c!==0;let p,x;if(e.isDepthTexture===!0?(p=i.DEPTH_BUFFER_BIT,x=i.DEPTH_ATTACHMENT,t.stencil&&(p|=i.STENCIL_BUFFER_BIT)):(p=i.COLOR_BUFFER_BIT,x=i.COLOR_ATTACHMENT0),f){const g=this.backend.get(t.renderTarget),m=g.framebuffers[t.getCacheKey()],b=g.msaaFrameBuffer;r.bindFramebuffer(i.DRAW_FRAMEBUFFER,m),r.bindFramebuffer(i.READ_FRAMEBUFFER,b);const y=d-c-u;i.blitFramebuffer(a,y,a+l,y+u,a,y,a+l,y+u,p,i.NEAREST),r.bindFramebuffer(i.READ_FRAMEBUFFER,m),r.bindTexture(i.TEXTURE_2D,o),i.copyTexSubImage2D(i.TEXTURE_2D,0,0,0,a,y,l,u),r.unbindTexture()}else{const g=i.createFramebuffer();r.bindFramebuffer(i.DRAW_FRAMEBUFFER,g),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,x,i.TEXTURE_2D,o,0),i.blitFramebuffer(0,0,l,u,0,0,l,u,p,i.NEAREST),i.deleteFramebuffer(g)}}else r.bindTexture(i.TEXTURE_2D,o),i.copyTexSubImage2D(i.TEXTURE_2D,0,0,0,a,d-u-c,l,u),r.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t,n,i=!1){const{gl:r}=this,o=t.renderTarget,{depthTexture:a,depthBuffer:c,stencilBuffer:l,width:u,height:h}=o;if(r.bindRenderbuffer(r.RENDERBUFFER,e),c&&!l){let d=r.DEPTH_COMPONENT24;i===!0?this.extensions.get("WEBGL_multisampled_render_to_texture").renderbufferStorageMultisampleEXT(r.RENDERBUFFER,o.samples,d,u,h):n>0?(a&&a.isDepthTexture&&a.type===r.FLOAT&&(d=r.DEPTH_COMPONENT32F),r.renderbufferStorageMultisample(r.RENDERBUFFER,n,d,u,h)):r.renderbufferStorage(r.RENDERBUFFER,d,u,h),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,e)}else c&&l&&(n>0?r.renderbufferStorageMultisample(r.RENDERBUFFER,n,r.DEPTH24_STENCIL8,u,h):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,u,h),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,e));r.bindRenderbuffer(r.RENDERBUFFER,null)}async copyTextureToBuffer(e,t,n,i,r,o){const{backend:a,gl:c}=this,{textureGPU:l,glFormat:u,glType:h}=this.backend.get(e),d=c.createFramebuffer();c.bindFramebuffer(c.READ_FRAMEBUFFER,d);const f=e.isCubeTexture?c.TEXTURE_CUBE_MAP_POSITIVE_X+o:c.TEXTURE_2D;c.framebufferTexture2D(c.READ_FRAMEBUFFER,c.COLOR_ATTACHMENT0,f,l,0);const p=this._getTypedArrayType(h),x=this._getBytesPerTexel(h,u),m=i*r*x,b=c.createBuffer();c.bindBuffer(c.PIXEL_PACK_BUFFER,b),c.bufferData(c.PIXEL_PACK_BUFFER,m,c.STREAM_READ),c.readPixels(t,n,i,r,u,h,0),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),await a.utils._clientWaitAsync();const y=new p(m/p.BYTES_PER_ELEMENT);return c.bindBuffer(c.PIXEL_PACK_BUFFER,b),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,y),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),c.deleteFramebuffer(d),y}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4||e===t.UNSIGNED_SHORT_5_5_5_1||e===t.UNSIGNED_SHORT_5_6_5||e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:n}=this;let i=0;if(e===n.UNSIGNED_BYTE&&(i=1),(e===n.UNSIGNED_SHORT_4_4_4_4||e===n.UNSIGNED_SHORT_5_5_5_1||e===n.UNSIGNED_SHORT_5_6_5||e===n.UNSIGNED_SHORT||e===n.HALF_FLOAT)&&(i=2),(e===n.UNSIGNED_INT||e===n.FLOAT)&&(i=4),t===n.RGBA)return i*4;if(t===n.RGB)return i*3;if(t===n.ALPHA)return i}dispose(){const{gl:e}=this;this._srcFramebuffer!==null&&e.deleteFramebuffer(this._srcFramebuffer),this._dstFramebuffer!==null&&e.deleteFramebuffer(this._dstFramebuffer)}}function Ku(s){return s.isDataTexture?s.image.data:typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap||typeof OffscreenCanvas<"u"&&s instanceof OffscreenCanvas?s:s.data}class MV{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return t===void 0&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class EV{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(this.maxAnisotropy!==null)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(t.has("EXT_texture_filter_anisotropic")===!0){const n=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const m_={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-s3tc",EXT_texture_compression_bptc:"texture-compression-bc",EXT_disjoint_timer_query_webgl2:"timestamp-query",OVR_multiview2:"OVR_multiview2"};class AV{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:n,mode:i,object:r,type:o,info:a,index:c}=this;c!==0?n.drawElements(i,t,o,e):n.drawArrays(i,e,t),a.update(r,t,1)}renderInstances(e,t,n){const{gl:i,mode:r,type:o,index:a,object:c,info:l}=this;n!==0&&(a!==0?i.drawElementsInstanced(r,t,o,e,n):i.drawArraysInstanced(r,e,t,n),l.update(c,t,n))}renderMultiDraw(e,t,n){const{extensions:i,mode:r,object:o,info:a}=this;if(n===0)return;const c=i.get("WEBGL_multi_draw");if(c===null)for(let l=0;l<n;l++)this.render(e[l],t[l]);else{this.index!==0?c.multiDrawElementsWEBGL(r,t,0,this.type,e,0,n):c.multiDrawArraysWEBGL(r,e,0,t,0,n);let l=0;for(let u=0;u<n;u++)l+=t[u];a.update(o,l,1)}}renderMultiDrawInstances(e,t,n,i){const{extensions:r,mode:o,object:a,info:c}=this;if(n===0)return;const l=r.get("WEBGL_multi_draw");if(l===null)for(let u=0;u<n;u++)this.renderInstances(e[u],t[u],i[u]);else{this.index!==0?l.multiDrawElementsInstancedWEBGL(o,t,0,this.type,e,0,i,0,n):l.multiDrawArraysInstancedWEBGL(o,e,0,t,0,i,0,n);let u=0;for(let h=0;h<n;h++)u+=t[h]*i[h];c.update(a,u,1)}}}class lM{constructor(e=256){this.trackTimestamp=!0,this.maxQueries=e,this.currentQueryIndex=0,this.queryOffsets=new Map,this.isDisposed=!1,this.lastValue=0,this.frames=[],this.pendingResolve=!1,this.timestamps=new Map}getTimestampFrames(){return this.frames}getTimestamp(e){let t=this.timestamps.get(e);return t===void 0&&(te(`TimestampQueryPool: No timestamp available for uid ${e}.`),t=0),t}hasTimestamp(e){return this.timestamps.has(e)}allocateQueriesForContext(){}async resolveQueriesAsync(){}dispose(){}}class wV extends lM{constructor(e,t,n=2048){if(super(n),this.gl=e,this.type=t,this.ext=e.getExtension("EXT_disjoint_timer_query_webgl2")||e.getExtension("EXT_disjoint_timer_query"),!this.ext){te("EXT_disjoint_timer_query not supported; timestamps will be disabled."),this.trackTimestamp=!1;return}this.queries=[];for(let i=0;i<this.maxQueries;i++)this.queries.push(e.createQuery());this.activeQuery=null,this.queryStates=new Map}allocateQueriesForContext(e){if(!this.trackTimestamp)return null;if(this.currentQueryIndex+2>this.maxQueries)return Wt(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryStates.set(t,"inactive"),this.queryOffsets.set(e,t),t}beginQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e);if(t==null||this.activeQuery!==null)return;const n=this.queries[t];if(n)try{this.queryStates.get(t)==="inactive"&&(this.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,n),this.activeQuery=t,this.queryStates.set(t,"started"))}catch(i){i("Error in beginQuery:",i),this.activeQuery=null,this.queryStates.set(t,"inactive")}}endQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e);if(t!=null&&this.activeQuery===t)try{this.gl.endQuery(this.ext.TIME_ELAPSED_EXT),this.queryStates.set(t,"ended"),this.activeQuery=null}catch(n){n("Error in endQuery:",n),this.queryStates.set(t,"inactive"),this.activeQuery=null}}async resolveQueriesAsync(){if(!this.trackTimestamp||this.pendingResolve)return this.lastValue;this.pendingResolve=!0;try{const e=new Map;for(const[r,o]of this.queryOffsets)if(this.queryStates.get(o)==="ended"){const c=this.queries[o];e.set(r,this.resolveQuery(c))}if(e.size===0)return this.lastValue;const t={},n=[];for(const[r,o]of e){const a=r.match(/^(.*):f(\d+)$/),c=parseInt(a[2]);n.includes(c)===!1&&n.push(c),t[c]===void 0&&(t[c]=0);const l=await o;this.timestamps.set(r,l),t[c]+=l}const i=t[n[n.length-1]];return this.lastValue=i,this.frames=n,this.currentQueryIndex=0,this.queryOffsets.clear(),this.queryStates.clear(),this.activeQuery=null,i}catch(e){return e("Error resolving queries:",e),this.lastValue}finally{this.pendingResolve=!1}}async resolveQuery(e){return new Promise(t=>{if(this.isDisposed){t(this.lastValue);return}let n,i=!1;const r=()=>{n&&(clearTimeout(n),n=null)},o=c=>{i||(i=!0,r(),t(c))},a=()=>{if(this.isDisposed){o(this.lastValue);return}try{if(this.gl.getParameter(this.ext.GPU_DISJOINT_EXT)){o(this.lastValue);return}if(!this.gl.getQueryParameter(e,this.gl.QUERY_RESULT_AVAILABLE)){n=setTimeout(a,1);return}const u=this.gl.getQueryParameter(e,this.gl.QUERY_RESULT);t(Number(u)/1e6)}catch(c){c("Error checking query:",c),t(this.lastValue)}};a()})}dispose(){if(!this.isDisposed&&(this.isDisposed=!0,!!this.trackTimestamp)){for(const e of this.queries)this.gl.deleteQuery(e);this.queries=[],this.queryStates.clear(),this.queryOffsets.clear(),this.lastValue=0,this.activeQuery=null}}}class g_ extends cM{constructor(e={}){super(e),this.isWebGLBackend=!0,this.attributeUtils=null,this.extensions=null,this.capabilities=null,this.textureUtils=null,this.bufferRenderer=null,this.gl=null,this.state=null,this.utils=null,this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.disjoint=null,this.parallel=null,this._currentContext=null,this._knownBindings=new WeakSet,this._supportsInvalidateFramebuffer=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),this._xrFramebuffer=null}init(e){super.init(e);const t=this.parameters,n={antialias:e.currentSamples>0,alpha:!0,depth:e.depth,stencil:e.stencil},i=t.context!==void 0?t.context:e.domElement.getContext("webgl2",n);function r(o){o.preventDefault();const a={api:"WebGL",message:o.statusMessage||"Unknown reason",reason:null,originalEvent:o};e.onDeviceLost(a)}this._onContextLost=r,e.domElement.addEventListener("webglcontextlost",r,!1),this.gl=i,this.extensions=new MV(this),this.capabilities=new EV(this),this.attributeUtils=new bV(this),this.textureUtils=new TV(this),this.bufferRenderer=new AV(this),this.state=new vV(this),this.utils=new SV(this),this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.extensions.get("OVR_multiview2"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile")}get coordinateSystem(){return ai}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async makeXRCompatible(){this.gl.getContextAttributes().xrCompatible!==!0&&await this.gl.makeXRCompatible()}setXRTarget(e){this._xrFramebuffer=e}setXRRenderTargetTextures(e,t,n=null){const i=this.gl;if(this.set(e.texture,{textureGPU:t,glInternalFormat:i.RGBA8}),n!==null){const r=e.stencilBuffer?i.DEPTH24_STENCIL8:i.DEPTH_COMPONENT24;this.set(e.depthTexture,{textureGPU:n,glInternalFormat:r}),this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&e._autoAllocateDepthBuffer===!0&&e.multiview===!1&&te("WebGLBackend: Render-to-texture extension was disabled because an external texture was provided"),e._autoAllocateDepthBuffer=!1}}initTimestampQuery(e,t){if(!this.disjoint||!this.trackTimestamp)return;this.timestampQueryPool[e]||(this.timestampQueryPool[e]=new wV(this.gl,e,2048));const n=this.timestampQueryPool[e];n.allocateQueriesForContext(t)!==null&&n.beginQuery(t)}prepareTimestampBuffer(e,t){if(!this.disjoint||!this.trackTimestamp)return;this.timestampQueryPool[e].endQuery(t)}getContext(){return this.gl}beginRender(e){const{state:t}=this,n=this.get(e);if(e.viewport)this.updateViewport(e);else{const{width:r,height:o}=this.getDrawingBufferSize();t.viewport(0,0,r,o)}if(e.scissor){const{x:r,y:o,width:a,height:c}=e.scissorValue;t.scissor(r,e.height-c-o,a,c)}this.initTimestampQuery(Ls.RENDER,this.getTimestampUID(e)),n.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1);const i=e.occlusionQueryCount;i>0&&(n.currentOcclusionQueries=n.occlusionQueries,n.currentOcclusionQueryObjects=n.occlusionQueryObjects,n.lastOcclusionObject=null,n.occlusionQueries=new Array(i),n.occlusionQueryObjects=new Array(i),n.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:n}=this,i=this.get(e),r=i.previousContext;n.resetVertexState();const o=e.occlusionQueryCount;o>0&&(o>i.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const a=e.textures;if(a!==null)for(let c=0;c<a.length;c++){const l=a[c];l.generateMipmaps&&this.generateMipmaps(l)}if(this._currentContext=r,this._resolveRenderTarget(e),r!==null)if(this._setFramebuffer(r),r.viewport)this.updateViewport(r);else{const{width:c,height:l}=this.getDrawingBufferSize();n.viewport(0,0,c,l)}this.prepareTimestampBuffer(Ls.RENDER,this.getTimestampUID(e))}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:n,currentOcclusionQueryObjects:i}=t;if(n&&i){const r=new WeakSet,{gl:o}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const a=()=>{let c=0;for(let l=0;l<n.length;l++){const u=n[l];u!==null&&o.getQueryParameter(u,o.QUERY_RESULT_AVAILABLE)&&(o.getQueryParameter(u,o.QUERY_RESULT)===0&&r.add(i[l]),n[l]=null,o.deleteQuery(u),c++)}c<n.length?requestAnimationFrame(a):t.occluded=r};a()}}isOccluded(e,t){const n=this.get(e);return n.occluded&&n.occluded.has(t)}updateViewport(e){const{state:t}=this,{x:n,y:i,width:r,height:o}=e.viewportValue;t.viewport(n,e.height-o-i,r,o)}setScissorTest(e){this.state.setScissorTest(e)}getClearColor(){const e=super.getClearColor();return e.r*=e.a,e.g*=e.a,e.b*=e.a,e}clear(e,t,n,i=null,r=!0,o=!0){const{gl:a,renderer:c}=this;i===null&&(i={textures:null,clearColorValue:this.getClearColor()});let l=0;if(e&&(l|=a.COLOR_BUFFER_BIT),t&&(l|=a.DEPTH_BUFFER_BIT),n&&(l|=a.STENCIL_BUFFER_BIT),l!==0){let u;i.clearColorValue?u=i.clearColorValue:u=this.getClearColor();const h=c.getClearDepth(),d=c.getClearStencil();if(t&&this.state.setDepthMask(!0),i.textures===null)a.clearColor(u.r,u.g,u.b,u.a),a.clear(l);else{if(r&&this._setFramebuffer(i),e)for(let f=0;f<i.textures.length;f++)f===0?a.clearBufferfv(a.COLOR,f,[u.r,u.g,u.b,u.a]):a.clearBufferfv(a.COLOR,f,[0,0,0,1]);t&&n?a.clearBufferfi(a.DEPTH_STENCIL,0,h,d):t?a.clearBufferfv(a.DEPTH,0,[h]):n&&a.clearBufferiv(a.STENCIL,0,[d]),r&&o&&this._resolveRenderTarget(i)}}}beginCompute(e){const{state:t,gl:n}=this;t.bindFramebuffer(n.FRAMEBUFFER,null),this.initTimestampQuery(Ls.COMPUTE,this.getTimestampUID(e))}compute(e,t,n,i,r=null){const{state:o,gl:a}=this;this.discard===!1&&(a.enable(a.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:c,transformBuffers:l,attributes:u}=this.get(i),h=this._getVaoKey(u),d=this.vaoCache[h];d===void 0?this.vaoCache[h]=this._createVao(u):o.setVertexState(d),o.useProgram(c),this._bindUniforms(n);const f=this._getTransformFeedback(l);a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,f),a.beginTransformFeedback(a.POINTS),r=r!==null?r:t.count,Array.isArray(r)?(Wt("WebGLBackend.compute(): The count parameter must be a single number, not an array."),r=r[0]):r&&typeof r=="object"&&r.isIndirectStorageBufferAttribute&&(Wt("WebGLBackend.compute(): The count parameter must be a single number, not IndirectStorageBufferAttribute"),r=t.count),u[0].isStorageInstancedBufferAttribute?a.drawArraysInstanced(a.POINTS,0,1,r):a.drawArrays(a.POINTS,0,r),a.endTransformFeedback(),a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,null);for(let p=0;p<l.length;p++){const x=l[p];x.pbo&&this.has(x.pbo)&&this.textureUtils.copyBufferToTexture(x.transformBuffer,x.pbo),x.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(Ls.COMPUTE,this.getTimestampUID(e)),this._currentContext&&this._setFramebuffer(this._currentContext)}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.isArrayTexture&&e.camera.isArrayCamera}draw(e){const{object:t,pipeline:n,material:i,context:r,hardwareClippingPlanes:o}=e,{programGPU:a}=this.get(n),{gl:c,state:l}=this,u=this.get(r),h=e.getDrawParameters();if(h===null)return;this._bindUniforms(e.getBindings());const d=t.isMesh&&t.matrixWorld.determinant()<0;l.setMaterial(i,d,o),l.useProgram(a);const f=e.getAttributes(),p=this.get(f);let x=p.vaoGPU;if(x===void 0){const C=this._getVaoKey(f);x=this.vaoCache[C],x===void 0&&(x=this._createVao(f),this.vaoCache[C]=x,p.vaoGPU=x)}const g=e.getIndex(),m=g!==null?this.get(g).bufferGPU:null;l.setVertexState(x,m);const b=u.lastOcclusionObject;if(b!==t&&b!==void 0){if(b!==null&&b.occlusionTest===!0&&(c.endQuery(c.ANY_SAMPLES_PASSED),u.occlusionQueryIndex++),t.occlusionTest===!0){const C=c.createQuery();c.beginQuery(c.ANY_SAMPLES_PASSED,C),u.occlusionQueries[u.occlusionQueryIndex]=C,u.occlusionQueryObjects[u.occlusionQueryIndex]=t}u.lastOcclusionObject=t}const y=this.bufferRenderer;t.isPoints?y.mode=c.POINTS:t.isLineSegments?y.mode=c.LINES:t.isLine?y.mode=c.LINE_STRIP:t.isLineLoop?y.mode=c.LINE_LOOP:i.wireframe===!0?(l.setLineWidth(i.wireframeLinewidth*this.renderer.getPixelRatio()),y.mode=c.LINES):y.mode=c.TRIANGLES;const{vertexCount:v,instanceCount:w}=h;let{firstVertex:S}=h;if(y.object=t,g!==null){S*=g.array.BYTES_PER_ELEMENT;const C=this.get(g);y.index=g.count,y.type=C.type}else y.index=0;const E=()=>{t.isBatchedMesh?t._multiDrawInstances!==null?(Wt("WebGLBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),y.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances)):this.hasFeature("WEBGL_multi_draw")?y.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):Wt("WebGLBackend: WEBGL_multi_draw not supported."):w>1?y.renderInstances(S,v,w):y.render(S,v)};if(e.camera.isArrayCamera===!0&&e.camera.cameras.length>0&&e.camera.isMultiViewCamera===!1){const C=this.get(e.camera),T=e.camera.cameras,M=e.getBindingGroup("cameraIndex").bindings[0];if(C.indexesGPU===void 0||C.indexesGPU.length!==T.length){const q=new Uint32Array([0,0,0,0]),he=[];for(let K=0,ue=T.length;K<ue;K++){const ye=c.createBuffer();q[0]=K,c.bindBuffer(c.UNIFORM_BUFFER,ye),c.bufferData(c.UNIFORM_BUFFER,q,c.STATIC_DRAW),he.push(ye)}C.indexesGPU=he}const I=this.get(M),G=this.renderer.getPixelRatio(),z=this._currentContext.renderTarget,$=this._isRenderCameraDepthArray(this._currentContext),Y=this._currentContext.activeCubeFace;if($){const q=this.get(z.depthTexture);if(q.clearedRenderId!==this.renderer._nodes.nodeFrame.renderId){q.clearedRenderId=this.renderer._nodes.nodeFrame.renderId;const{stencilBuffer:he}=z;for(let K=0,ue=T.length;K<ue;K++)this.renderer._activeCubeFace=K,this._currentContext.activeCubeFace=K,this._setFramebuffer(this._currentContext),this.clear(!1,!0,he,this._currentContext,!1,!1);this.renderer._activeCubeFace=Y,this._currentContext.activeCubeFace=Y}}for(let q=0,he=T.length;q<he;q++){const K=T[q];if(t.layers.test(K.layers)){$&&(this.renderer._activeCubeFace=q,this._currentContext.activeCubeFace=q,this._setFramebuffer(this._currentContext));const ue=K.viewport;if(ue!==void 0){const ye=ue.x*G,Ie=ue.y*G,yt=ue.width*G,pt=ue.height*G;l.viewport(Math.floor(ye),Math.floor(e.context.height-pt-Ie),Math.floor(yt),Math.floor(pt))}l.bindBufferBase(c.UNIFORM_BUFFER,I.index,C.indexesGPU[q]),E()}this._currentContext.activeCubeFace=Y,this.renderer._activeCubeFace=Y}}else E()}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e,t=!1){this.textureUtils.destroyTexture(e,t)}async copyTextureToBuffer(e,t,n,i,r,o){return this.textureUtils.copyTextureToBuffer(e,t,n,i,r,o)}updateSampler(){return""}createNodeBuilder(e,t){return new xV(e,t)}createProgram(e){const t=this.gl,{stage:n,code:i}=e,r=n==="fragment"?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(r,i),t.compileShader(r),this.set(e,{shaderGPU:r})}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){const n=this.gl,i=e.pipeline,{fragmentProgram:r,vertexProgram:o}=i,a=n.createProgram(),c=this.get(r).shaderGPU,l=this.get(o).shaderGPU;if(n.attachShader(a,c),n.attachShader(a,l),n.linkProgram(a),this.set(i,{programGPU:a,fragmentShader:c,vertexShader:l}),t!==null&&this.parallel){const u=new Promise(h=>{const d=this.parallel,f=()=>{n.getProgramParameter(a,d.COMPLETION_STATUS_KHR)?(this._completeCompile(e,i),h()):requestAnimationFrame(f)};f()});t.push(u);return}this._completeCompile(e,i)}_handleSource(e,t){const n=e.split(`
`),i=[],r=Math.max(t-6,0),o=Math.min(t+6,n.length);for(let a=r;a<o;a++){const c=a+1;i.push(`${c===t?">":" "} ${c}: ${n[a]}`)}return i.join(`
`)}_getShaderErrors(e,t,n){const i=e.getShaderParameter(t,e.COMPILE_STATUS),o=(e.getShaderInfoLog(t)||"").trim();if(i&&o==="")return"";const a=/ERROR: 0:(\d+)/.exec(o);if(a){const c=parseInt(a[1]);return n.toUpperCase()+`

`+o+`

`+this._handleSource(e.getShaderSource(t),c)}else return o}_logProgramError(e,t,n){if(this.renderer.debug.checkShaderErrors){const i=this.gl,o=(i.getProgramInfoLog(e)||"").trim();if(i.getProgramParameter(e,i.LINK_STATUS)===!1)if(typeof this.renderer.debug.onShaderError=="function")this.renderer.debug.onShaderError(i,e,n,t);else{const a=this._getShaderErrors(i,n,"vertex"),c=this._getShaderErrors(i,t,"fragment");ge("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(e,i.VALIDATE_STATUS)+`

Program Info Log: `+o+`
`+a+`
`+c)}else o!==""&&te("WebGLProgram: Program Info Log:",o)}}_completeCompile(e,t){const{state:n,gl:i}=this,r=this.get(t),{programGPU:o,fragmentShader:a,vertexShader:c}=r;i.getProgramParameter(o,i.LINK_STATUS)===!1&&this._logProgramError(o,a,c),n.useProgram(o);const l=e.getBindings();this._setupBindings(l,o),this.set(t,{programGPU:o})}createComputePipeline(e,t){const{state:n,gl:i}=this,r={stage:"fragment",code:`#version 300 es
precision highp float;
void main() {}`};this.createProgram(r);const{computeProgram:o}=e,a=i.createProgram(),c=this.get(r).shaderGPU,l=this.get(o).shaderGPU,u=o.transforms,h=[],d=[];for(let g=0;g<u.length;g++){const m=u[g];h.push(m.varyingName),d.push(m.attributeNode)}i.attachShader(a,c),i.attachShader(a,l),i.transformFeedbackVaryings(a,h,i.SEPARATE_ATTRIBS),i.linkProgram(a),i.getProgramParameter(a,i.LINK_STATUS)===!1&&this._logProgramError(a,c,l),n.useProgram(a),this._setupBindings(t,a);const f=o.attributes,p=[],x=[];for(let g=0;g<f.length;g++){const m=f[g].node.attribute;p.push(m),this.has(m)||this.attributeUtils.createAttribute(m,i.ARRAY_BUFFER)}for(let g=0;g<d.length;g++){const m=d[g].attribute;this.has(m)||this.attributeUtils.createAttribute(m,i.ARRAY_BUFFER);const b=this.get(m);x.push(b)}this.set(e,{programGPU:a,transformBuffers:x,attributes:p})}createBindings(e,t){if(this._knownBindings.has(t)===!1){this._knownBindings.add(t);let n=0,i=0;for(const r of t){this.set(r,{textures:i,uniformBuffers:n});for(const o of r.bindings)o.isUniformBuffer&&n++,o.isSampledTexture&&i++}}this.updateBindings(e,t)}updateBindings(e){const{gl:t}=this,n=this.get(e);let i=n.uniformBuffers,r=n.textures;for(const o of e.bindings){const a=this.get(o);if(o.isUniformsGroup||o.isUniformBuffer){const c=o.buffer;let{bufferGPU:l}=this.get(c);l===void 0?(l=t.createBuffer(),t.bindBuffer(t.UNIFORM_BUFFER,l),t.bufferData(t.UNIFORM_BUFFER,c,t.DYNAMIC_DRAW),this.set(c,{bufferGPU:l})):(t.bindBuffer(t.UNIFORM_BUFFER,l),t.bufferSubData(t.UNIFORM_BUFFER,0,c)),a.index=i++,a.bufferGPU=l,this.set(o,a)}else if(o.isSampledTexture){const{textureGPU:c,glTextureType:l}=this.get(o.texture);a.index=r++,a.textureGPU=c,a.glTextureType=l,this.set(o,a)}}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const i=this.get(e).bufferGPU,r=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,i),t.bufferData(t.UNIFORM_BUFFER,r,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}hasFeature(e){const t=Object.keys(m_).filter(i=>m_[i]===e),n=this.extensions;for(let i=0;i<t.length;i++)if(n.has(t[i]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,n=null,i=null,r=0,o=0){this.textureUtils.copyTextureToTexture(e,t,n,i,r,o)}copyFramebufferToTexture(e,t,n){this.textureUtils.copyFramebufferToTexture(e,t,n)}_setFramebuffer(e){const{gl:t,state:n}=this;let i=null;if(e.textures!==null){const r=e.renderTarget,o=this.get(r),{samples:a,depthBuffer:c,stencilBuffer:l}=r,u=r.isWebGLCubeRenderTarget===!0,h=r.isRenderTarget3D===!0,d=r.depth>1,f=r.isXRRenderTarget===!0,p=f===!0&&r._hasExternalTextures===!0;let x=o.msaaFrameBuffer,g=o.depthRenderbuffer;const m=this.extensions.get("WEBGL_multisampled_render_to_texture"),b=this.extensions.get("OVR_multiview2"),y=this._useMultisampledExtension(r),v=sT(e);let w;if(u?(o.cubeFramebuffers||(o.cubeFramebuffers={}),w=o.cubeFramebuffers[v]):f&&p===!1?w=this._xrFramebuffer:(o.framebuffers||(o.framebuffers={}),w=o.framebuffers[v]),w===void 0){w=t.createFramebuffer(),n.bindFramebuffer(t.FRAMEBUFFER,w);const S=e.textures,E=[];if(u){o.cubeFramebuffers[v]=w;const{textureGPU:T}=this.get(S[0]),M=this.renderer._activeCubeFace,I=this.renderer._activeMipmapLevel;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+M,T,I)}else{o.framebuffers[v]=w;for(let T=0;T<S.length;T++){const M=S[T],I=this.get(M);I.renderTarget=e.renderTarget,I.cacheKey=v;const G=t.COLOR_ATTACHMENT0+T;if(r.multiview)b.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,G,I.textureGPU,0,a,0,2);else if(h||d){const z=this.renderer._activeCubeFace,$=this.renderer._activeMipmapLevel;t.framebufferTextureLayer(t.FRAMEBUFFER,G,I.textureGPU,$,z)}else if(y)m.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,G,t.TEXTURE_2D,I.textureGPU,0,a);else{const z=this.renderer._activeMipmapLevel;t.framebufferTexture2D(t.FRAMEBUFFER,G,t.TEXTURE_2D,I.textureGPU,z)}}}const C=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(r._autoAllocateDepthBuffer===!0){const T=t.createRenderbuffer();this.textureUtils.setupRenderBufferStorage(T,e,0,y),o.xrDepthRenderbuffer=T,E.push(l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT),t.bindRenderbuffer(t.RENDERBUFFER,T),t.framebufferRenderbuffer(t.FRAMEBUFFER,C,t.RENDERBUFFER,T)}else if(e.depthTexture!==null){E.push(l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT);const T=this.get(e.depthTexture);if(T.renderTarget=e.renderTarget,T.cacheKey=v,r.multiview)b.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,C,T.textureGPU,0,a,0,2);else if(p&&y)m.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,C,t.TEXTURE_2D,T.textureGPU,0,a);else if(e.depthTexture.isArrayTexture){const M=this.renderer._activeCubeFace;t.framebufferTextureLayer(t.FRAMEBUFFER,C,T.textureGPU,0,M)}else t.framebufferTexture2D(t.FRAMEBUFFER,C,t.TEXTURE_2D,T.textureGPU,0)}o.depthInvalidationArray=E}else{if(this._isRenderCameraDepthArray(e)){n.bindFramebuffer(t.FRAMEBUFFER,w);const E=this.renderer._activeCubeFace,C=this.get(e.depthTexture),T=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.framebufferTextureLayer(t.FRAMEBUFFER,T,C.textureGPU,0,E)}if((f||y||r.multiview)&&r._isOpaqueFramebuffer!==!0){n.bindFramebuffer(t.FRAMEBUFFER,w);const E=this.get(e.textures[0]);r.multiview?b.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,E.textureGPU,0,a,0,2):y?m.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,E.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,E.textureGPU,0);const C=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(r._autoAllocateDepthBuffer===!0){const T=o.xrDepthRenderbuffer;t.bindRenderbuffer(t.RENDERBUFFER,T),t.framebufferRenderbuffer(t.FRAMEBUFFER,C,t.RENDERBUFFER,T)}else{const T=this.get(e.depthTexture);r.multiview?b.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,C,T.textureGPU,0,a,0,2):y?m.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,C,t.TEXTURE_2D,T.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,C,t.TEXTURE_2D,T.textureGPU,0)}}}if(a>0&&y===!1&&!r.multiview){if(x===void 0){const S=[];x=t.createFramebuffer(),n.bindFramebuffer(t.FRAMEBUFFER,x);const E=[],C=e.textures;for(let T=0;T<C.length;T++){E[T]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,E[T]),S.push(t.COLOR_ATTACHMENT0+T);const M=e.textures[T],I=this.get(M);t.renderbufferStorageMultisample(t.RENDERBUFFER,a,I.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+T,t.RENDERBUFFER,E[T])}if(t.bindRenderbuffer(t.RENDERBUFFER,null),o.msaaFrameBuffer=x,o.msaaRenderbuffers=E,c&&g===void 0){g=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(g,e,a),o.depthRenderbuffer=g;const T=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;S.push(T)}o.invalidationArray=S}i=o.msaaFrameBuffer}else i=w;n.drawBuffers(e,w)}n.bindFramebuffer(t.FRAMEBUFFER,i)}_getVaoKey(e){let t="";for(let n=0;n<e.length;n++){const i=this.get(e[n]);t+=":"+i.id}return t}_createVao(e){const{gl:t}=this,n=t.createVertexArray();t.bindVertexArray(n);for(let i=0;i<e.length;i++){const r=e[i],o=this.get(r);t.bindBuffer(t.ARRAY_BUFFER,o.bufferGPU),t.enableVertexAttribArray(i);let a,c;r.isInterleavedBufferAttribute===!0?(a=r.data.stride*o.bytesPerElement,c=r.offset*o.bytesPerElement):(a=0,c=0),o.isInteger?t.vertexAttribIPointer(i,r.itemSize,o.type,a,c):t.vertexAttribPointer(i,r.itemSize,o.type,r.normalized,a,c),r.isInstancedBufferAttribute&&!r.isInterleavedBufferAttribute?t.vertexAttribDivisor(i,r.meshPerAttribute):r.isInterleavedBufferAttribute&&r.data.isInstancedInterleavedBuffer&&t.vertexAttribDivisor(i,r.data.meshPerAttribute)}return t.bindBuffer(t.ARRAY_BUFFER,null),n}_getTransformFeedback(e){let t="";for(let r=0;r<e.length;r++)t+=":"+e[r].id;let n=this.transformFeedbackCache[t];if(n!==void 0)return n;const{gl:i}=this;n=i.createTransformFeedback(),i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,n);for(let r=0;r<e.length;r++){const o=e[r];i.bindBufferBase(i.TRANSFORM_FEEDBACK_BUFFER,r,o.transformBuffer)}return i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=n,n}_setupBindings(e,t){const n=this.gl;for(const i of e)for(const r of i.bindings){const a=this.get(r).index;if(r.isUniformsGroup||r.isUniformBuffer){const c=n.getUniformBlockIndex(t,r.name);n.uniformBlockBinding(t,c,a)}else if(r.isSampledTexture){const c=n.getUniformLocation(t,r.name);n.uniform1i(c,a)}}}_bindUniforms(e){const{gl:t,state:n}=this;for(const i of e)for(const r of i.bindings){const o=this.get(r),a=o.index;r.isUniformsGroup||r.isUniformBuffer?n.bindBufferBase(t.UNIFORM_BUFFER,a,o.bufferGPU):r.isSampledTexture&&n.bindTexture(o.glTextureType,o.textureGPU,t.TEXTURE0+a)}}_resolveRenderTarget(e){const{gl:t,state:n}=this,i=e.renderTarget;if(e.textures!==null&&i){const r=this.get(i);if(i.samples>0&&this._useMultisampledExtension(i)===!1){const o=r.framebuffers[e.getCacheKey()];let a=t.COLOR_BUFFER_BIT;i.resolveDepthBuffer&&(i.depthBuffer&&(a|=t.DEPTH_BUFFER_BIT),i.stencilBuffer&&i.resolveStencilBuffer&&(a|=t.STENCIL_BUFFER_BIT));const c=r.msaaFrameBuffer,l=r.msaaRenderbuffers,u=e.textures,h=u.length>1;if(n.bindFramebuffer(t.READ_FRAMEBUFFER,c),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,o),h)for(let d=0;d<u.length;d++)t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0+d,t.RENDERBUFFER,null),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+d,t.TEXTURE_2D,null,0);for(let d=0;d<u.length;d++){if(h){const{textureGPU:f}=this.get(u[d]);t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,l[d]),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,f,0)}if(e.scissor){const{x:f,y:p,width:x,height:g}=e.scissorValue,m=e.height-g-p;t.blitFramebuffer(f,m,f+x,m+g,f,m,f+x,m+g,a,t.NEAREST)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,a,t.NEAREST)}if(h)for(let d=0;d<u.length;d++){const{textureGPU:f}=this.get(u[d]);t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0+d,t.RENDERBUFFER,l[d]),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+d,t.TEXTURE_2D,f,0)}this._supportsInvalidateFramebuffer===!0&&t.invalidateFramebuffer(t.READ_FRAMEBUFFER,r.invalidationArray)}else if(i.resolveDepthBuffer===!1&&r.framebuffers){const o=r.framebuffers[e.getCacheKey()];n.bindFramebuffer(t.DRAW_FRAMEBUFFER,o),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,r.depthInvalidationArray)}}}_useMultisampledExtension(e){return e.multiview===!0?!0:e.samples>0&&this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&e._autoAllocateDepthBuffer!==!1}dispose(){this.textureUtils!==null&&this.textureUtils.dispose();const e=this.extensions.get("WEBGL_lose_context");e&&e.loseContext(),this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}const _a={PointList:"point-list",LineList:"line-list",LineStrip:"line-strip",TriangleList:"triangle-list",TriangleStrip:"triangle-strip"},Gn={Never:"never",Less:"less",Equal:"equal",LessEqual:"less-equal",Greater:"greater",NotEqual:"not-equal",GreaterEqual:"greater-equal",Always:"always"},si={Store:"store"},Ut={Load:"load",Clear:"clear"},x_={CCW:"ccw",CW:"cw"},__={None:"none",Back:"back"},ac={Uint16:"uint16",Uint32:"uint32"},B={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10UFloat:"rg11b10ufloat",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-unorm-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},Bf={ClampToEdge:"clamp-to-edge",Repeat:"repeat",MirrorRepeat:"mirror-repeat"},fo={Linear:"linear",Nearest:"nearest"},At={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDst:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},ao={Add:"add",Subtract:"subtract",ReverseSubtract:"reverse-subtract",Min:"min",Max:"max"},y_={None:0,All:15},Mr={Keep:"keep",Zero:"zero",Replace:"replace",Invert:"invert",IncrementClamp:"increment-clamp",DecrementClamp:"decrement-clamp",IncrementWrap:"increment-wrap",DecrementWrap:"decrement-wrap"},Of={Storage:"storage",ReadOnlyStorage:"read-only-storage"},Vf={WriteOnly:"write-only",ReadOnly:"read-only",ReadWrite:"read-write"},b_={NonFiltering:"non-filtering",Comparison:"comparison"},co={Float:"float",UnfilterableFloat:"unfilterable-float",Depth:"depth",SInt:"sint",UInt:"uint"},v_={TwoD:"2d",ThreeD:"3d"},An={TwoD:"2d",TwoDArray:"2d-array",Cube:"cube",ThreeD:"3d"},RV={All:"all"},Zu={Vertex:"vertex",Instance:"instance"},Ap={CoreFeaturesAndLimits:"core-features-and-limits",DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionBCSliced3D:"texture-compression-bc-sliced-3d",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TextureCompressionASTCSliced3D:"texture-compression-astc-sliced-3d",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",Float32Blendable:"float32-blendable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups",TextureFormatsTier1:"texture-formats-tier1",TextureFormatsTier2:"texture-formats-tier2"},S_={"texture-compression-s3tc":"texture-compression-bc","texture-compression-etc1":"texture-compression-etc2"};class NV extends oM{constructor(e,t,n){super(e,t?t.value:null),this.textureNode=t,this.groupNode=n}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class CV extends nM{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let PV=0;class LV extends CV{constructor(e,t){super("StorageBuffer_"+PV++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:$n.READ_WRITE,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class DV extends qr{constructor(e){super(),this.device=e;const t=`
struct VarysStruct {
	@builtin( position ) Position: vec4<f32>,
	@location( 0 ) vTex : vec2<f32>
};

@vertex
fn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {

	var Varys : VarysStruct;

	var pos = array< vec2<f32>, 4 >(
		vec2<f32>( -1.0,  1.0 ),
		vec2<f32>(  1.0,  1.0 ),
		vec2<f32>( -1.0, -1.0 ),
		vec2<f32>(  1.0, -1.0 )
	);

	var tex = array< vec2<f32>, 4 >(
		vec2<f32>( 0.0, 0.0 ),
		vec2<f32>( 1.0, 0.0 ),
		vec2<f32>( 0.0, 1.0 ),
		vec2<f32>( 1.0, 1.0 )
	);

	Varys.vTex = tex[ vertexIndex ];
	Varys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );

	return Varys;

}
`,n=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vTex );

}
`,i=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );

}
`;this.mipmapSampler=e.createSampler({minFilter:fo.Linear}),this.flipYSampler=e.createSampler({minFilter:fo.Nearest}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:t}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:n}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:i})}getTransferPipeline(e){let t=this.transferPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:_a.TriangleStrip,stripIndexFormat:ac.Uint32},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:_a.TriangleStrip,stripIndexFormat:ac.Uint32},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,n=0){const i=t.format,{width:r,height:o}=t.size,a=this.getTransferPipeline(i),c=this.getFlipYPipeline(i),l=this.device.createTexture({size:{width:r,height:o,depthOrArrayLayers:1},format:i,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),u=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:An.TwoD,baseArrayLayer:n}),h=l.createView({baseMipLevel:0,mipLevelCount:1,dimension:An.TwoD,baseArrayLayer:0}),d=this.device.createCommandEncoder({}),f=(p,x,g)=>{const m=p.getBindGroupLayout(0),b=this.device.createBindGroup({layout:m,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:x}]}),y=d.beginRenderPass({colorAttachments:[{view:g,loadOp:Ut.Clear,storeOp:si.Store,clearValue:[0,0,0,0]}]});y.setPipeline(p),y.setBindGroup(0,b),y.draw(4,1,0,0),y.end()};f(a,u,h),f(c,h,u),this.device.queue.submit([d.finish()]),l.destroy()}generateMipmaps(e,t,n=0,i=null){const r=this.get(e);r.layers===void 0&&(r.layers=[]);const o=r.layers[n]||this._mipmapCreateBundles(e,t,n),a=i||this.device.createCommandEncoder({label:"mipmapEncoder"});this._mipmapRunBundles(a,o),i===null&&this.device.queue.submit([a.finish()]),r.layers[n]=o}_mipmapCreateBundles(e,t,n){const i=this.getTransferPipeline(t.format),r=i.getBindGroupLayout(0);let o=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:An.TwoD,baseArrayLayer:n});const a=[];for(let c=1;c<t.mipLevelCount;c++){const l=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:o}]}),u=e.createView({baseMipLevel:c,mipLevelCount:1,dimension:An.TwoD,baseArrayLayer:n}),h={colorAttachments:[{view:u,loadOp:Ut.Clear,storeOp:si.Store,clearValue:[0,0,0,0]}]},d=this.device.createRenderBundleEncoder({colorFormats:[t.format]});d.setPipeline(i),d.setBindGroup(0,l),d.draw(4,1,0,0),a.push({renderBundles:[d.finish()],passDescriptor:h}),o=u}return a}_mipmapRunBundles(e,t){const n=t.length;for(let i=0;i<n;i++){const r=t[i],o=e.beginRenderPass(r.passDescriptor);o.executeBundles(r.renderBundles),o.end()}}}const UV={[kp]:"never",[kh]:"less",[Hp]:"equal",[Hh]:"less-equal",[Wp]:"greater",[Xp]:"greater-equal",[qp]:"always",[$p]:"not-equal"},IV=[0,1,3,2,4,5];class FV{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this._samplerCache=new Map}updateSampler(e){const t=this.backend,n=e.minFilter+"-"+e.magFilter+"-"+e.wrapS+"-"+e.wrapT+"-"+(e.wrapR||"0")+"-"+e.anisotropy+"-"+(e.compareFunction||0);let i=this._samplerCache.get(n);if(i===void 0){const o={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};o.magFilter===fo.Linear&&o.minFilter===fo.Linear&&o.mipmapFilter===fo.Linear&&(o.maxAnisotropy=e.anisotropy),e.isDepthTexture&&e.compareFunction!==null&&(o.compare=UV[e.compareFunction]),i={sampler:t.device.createSampler(o),usedTimes:0},this._samplerCache.set(n,i)}const r=t.get(e);if(r.sampler!==i.sampler){if(r.sampler!==void 0){const o=this._samplerCache.get(r.samplerKey);o.usedTimes--,o.usedTimes===0&&this._samplerCache.delete(r.samplerKey)}r.samplerKey=n,r.sampler=i.sampler,i.usedTimes++}return n}createDefaultTexture(e){let t;const n=wp(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(n):t=this._getDefaultTextureGPU(n),this.backend.get(e).texture=t}createTexture(e,t={}){const n=this.backend,i=n.get(e);if(i.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");if(e.isExternalTexture){i.texture=e.sourceTexture,i.initialized=!0;return}t.needsMipmaps===void 0&&(t.needsMipmaps=!1),t.levels===void 0&&(t.levels=1),t.depth===void 0&&(t.depth=1);const{width:r,height:o,depth:a,levels:c}=t;e.isFramebufferTexture&&(t.renderTarget?t.format=this.backend.utils.getCurrentColorFormat(t.renderTarget):t.format=this.backend.utils.getPreferredCanvasFormat());const l=this._getDimension(e),u=e.internalFormat||t.format||wp(e,n.device);i.format=u;const{samples:h,primarySamples:d,isMSAA:f}=n.utils.getTextureSampleData(e);let p=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;e.isStorageTexture===!0&&(p|=GPUTextureUsage.STORAGE_BINDING),e.isCompressedTexture!==!0&&e.isCompressedArrayTexture!==!0&&u!==B.RGB9E5UFloat&&(p|=GPUTextureUsage.RENDER_ATTACHMENT);const x={label:e.name,size:{width:r,height:o,depthOrArrayLayers:a},mipLevelCount:c,sampleCount:d,dimension:l,format:u,usage:p};if(u===void 0){te("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);return}if(e.isCubeTexture&&(x.textureBindingViewDimension=An.Cube),i.texture=n.device.createTexture(x),f){const g=Object.assign({},x);g.label=g.label+"-msaa",g.sampleCount=h,g.mipLevelCount=1,i.msaaTexture=n.device.createTexture(g)}i.initialized=!0,i.textureDescriptorGPU=x}destroyTexture(e,t=!1){const n=this.backend,i=n.get(e);i.texture!==void 0&&t===!1&&i.texture.destroy(),i.msaaTexture!==void 0&&i.msaaTexture.destroy(),n.delete(e)}generateMipmaps(e,t=null){const n=this.backend.get(e);if(e.isCubeTexture)for(let i=0;i<6;i++)this._generateMipmaps(n.texture,n.textureDescriptorGPU,i,t);else{const i=e.image.depth||1;for(let r=0;r<i;r++)this._generateMipmaps(n.texture,n.textureDescriptorGPU,r,t)}}getColorBuffer(){const e=this.backend,t=e.renderer.getCanvasTarget(),{width:n,height:i}=e.getDrawingBufferSize(),r=e.renderer.currentSamples,o=t.colorTexture,a=e.get(o);if(o.width===n&&o.height===i&&o.samples===r)return a.texture;let c=a.texture;return c&&c.destroy(),c=e.device.createTexture({label:"colorBuffer",size:{width:n,height:i,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.currentSamples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),o.source.width=n,o.source.height=i,o.samples=r,a.texture=c,c}getDepthBuffer(e=!0,t=!1){const n=this.backend,i=n.renderer.getCanvasTarget(),{width:r,height:o}=n.getDrawingBufferSize(),a=n.renderer.currentSamples,c=i.depthTexture;if(c.width===r&&c.height===o&&c.samples===a&&c.depth===e&&c.stencil===t)return n.get(c).texture;const l=n.get(c).texture;let u,h;if(t?(u=Oi,h=Fi):e&&(u=Bi,h=Kt),l!==void 0){if(c.image.width===r&&c.image.height===o&&c.format===u&&c.type===h&&c.samples===a)return l;this.destroyTexture(c)}return c.name="depthBuffer",c.format=u,c.type=h,c.image.width=r,c.image.height=o,c.samples=a,this.createTexture(c,{width:r,height:o}),n.get(c).texture}updateTexture(e,t){const n=this.backend.get(e),i=e.mipmaps,{textureDescriptorGPU:r}=n;if(!(e.isRenderTargetTexture||r===void 0)){if(e.isDataTexture)if(i.length>0)for(let o=0,a=i.length;o<a;o++){const c=i[o];this._copyBufferToTexture(c,n.texture,r,0,e.flipY,0,o)}else this._copyBufferToTexture(t.image,n.texture,r,0,e.flipY);else if(e.isArrayTexture||e.isDataArrayTexture||e.isData3DTexture)for(let o=0;o<t.image.depth;o++)this._copyBufferToTexture(t.image,n.texture,r,o,e.flipY,o);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,n.texture,r);else if(e.isCubeTexture)this._copyCubeMapToTexture(e,n.texture,r);else if(i.length>0)for(let o=0,a=i.length;o<a;o++){const c=i[o];this._copyImageToTexture(c,n.texture,r,0,e.flipY,e.premultiplyAlpha,o)}else this._copyImageToTexture(t.image,n.texture,r,0,e.flipY,e.premultiplyAlpha);n.version=e.version}}async copyTextureToBuffer(e,t,n,i,r,o){const a=this.backend.device,c=this.backend.get(e),l=c.texture,u=c.textureDescriptorGPU.format,h=this._getBytesPerTexel(u);let d=i*h;d=Math.ceil(d/256)*256;const f=a.createBuffer({size:(r-1)*d+i*h,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),p=a.createCommandEncoder();p.copyTextureToBuffer({texture:l,origin:{x:t,y:n,z:o}},{buffer:f,bytesPerRow:d},{width:i,height:r});const x=this._getTypedArrayType(u);a.queue.submit([p.finish()]),await f.mapAsync(GPUMapMode.READ);const g=f.getMappedRange();return new x(g)}dispose(){this._samplerCache.clear()}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const n=new Rn;n.minFilter=Qt,n.magFilter=Qt,this.createTexture(n,{width:1,height:1,format:e}),this.defaultTexture[e]=t=n}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const n=new Bl;n.minFilter=Qt,n.magFilter=Qt,this.createTexture(n,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=n}return this.backend.get(t).texture}_copyCubeMapToTexture(e,t,n){const i=e.images,r=e.mipmaps;for(let o=0;o<6;o++){const a=i[o],c=e.flipY===!0?IV[o]:o;a.isDataTexture?this._copyBufferToTexture(a.image,t,n,c,e.flipY):this._copyImageToTexture(a,t,n,c,e.flipY,e.premultiplyAlpha);for(let l=0;l<r.length;l++){const h=r[l].images[o];h.isDataTexture?this._copyBufferToTexture(h.image,t,n,c,e.flipY,0,l+1):this._copyImageToTexture(h,t,n,c,e.flipY,e.premultiplyAlpha,l+1)}}}_copyImageToTexture(e,t,n,i,r,o,a=0){const c=this.backend.device,l=a>0?e.width:n.size.width,u=a>0?e.height:n.size.height;c.queue.copyExternalImageToTexture({source:e,flipY:r},{texture:t,mipLevel:a,origin:{x:0,y:0,z:i},premultipliedAlpha:o},{width:l,height:u,depthOrArrayLayers:1})}_getPassUtils(){let e=this._passUtils;return e===null&&(this._passUtils=e=new DV(this.backend.device)),e}_generateMipmaps(e,t,n=0,i=null){this._getPassUtils().generateMipmaps(e,t,n,i)}_flipY(e,t,n=0){this._getPassUtils().flipY(e,t,n)}_copyBufferToTexture(e,t,n,i,r,o=0,a=0){const c=this.backend.device,l=e.data,u=this._getBytesPerTexel(n.format),h=e.width*u;c.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:i}},l,{offset:e.width*e.height*u*o,bytesPerRow:h},{width:e.width,height:e.height,depthOrArrayLayers:1}),r===!0&&this._flipY(t,n,i)}_copyCompressedBufferToTexture(e,t,n){const i=this.backend.device,r=this._getBlockData(n.format),o=n.size.depthOrArrayLayers>1;for(let a=0;a<e.length;a++){const c=e[a],l=c.width,u=c.height,h=o?n.size.depthOrArrayLayers:1,d=Math.ceil(l/r.width)*r.byteLength,f=d*Math.ceil(u/r.height);for(let p=0;p<h;p++)i.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:p}},c.data,{offset:p*f,bytesPerRow:d,rowsPerImage:Math.ceil(u/r.height)},{width:Math.ceil(l/r.width)*r.width,height:Math.ceil(u/r.height)*r.height,depthOrArrayLayers:1})}}_getBlockData(e){if(e===B.BC1RGBAUnorm||e===B.BC1RGBAUnormSRGB)return{byteLength:8,width:4,height:4};if(e===B.BC2RGBAUnorm||e===B.BC2RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===B.BC3RGBAUnorm||e===B.BC3RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===B.BC4RUnorm||e===B.BC4RSnorm)return{byteLength:8,width:4,height:4};if(e===B.BC5RGUnorm||e===B.BC5RGSnorm)return{byteLength:16,width:4,height:4};if(e===B.BC6HRGBUFloat||e===B.BC6HRGBFloat)return{byteLength:16,width:4,height:4};if(e===B.BC7RGBAUnorm||e===B.BC7RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===B.ETC2RGB8Unorm||e===B.ETC2RGB8UnormSRGB)return{byteLength:8,width:4,height:4};if(e===B.ETC2RGB8A1Unorm||e===B.ETC2RGB8A1UnormSRGB)return{byteLength:8,width:4,height:4};if(e===B.ETC2RGBA8Unorm||e===B.ETC2RGBA8UnormSRGB)return{byteLength:16,width:4,height:4};if(e===B.EACR11Unorm)return{byteLength:8,width:4,height:4};if(e===B.EACR11Snorm)return{byteLength:8,width:4,height:4};if(e===B.EACRG11Unorm)return{byteLength:16,width:4,height:4};if(e===B.EACRG11Snorm)return{byteLength:16,width:4,height:4};if(e===B.ASTC4x4Unorm||e===B.ASTC4x4UnormSRGB)return{byteLength:16,width:4,height:4};if(e===B.ASTC5x4Unorm||e===B.ASTC5x4UnormSRGB)return{byteLength:16,width:5,height:4};if(e===B.ASTC5x5Unorm||e===B.ASTC5x5UnormSRGB)return{byteLength:16,width:5,height:5};if(e===B.ASTC6x5Unorm||e===B.ASTC6x5UnormSRGB)return{byteLength:16,width:6,height:5};if(e===B.ASTC6x6Unorm||e===B.ASTC6x6UnormSRGB)return{byteLength:16,width:6,height:6};if(e===B.ASTC8x5Unorm||e===B.ASTC8x5UnormSRGB)return{byteLength:16,width:8,height:5};if(e===B.ASTC8x6Unorm||e===B.ASTC8x6UnormSRGB)return{byteLength:16,width:8,height:6};if(e===B.ASTC8x8Unorm||e===B.ASTC8x8UnormSRGB)return{byteLength:16,width:8,height:8};if(e===B.ASTC10x5Unorm||e===B.ASTC10x5UnormSRGB)return{byteLength:16,width:10,height:5};if(e===B.ASTC10x6Unorm||e===B.ASTC10x6UnormSRGB)return{byteLength:16,width:10,height:6};if(e===B.ASTC10x8Unorm||e===B.ASTC10x8UnormSRGB)return{byteLength:16,width:10,height:8};if(e===B.ASTC10x10Unorm||e===B.ASTC10x10UnormSRGB)return{byteLength:16,width:10,height:10};if(e===B.ASTC12x10Unorm||e===B.ASTC12x10UnormSRGB)return{byteLength:16,width:12,height:10};if(e===B.ASTC12x12Unorm||e===B.ASTC12x12UnormSRGB)return{byteLength:16,width:12,height:12}}_convertAddressMode(e){let t=Bf.ClampToEdge;return e===Ao?t=Bf.Repeat:e===wo&&(t=Bf.MirrorRepeat),t}_convertFilterMode(e){let t=fo.Linear;return(e===Qt||e===Gp||e===ar)&&(t=fo.Nearest),t}_getBytesPerTexel(e){if(e===B.R8Unorm||e===B.R8Snorm||e===B.R8Uint||e===B.R8Sint)return 1;if(e===B.R16Uint||e===B.R16Sint||e===B.R16Float||e===B.RG8Unorm||e===B.RG8Snorm||e===B.RG8Uint||e===B.RG8Sint)return 2;if(e===B.R32Uint||e===B.R32Sint||e===B.R32Float||e===B.RG16Uint||e===B.RG16Sint||e===B.RG16Float||e===B.RGBA8Unorm||e===B.RGBA8UnormSRGB||e===B.RGBA8Snorm||e===B.RGBA8Uint||e===B.RGBA8Sint||e===B.BGRA8Unorm||e===B.BGRA8UnormSRGB||e===B.RGB9E5UFloat||e===B.RGB10A2Unorm||e===B.RG11B10UFloat||e===B.Depth32Float||e===B.Depth24Plus||e===B.Depth24PlusStencil8||e===B.Depth32FloatStencil8)return 4;if(e===B.RG32Uint||e===B.RG32Sint||e===B.RG32Float||e===B.RGBA16Uint||e===B.RGBA16Sint||e===B.RGBA16Float)return 8;if(e===B.RGBA32Uint||e===B.RGBA32Sint||e===B.RGBA32Float)return 16}_getTypedArrayType(e){if(e===B.R8Uint)return Uint8Array;if(e===B.R8Sint)return Int8Array;if(e===B.R8Unorm)return Uint8Array;if(e===B.R8Snorm)return Int8Array;if(e===B.RG8Uint)return Uint8Array;if(e===B.RG8Sint)return Int8Array;if(e===B.RG8Unorm)return Uint8Array;if(e===B.RG8Snorm)return Int8Array;if(e===B.RGBA8Uint)return Uint8Array;if(e===B.RGBA8Sint)return Int8Array;if(e===B.RGBA8Unorm||e===B.RGBA8UnormSRGB)return Uint8Array;if(e===B.RGBA8Snorm)return Int8Array;if(e===B.R16Uint)return Uint16Array;if(e===B.R16Sint)return Int16Array;if(e===B.RG16Uint)return Uint16Array;if(e===B.RG16Sint)return Int16Array;if(e===B.RGBA16Uint)return Uint16Array;if(e===B.RGBA16Sint)return Int16Array;if(e===B.R16Float||e===B.RG16Float||e===B.RGBA16Float)return Uint16Array;if(e===B.R32Uint)return Uint32Array;if(e===B.R32Sint)return Int32Array;if(e===B.R32Float)return Float32Array;if(e===B.RG32Uint)return Uint32Array;if(e===B.RG32Sint)return Int32Array;if(e===B.RG32Float)return Float32Array;if(e===B.RGBA32Uint)return Uint32Array;if(e===B.RGBA32Sint)return Int32Array;if(e===B.RGBA32Float)return Float32Array;if(e===B.BGRA8Unorm||e===B.BGRA8UnormSRGB)return Uint8Array;if(e===B.RGB10A2Unorm||e===B.RGB9E5UFloat||e===B.RG11B10UFloat)return Uint32Array;if(e===B.Depth32Float)return Float32Array;if(e===B.Depth24Plus||e===B.Depth24PlusStencil8)return Uint32Array;if(e===B.Depth32FloatStencil8)return Float32Array}_getDimension(e){let t;return e.is3DTexture||e.isData3DTexture?t=v_.ThreeD:t=v_.TwoD,t}}function wp(s,e=null){const t=s.format,n=s.type,i=s.colorSpace,r=et.getTransfer(i);let o;if(s.isCompressedTexture===!0||s.isCompressedArrayTexture===!0)switch(t){case Dr:case Ur:o=r===Ue?B.BC1RGBAUnormSRGB:B.BC1RGBAUnorm;break;case Ir:o=r===Ue?B.BC2RGBAUnormSRGB:B.BC2RGBAUnorm;break;case Fr:o=r===Ue?B.BC3RGBAUnormSRGB:B.BC3RGBAUnorm;break;case ja:o=B.BC4RUnorm;break;case Ka:o=B.BC4RSnorm;break;case Za:o=B.BC5RGUnorm;break;case Qa:o=B.BC5RGSnorm;break;case Ya:o=r===Ue?B.BC7RGBAUnormSRGB:B.BC7RGBAUnorm;break;case La:case Pa:o=r===Ue?B.ETC2RGB8UnormSRGB:B.ETC2RGB8Unorm;break;case Da:o=r===Ue?B.ETC2RGBA8UnormSRGB:B.ETC2RGBA8Unorm;break;case Ua:o=r===Ue?B.ASTC4x4UnormSRGB:B.ASTC4x4Unorm;break;case Ia:o=r===Ue?B.ASTC5x4UnormSRGB:B.ASTC5x4Unorm;break;case Fa:o=r===Ue?B.ASTC5x5UnormSRGB:B.ASTC5x5Unorm;break;case Ba:o=r===Ue?B.ASTC6x5UnormSRGB:B.ASTC6x5Unorm;break;case Oa:o=r===Ue?B.ASTC6x6UnormSRGB:B.ASTC6x6Unorm;break;case Va:o=r===Ue?B.ASTC8x5UnormSRGB:B.ASTC8x5Unorm;break;case Ga:o=r===Ue?B.ASTC8x6UnormSRGB:B.ASTC8x6Unorm;break;case za:o=r===Ue?B.ASTC8x8UnormSRGB:B.ASTC8x8Unorm;break;case ka:o=r===Ue?B.ASTC10x5UnormSRGB:B.ASTC10x5Unorm;break;case Ha:o=r===Ue?B.ASTC10x6UnormSRGB:B.ASTC10x6Unorm;break;case Wa:o=r===Ue?B.ASTC10x8UnormSRGB:B.ASTC10x8Unorm;break;case $a:o=r===Ue?B.ASTC10x10UnormSRGB:B.ASTC10x10Unorm;break;case Xa:o=r===Ue?B.ASTC12x10UnormSRGB:B.ASTC12x10Unorm;break;case qa:o=r===Ue?B.ASTC12x12UnormSRGB:B.ASTC12x12Unorm;break;case _n:o=r===Ue?B.RGBA8UnormSRGB:B.RGBA8Unorm;break;default:ge("WebGPURenderer: Unsupported texture format.",t)}else switch(t){case _n:switch(n){case _o:o=B.RGBA8Snorm;break;case yo:o=B.RGBA16Sint;break;case us:o=B.RGBA16Uint;break;case Kt:o=B.RGBA32Uint;break;case On:o=B.RGBA32Sint;break;case un:o=r===Ue?B.RGBA8UnormSRGB:B.RGBA8Unorm;break;case hn:o=B.RGBA16Float;break;case Sn:o=B.RGBA32Float;break;default:ge("WebGPURenderer: Unsupported texture type with RGBAFormat.",n)}break;case Ul:switch(n){case Gh:o=B.RGB9E5UFloat;break;case zh:o=B.RG11B10UFloat;break;default:ge("WebGPURenderer: Unsupported texture type with RGBFormat.",n)}break;case Il:switch(n){case _o:o=B.R8Snorm;break;case yo:o=B.R16Sint;break;case us:o=B.R16Uint;break;case Kt:o=B.R32Uint;break;case On:o=B.R32Sint;break;case un:o=B.R8Unorm;break;case hn:o=B.R16Float;break;case Sn:o=B.R32Float;break;default:ge("WebGPURenderer: Unsupported texture type with RedFormat.",n)}break;case hs:switch(n){case _o:o=B.RG8Snorm;break;case yo:o=B.RG16Sint;break;case us:o=B.RG16Uint;break;case Kt:o=B.RG32Uint;break;case On:o=B.RG32Sint;break;case un:o=B.RG8Unorm;break;case hn:o=B.RG16Float;break;case Sn:o=B.RG32Float;break;default:ge("WebGPURenderer: Unsupported texture type with RGFormat.",n)}break;case Bi:switch(n){case us:o=B.Depth16Unorm;break;case Kt:o=B.Depth24Plus;break;case Sn:o=B.Depth32Float;break;default:ge("WebGPURenderer: Unsupported texture type with DepthFormat.",n)}break;case Oi:switch(n){case Fi:o=B.Depth24PlusStencil8;break;case Sn:e&&e.features.has(Ap.Depth32FloatStencil8)===!1&&ge('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),o=B.Depth32FloatStencil8;break;default:ge("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",n)}break;case cc:switch(n){case On:o=B.R32Sint;break;case Kt:o=B.R32Uint;break;default:ge("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",n)}break;case lc:switch(n){case On:o=B.RG32Sint;break;case Kt:o=B.RG32Uint;break;default:ge("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",n)}break;case uc:switch(n){case On:o=B.RGBA32Sint;break;case Kt:o=B.RGBA32Uint;break;default:ge("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",n)}break;default:ge("WebGPURenderer: Unsupported texture format.",t)}return o}const BV=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,OV=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/ig,T_={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_depth_2d_array:"depthTexture",texture_depth_multisampled_2d:"depthTexture",texture_depth_cube:"depthTexture",texture_depth_cube_array:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"},VV=s=>{s=s.trim();const e=s.match(BV);if(e!==null&&e.length===4){const t=e[2],n=[];let i=null;for(;(i=OV.exec(t))!==null;)n.push({name:i[1],type:i[2]});const r=[];for(let u=0;u<n.length;u++){const{name:h,type:d}=n[u];let f=d;f.startsWith("ptr")?f="pointer":(f.startsWith("texture")&&(f=d.split("<")[0]),f=T_[f]),r.push(new Og(f,h))}const o=s.substring(e[0].length),a=e[3]||"void",c=e[1]!==void 0?e[1]:"";return{type:T_[a]||a,inputs:r,name:c,inputsCode:t,blockCode:o,outputType:a}}else throw new Error("FunctionNode: Function is not a WGSL code.")};class GV extends Gg{constructor(e){const{type:t,inputs:n,name:i,inputsCode:r,blockCode:o,outputType:a}=VV(e);super(t,n,i),this.inputsCode=r,this.blockCode=o,this.outputType=a}getCode(e=this.name){const t=this.outputType!=="void"?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class zV extends JT{parseFunction(e){return new GV(e)}}const ha=typeof self<"u"?self.GPUShaderStage:{VERTEX:1,FRAGMENT:2,COMPUTE:4},kV={[$n.READ_ONLY]:"read",[$n.WRITE_ONLY]:"write",[$n.READ_WRITE]:"read_write"},M_={[Ao]:"repeat",[gi]:"clamp",[wo]:"mirror"},Qu={vertex:ha?ha.VERTEX:1,fragment:ha?ha.FRAGMENT:2,compute:ha?ha.COMPUTE:4},E_={instance:!0,swizzleAssign:!1,storageBuffer:!0},HV={"^^":"tsl_xor"},WV={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},A_={},kc={tsl_xor:new Fn("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new Fn("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new Fn("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new Fn("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new Fn("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new Fn("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new Fn("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new Fn("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new Fn("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new Fn("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new Fn("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new Fn("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),biquadraticTexture:new Fn(`
fn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {

	let res = vec2f( iRes );

	let uvScaled = coord * res;
	let uvWrapping = ( ( uvScaled % res ) + res ) % res;

	// https://www.shadertoy.com/view/WtyXRy

	let uv = uvWrapping - 0.5;
	let iuv = floor( uv );
	let f = fract( uv );

	let rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );
	let rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );
	let rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );
	let rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );

	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );

}
`)},$V={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};let uM="";(typeof navigator<"u"&&/Firefox|Deno/g.test(navigator.userAgent))!==!0&&(uM+=`diagnostic( off, derivative_uniformity );
`);class XV extends QT{constructor(e,t){super(e,t,new zV),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}_generateTextureSample(e,t,n,i,r,o=this.shaderStage){return o==="fragment"?i?r?`textureSample( ${t}, ${t}_sampler, ${n}, ${i}, ${r} )`:`textureSample( ${t}, ${t}_sampler, ${n}, ${i} )`:r?`textureSample( ${t}, ${t}_sampler, ${n}, ${r} )`:`textureSample( ${t}, ${t}_sampler, ${n} )`:this.generateTextureSampleLevel(e,t,n,"0",i)}generateTextureSampleLevel(e,t,n,i,r,o){return this.isUnfilterable(e)===!1?o?`textureSampleLevel( ${t}, ${t}_sampler, ${n}, ${i}, ${o} )`:`textureSampleLevel( ${t}, ${t}_sampler, ${n}, ${i} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,n,o,i):this.generateTextureLod(e,t,n,r,o,i)}generateWrapFunction(e){const t=`tsl_coord_${M_[e.wrapS]}S_${M_[e.wrapT]}_${e.isData3DTexture?"3d":"2d"}T`;let n=A_[t];if(n===void 0){const i=[],r=e.isData3DTexture?"vec3f":"vec2f";let o=`fn ${t}( coord : ${r} ) -> ${r} {

	return ${r}(
`;const a=(c,l)=>{c===Ao?(i.push(kc.repeatWrapping_float),o+=`		tsl_repeatWrapping_float( coord.${l} )`):c===gi?(i.push(kc.clampWrapping_float),o+=`		tsl_clampWrapping_float( coord.${l} )`):c===wo?(i.push(kc.mirrorWrapping_float),o+=`		tsl_mirrorWrapping_float( coord.${l} )`):(o+=`		coord.${l}`,te(`WebGPURenderer: Unsupported texture wrap type "${c}" for vertex shader.`))};a(e.wrapS,"x"),o+=`,
`,a(e.wrapT,"y"),e.isData3DTexture&&(o+=`,
`,a(e.wrapR,"z")),o+=`
	);

}
`,A_[t]=n=new Fn(o,i)}return n.build(this),t}generateArrayDeclaration(e,t){return`array< ${this.getType(e)}, ${t} >`}generateTextureDimension(e,t,n){const i=this.getDataFromNode(e,this.shaderStage,this.globalCache);i.dimensionsSnippet===void 0&&(i.dimensionsSnippet={});let r=i.dimensionsSnippet[n];if(i.dimensionsSnippet[n]===void 0){let o,a;const{primarySamples:c}=this.renderer.backend.utils.getTextureSampleData(e),l=c>1;e.isData3DTexture?a="vec3<u32>":a="vec2<u32>",l||e.isStorageTexture?o=t:o=`${t}${n?`, u32( ${n} )`:""}`,r=new hh(new dh(`textureDimensions( ${o} )`,a)),i.dimensionsSnippet[n]=r,(e.isArrayTexture||e.isDataArrayTexture||e.isData3DTexture)&&(i.arrayLayerCount=new hh(new dh(`textureNumLayers(${t})`,"u32"))),e.isTextureCube&&(i.cubeFaceCount=new hh(new dh("6u","u32")))}return r.build(this)}generateFilteredTexture(e,t,n,i,r="0u"){this._include("biquadraticTexture");const o=this.generateWrapFunction(e),a=this.generateTextureDimension(e,t,r);return i&&(n=`${n} + vec2<f32>(${i}) / ${a}`),`tsl_biquadraticTexture( ${t}, ${o}( ${n} ), ${a}, u32( ${r} ) )`}generateTextureLod(e,t,n,i,r,o="0u"){const a=this.generateWrapFunction(e),c=this.generateTextureDimension(e,t,o),l=e.isData3DTexture?"vec3":"vec2";r&&(n=`${n} + ${l}<f32>(${r}) / ${l}<f32>( ${c} )`);const u=`${l}<u32>( ${a}( ${n} ) * ${l}<f32>( ${c} ) )`;return this.generateTextureLoad(e,t,u,o,i,null)}generateTextureLoad(e,t,n,i,r,o){i===null&&(i="0u"),o&&(n=`${n} + ${o}`);let a;return r?a=`textureLoad( ${t}, ${n}, ${r}, u32( ${i} ) )`:(a=`textureLoad( ${t}, ${n}, u32( ${i} ) )`,this.renderer.backend.compatibilityMode&&e.isDepthTexture&&(a+=".x")),a}generateTextureStore(e,t,n,i,r){let o;return i?o=`textureStore( ${t}, ${n}, ${i}, ${r} )`:o=`textureStore( ${t}, ${n}, ${r} )`,o}isSampleCompare(e){return e.isDepthTexture===!0&&e.compareFunction!==null}isUnfilterable(e){return this.getComponentTypeFromTexture(e)!=="float"||!this.isAvailable("float32Filterable")&&e.isDataTexture===!0&&e.type===Sn||this.isSampleCompare(e)===!1&&e.minFilter===Qt&&e.magFilter===Qt||this.renderer.backend.utils.getTextureSampleData(e).primarySamples>1}generateTexture(e,t,n,i,r,o=this.shaderStage){let a=null;return this.isUnfilterable(e)?a=this.generateTextureLod(e,t,n,i,r,"0",o):a=this._generateTextureSample(e,t,n,i,r,o),a}generateTextureGrad(e,t,n,i,r,o,a=this.shaderStage){if(a==="fragment")return o?`textureSampleGrad( ${t}, ${t}_sampler, ${n},  ${i[0]}, ${i[1]}, ${o} )`:`textureSampleGrad( ${t}, ${t}_sampler, ${n},  ${i[0]}, ${i[1]} )`;ge(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${a} shader.`)}generateTextureCompare(e,t,n,i,r,o,a=this.shaderStage){if(a==="fragment")return e.isDepthTexture===!0&&e.isArrayTexture===!0?o?`textureSampleCompare( ${t}, ${t}_sampler, ${n}, ${r}, ${i}, ${o} )`:`textureSampleCompare( ${t}, ${t}_sampler, ${n}, ${r}, ${i} )`:o?`textureSampleCompare( ${t}, ${t}_sampler, ${n}, ${i}, ${o} )`:`textureSampleCompare( ${t}, ${t}_sampler, ${n}, ${i} )`;ge(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${a} shader.`)}generateTextureLevel(e,t,n,i,r,o){return this.isUnfilterable(e)===!1?o?`textureSampleLevel( ${t}, ${t}_sampler, ${n}, ${i}, ${o} )`:`textureSampleLevel( ${t}, ${t}_sampler, ${n}, ${i} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,n,o,i):this.generateTextureLod(e,t,n,r,o,i)}generateTextureBias(e,t,n,i,r,o,a=this.shaderStage){if(a==="fragment")return o?`textureSampleBias( ${t}, ${t}_sampler, ${n}, ${i}, ${o} )`:`textureSampleBias( ${t}, ${t}_sampler, ${n}, ${i} )`;ge(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${a} shader.`)}getPropertyName(e,t=this.shaderStage){if(e.isNodeVarying===!0&&e.needsInterpolation===!0){if(t==="vertex")return`varyings.${e.name}`}else if(e.isNodeUniform===!0){const n=e.name,i=e.type;return i==="texture"||i==="cubeTexture"||i==="storageTexture"||i==="texture3D"?n:i==="buffer"||i==="storageBuffer"||i==="indirectStorageBuffer"?this.isCustomStruct(e)?n:n+".value":e.groupNode.name+"."+n}return super.getPropertyName(e)}getOutputStructName(){return"output"}getFunctionOperator(e){const t=HV[e];return t!==void 0?(this._include(t),t):null}getNodeAccess(e,t){return t!=="compute"?e.isAtomic===!0?(te("WebGPURenderer: Atomic operations are only supported in compute shaders."),$n.READ_WRITE):$n.READ_ONLY:e.access}getStorageAccess(e,t){return kV[this.getNodeAccess(e,t)]}getUniformFromNode(e,t,n,i=null){const r=super.getUniformFromNode(e,t,n,i),o=this.getDataFromNode(e,n,this.globalCache);if(o.uniformGPU===void 0){let a;const c=e.groupNode,l=c.name,u=this.getBindGroupArray(l,n);if(t==="texture"||t==="cubeTexture"||t==="storageTexture"||t==="texture3D"){let h=null;const d=this.getNodeAccess(e,n);if(t==="texture"||t==="storageTexture"?e.value.is3DTexture===!0?h=new Ep(r.name,r.node,c,d):h=new Md(r.name,r.node,c,d):t==="cubeTexture"?h=new aM(r.name,r.node,c,d):t==="texture3D"&&(h=new Ep(r.name,r.node,c,d)),h.store=e.isStorageTextureNode===!0,h.mipLevel=h.store?e.mipLevel:0,h.setVisibility(Qu[n]),this.isUnfilterable(e.value)===!1&&h.store===!1){const f=new NV(`${r.name}_sampler`,r.node,c);f.setVisibility(Qu[n]),u.push(f,h),a=[f,h]}else u.push(h),a=[h]}else if(t==="buffer"||t==="storageBuffer"||t==="indirectStorageBuffer"){const h=t==="buffer"?sM:LV,d=new h(e,c);d.setVisibility(Qu[n]),u.push(d),a=d,r.name=i||"NodeBuffer_"+r.id}else{const h=this.uniformGroups[n]||(this.uniformGroups[n]={});let d=h[l];d===void 0&&(d=new rM(l,c),d.setVisibility(Qu[n]),h[l]=d,u.push(d)),a=this.getNodeUniform(r,t),d.addUniform(a)}o.uniformGPU=a}return r}getBuiltin(e,t,n,i=this.shaderStage){const r=this.builtins[i]||(this.builtins[i]=new Map);return r.has(e)===!1&&r.set(e,{name:e,property:t,type:n}),t}hasBuiltin(e,t=this.shaderStage){return this.builtins[t]!==void 0&&this.builtins[t].has(e)}getVertexIndex(){return this.shaderStage==="vertex"?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,n=this.flowShaderNode(e),i=[];for(const o of t.inputs)i.push(o.name+" : "+this.getType(o.type));let r=`fn ${t.name}( ${i.join(", ")} ) -> ${this.getType(t.type)} {
${n.vars}
${n.code}
`;return n.result&&(r+=`	return ${n.result};
`),r+=`
}
`,r}getInstanceIndex(){return this.shaderStage==="vertex"?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}getClipDistance(){return"varyings.hw_clip_distances"}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],n=this.directives[e];if(n!==void 0)for(const i of n)t.push(`enable ${i};`);return t.join(`
`)}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}enableHardwareClipping(e){this.enableClipDistances(),this.getBuiltin("clip_distances","hw_clip_distances",`array<f32, ${e} >`,"vertex")}getBuiltins(e){const t=[],n=this.builtins[e];if(n!==void 0)for(const{name:i,property:r,type:o}of n.values())t.push(`@builtin( ${i} ) ${r} : ${o}`);return t.join(`,
	`)}getScopedArray(e,t,n,i){return this.scopedArrays.has(e)===!1&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:n,bufferCount:i}),e}getScopedArrays(e){if(e!=="compute")return;const t=[];for(const{name:n,scope:i,bufferType:r,bufferCount:o}of this.scopedArrays.values()){const a=this.getType(r);t.push(`var<${i}> ${n}: array< ${a}, ${o} >;`)}return t.join(`
`)}getAttributes(e){const t=[];if(e==="compute"&&(this.getBuiltin("global_invocation_id","globalId","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),e==="vertex"||e==="compute"){const n=this.getBuiltins("attribute");n&&t.push(n);const i=this.getAttributesArray();for(let r=0,o=i.length;r<o;r++){const a=i[r],c=a.name,l=this.getType(a.type);t.push(`@location( ${r} ) ${c} : ${l}`)}}return t.join(`,
	`)}getStructMembers(e){const t=[];for(const n of e.members){const i=e.output?"@location( "+n.index+" ) ":"";let r=this.getType(n.type);n.atomic&&(r="atomic< "+r+" >"),t.push(`	${i+n.name} : ${r}`)}return e.output&&t.push(`	${this.getBuiltins("output")}`),t.join(`,
`)}getStructs(e){let t="";const n=this.structs[e];if(n.length>0){const i=[];for(const r of n){let o=`struct ${r.name} {
`;o+=this.getStructMembers(r),o+=`
};`,i.push(o)}t=`
`+i.join(`

`)+`
`}return t}getVar(e,t,n=null){let i=`var ${t} : `;return n!==null?i+=this.generateArrayDeclaration(e,n):i+=this.getType(e),i}getVars(e){const t=[],n=this.vars[e];if(n!==void 0)for(const i of n)t.push(`	${this.getVar(i.type,i.name,i.count)};`);return`
${t.join(`
`)}
`}getVaryings(e){const t=[];if(e==="vertex"&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),e==="vertex"||e==="fragment"){const r=this.varyings,o=this.vars[e];for(let a=0;a<r.length;a++){const c=r[a];if(c.needsInterpolation){let l=`@location( ${a} )`;if(c.interpolationType){const u=c.interpolationSampling!==null?`, ${c.interpolationSampling} )`:" )";l+=` @interpolate( ${c.interpolationType}${u}`}else/^(int|uint|ivec|uvec)/.test(c.type)&&(l+=` @interpolate( ${this.renderer.backend.compatibilityMode?"flat, either":"flat"} )`);t.push(`${l} ${c.name} : ${this.getType(c.type)}`)}else e==="vertex"&&o.includes(c)===!1&&o.push(c)}}const n=this.getBuiltins(e);n&&t.push(n);const i=t.join(`,
	`);return e==="vertex"?this._getWGSLStruct("VaryingsStruct","	"+i):i}isCustomStruct(e){const t=e.value,n=e.node,i=(t.isBufferAttribute||t.isInstancedBufferAttribute)&&n.structTypeNode!==null,r=n.value&&n.value.array&&typeof n.value.itemSize=="number"&&n.value.array.length>n.value.itemSize;return i&&!r}getUniforms(e){const t=this.uniforms[e],n=[],i=[],r=[],o={};for(const c of t){const l=c.groupNode.name,u=this.bindingsIndexes[l];if(c.type==="texture"||c.type==="cubeTexture"||c.type==="storageTexture"||c.type==="texture3D"){const h=c.node.value;this.isUnfilterable(h)===!1&&c.node.isStorageTextureNode!==!0&&(this.isSampleCompare(h)?n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${c.name}_sampler : sampler_comparison;`):n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${c.name}_sampler : sampler;`));let d,f="";const{primarySamples:p}=this.renderer.backend.utils.getTextureSampleData(h);if(p>1&&(f="_multisampled"),h.isCubeTexture===!0)d="texture_cube<f32>";else if(h.isDepthTexture===!0)this.renderer.backend.compatibilityMode&&h.compareFunction===null?d=`texture${f}_2d<f32>`:d=`texture_depth${f}_2d${h.isArrayTexture===!0?"_array":""}`;else if(c.node.isStorageTextureNode===!0){const x=wp(h),g=this.getStorageAccess(c.node,e),m=c.node.value.is3DTexture,b=c.node.value.isArrayTexture;d=`texture_storage_${m?"3d":`2d${b?"_array":""}`}<${x}, ${g}>`}else if(h.isArrayTexture===!0||h.isDataArrayTexture===!0||h.isCompressedArrayTexture===!0)d="texture_2d_array<f32>";else if(h.is3DTexture===!0||h.isData3DTexture===!0)d="texture_3d<f32>";else{const x=this.getComponentTypeFromTexture(h).charAt(0);d=`texture${f}_2d<${x}32>`}n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${c.name} : ${d};`)}else if(c.type==="buffer"||c.type==="storageBuffer"||c.type==="indirectStorageBuffer"){const h=c.node,d=this.getType(h.getNodeType(this)),f=h.bufferCount,p=f>0&&c.type==="buffer"?", "+f:"",x=h.isStorageBufferNode?`storage, ${this.getStorageAccess(h,e)}`:"uniform";if(this.isCustomStruct(c))i.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var<${x}> ${c.name} : ${d};`);else{const m=`	value : array< ${h.isAtomic?`atomic<${d}>`:`${d}`}${p} >`;i.push(this._getWGSLStructBinding(c.name,m,x,u.binding++,u.group))}}else{const h=this.getType(this.getVectorType(c.type)),d=c.groupNode.name;(o[d]||(o[d]={index:u.binding++,id:u.group,snippets:[]})).snippets.push(`	${c.name} : ${h}`)}}for(const c in o){const l=o[c];r.push(this._getWGSLStructBinding(c,l.snippets.join(`,
`),"uniform",l.index,l.id))}let a=n.join(`
`);return a+=i.join(`
`),a+=r.join(`
`),a}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){this.shaderStage=t;const n=e[t];n.uniforms=this.getUniforms(t),n.attributes=this.getAttributes(t),n.varyings=this.getVaryings(t),n.structs=this.getStructs(t),n.vars=this.getVars(t),n.codes=this.getCodes(t),n.directives=this.getDirectives(t),n.scopedArrays=this.getScopedArrays(t);let i=`// code

`;i+=this.flowCode[t];const r=this.flowNodes[t],o=r[r.length-1],a=o.outputNode,c=a!==void 0&&a.isOutputStructNode===!0;for(const l of r){const u=this.getFlowData(l),h=l.name;if(h&&(i.length>0&&(i+=`
`),i+=`	// flow -> ${h}
`),i+=`${u.code}
	`,l===o&&t!=="compute"){if(i+=`// result

	`,t==="vertex")i+=`varyings.Vertex = ${u.result};`;else if(t==="fragment")if(c)n.returnType=a.getNodeType(this),n.structs+="var<private> output : "+n.returnType+";",i+=`return ${u.result};`;else{let d="	@location(0) color: vec4<f32>";const f=this.getBuiltins("output");f&&(d+=`,
	`+f),n.returnType="OutputStruct",n.structs+=this._getWGSLStruct("OutputStruct",d),n.structs+=`
var<private> output : OutputStruct;`,i+=`output.color = ${u.result};

	return output;`}}}n.flow=i}if(this.shaderStage=null,this.material!==null)this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment);else{const t=this.object.workgroupSize;this.computeShader=this._getWGSLComputeCode(e.compute,t)}}getMethod(e,t=null){let n;return t!==null&&(n=this._getWGSLMethod(e+"_"+t)),n===void 0&&(n=this._getWGSLMethod(e)),n||e}getBitcastMethod(e){return`bitcast<${this.getType(e)}>`}getTernary(e,t,n){return`select( ${n}, ${t}, ${e} )`}getType(e){return WV[e]||e}isAvailable(e){let t=E_[e];return t===void 0&&(e==="float32Filterable"?t=this.renderer.hasFeature("float32-filterable"):e==="clipDistance"&&(t=this.renderer.hasFeature("clip-distances")),E_[e]=t),t}_getWGSLMethod(e){return kc[e]!==void 0&&this._include(e),$V[e]}_include(e){const t=kc[e];return t.build(this),this.addInclude(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}
// directives
${e.directives}

// structs
${e.structs}

// uniforms
${e.uniforms}

// varyings
${e.varyings}
var<private> varyings : VaryingsStruct;

// codes
${e.codes}

@vertex
fn main( ${e.attributes} ) -> VaryingsStruct {

	// vars
	${e.vars}

	// flow
	${e.flow}

	return varyings;

}
`}_getWGSLFragmentCode(e){return`${this.getSignature()}
// global
${uM}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@fragment
fn main( ${e.varyings} ) -> ${e.returnType} {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLComputeCode(e,t){const[n,i,r]=t;return`${this.getSignature()}
// directives
${e.directives}

// system
var<private> instanceIndex : u32;

// locals
${e.scopedArrays}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@compute @workgroup_size( ${n}, ${i}, ${r} )
fn main( ${e.attributes} ) {

	// system
	instanceIndex = globalId.x
		+ globalId.y * ( ${n} * numWorkgroups.x )
		+ globalId.z * ( ${n} * numWorkgroups.x ) * ( ${i} * numWorkgroups.y );

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLStruct(e,t){return`
struct ${e} {
${t}
};`}_getWGSLStructBinding(e,t,n,i=0,r=0){const o=e+"Struct";return`${this._getWGSLStruct(o,t)}
@binding( ${i} ) @group( ${r} )
var<${n}> ${e} : ${o};`}}class qV{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return e.depthTexture!==null?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=B.Depth24PlusStencil8:e.depth&&(t=B.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getTextureSampleData(e){let t;if(e.isFramebufferTexture)t=1;else if(e.isDepthTexture&&!e.renderTarget){const r=this.backend.renderer,o=r.getRenderTarget();t=o?o.samples:r.currentSamples}else e.renderTarget&&(t=e.renderTarget.samples);t=t||1;const n=t>1&&e.renderTarget!==null&&e.isDepthTexture!==!0&&e.isFramebufferTexture!==!0;return{samples:t,primarySamples:n?1:t,isMSAA:n}}getCurrentColorFormat(e){let t;return e.textures!==null?t=this.getTextureFormatGPU(e.textures[0]):t=this.getPreferredCanvasFormat(),t}getCurrentColorFormats(e){return e.textures!==null?e.textures.map(t=>this.getTextureFormatGPU(t)):[this.getPreferredCanvasFormat()]}getCurrentColorSpace(e){return e.textures!==null?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){if(e.isPoints)return _a.PointList;if(e.isLineSegments||e.isMesh&&t.wireframe===!0)return _a.LineList;if(e.isLine)return _a.LineStrip;if(e.isMesh)return _a.TriangleList}getSampleCount(e){return e>=4?4:1}getSampleCountRenderContext(e){return e.textures!==null?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.currentSamples)}getPreferredCanvasFormat(){const e=this.backend.parameters.outputType;if(e===void 0)return navigator.gpu.getPreferredCanvasFormat();if(e===un)return B.BGRA8Unorm;if(e===hn)return B.RGBA16Float;throw new Error("Unsupported outputType")}}const hM=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]);typeof Float16Array<"u"&&hM.set(Float16Array,["float16"]);const YV=new Map([[ey,["float16"]]]),jV=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class KV{constructor(e){this.backend=e}createAttribute(e,t){const n=this._getBufferAttribute(e),i=this.backend,r=i.get(n);let o=r.buffer;if(o===void 0){const a=i.device;let c=n.array;if(e.normalized===!1){if(c.constructor===Int16Array||c.constructor===Int8Array)c=new Int32Array(c);else if((c.constructor===Uint16Array||c.constructor===Uint8Array)&&(c=new Uint32Array(c),t&GPUBufferUsage.INDEX))for(let h=0;h<c.length;h++)c[h]===65535&&(c[h]=4294967295)}if(n.array=c,(n.isStorageBufferAttribute||n.isStorageInstancedBufferAttribute)&&n.itemSize===3){c=new c.constructor(n.count*4);for(let h=0;h<n.count;h++)c.set(n.array.subarray(h*3,h*3+3),h*4);n.itemSize=4,n.array=c,r._force3to4BytesAlignment=!0}const l=c.byteLength,u=l+(4-l%4)%4;o=a.createBuffer({label:n.name,size:u,usage:t,mappedAtCreation:!0}),new c.constructor(o.getMappedRange()).set(c),o.unmap(),r.buffer=o}}updateAttribute(e){const t=this._getBufferAttribute(e),n=this.backend,i=n.device,r=n.get(t),o=n.get(t).buffer;let a=t.array;if(r._force3to4BytesAlignment===!0){a=new a.constructor(t.count*4);for(let u=0;u<t.count;u++)a.set(t.array.subarray(u*3,u*3+3),u*4);t.array=a}const c=this._isTypedArray(a),l=t.updateRanges;if(l.length===0)i.queue.writeBuffer(o,0,a,0);else{const u=c?1:a.BYTES_PER_ELEMENT;for(let h=0,d=l.length;h<d;h++){const f=l[h];let p,x;if(r._force3to4BytesAlignment===!0){const m=Math.floor(f.start/3),b=Math.ceil(f.count/3);p=m*4*u,x=b*4*u}else p=f.start*u,x=f.count*u;const g=p*(c?a.BYTES_PER_ELEMENT:1);i.queue.writeBuffer(o,g,a,p,x)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),n=new Map;for(let i=0;i<t.length;i++){const r=t[i],o=r.array.BYTES_PER_ELEMENT,a=this._getBufferAttribute(r);let c=n.get(a);if(c===void 0){let h,d;r.isInterleavedBufferAttribute===!0?(h=r.data.stride*o,d=r.data.isInstancedInterleavedBuffer?Zu.Instance:Zu.Vertex):(h=r.itemSize*o,d=r.isInstancedBufferAttribute?Zu.Instance:Zu.Vertex),r.normalized===!1&&(r.array.constructor===Int16Array||r.array.constructor===Uint16Array)&&(h=4),c={arrayStride:h,attributes:[],stepMode:d},n.set(a,c)}const l=this._getVertexFormat(r),u=r.isInterleavedBufferAttribute===!0?r.offset*o:0;c.attributes.push({shaderLocation:i,offset:u,format:l})}return Array.from(n.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,n=t.device,r=t.get(this._getBufferAttribute(e)).buffer,o=r.size,a=n.createBuffer({label:`${e.name}_readback`,size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),c=n.createCommandEncoder({label:`readback_encoder_${e.name}`});c.copyBufferToBuffer(r,0,a,0,o);const l=c.finish();n.queue.submit([l]),await a.mapAsync(GPUMapMode.READ);const u=a.getMappedRange(),h=new e.array.constructor(u.slice(0));return a.unmap(),h.buffer}_getVertexFormat(e){const{itemSize:t,normalized:n}=e,i=e.array.constructor,r=e.constructor;let o;if(t===1)o=jV.get(i);else{const c=(YV.get(r)||hM.get(i))[n?1:0];if(c){const l=i.BYTES_PER_ELEMENT*t,h=Math.floor((l+3)/4)*4/i.BYTES_PER_ELEMENT;if(h%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");o=`${c}x${h}`}}return o||ge("WebGPUAttributeUtils: Vertex format not supported yet."),o}_isTypedArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class ZV{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const t=this.backend,n=t.device,i=[];let r=0;for(const o of e.bindings){const a={binding:r++,visibility:o.visibility};if(o.isUniformBuffer||o.isStorageBuffer){const c={};o.isStorageBuffer&&(o.visibility&4&&(o.access===$n.READ_WRITE||o.access===$n.WRITE_ONLY)?c.type=Of.Storage:c.type=Of.ReadOnlyStorage),a.buffer=c}else if(o.isSampledTexture&&o.store){const c={};c.format=this.backend.get(o.texture).texture.format;const l=o.access;l===$n.READ_WRITE?c.access=Vf.ReadWrite:l===$n.WRITE_ONLY?c.access=Vf.WriteOnly:c.access=Vf.ReadOnly,o.texture.isArrayTexture?c.viewDimension=An.TwoDArray:o.texture.is3DTexture&&(c.viewDimension=An.ThreeD),a.storageTexture=c}else if(o.isSampledTexture){const c={},{primarySamples:l}=t.utils.getTextureSampleData(o.texture);if(l>1&&(c.multisampled=!0,o.texture.isDepthTexture||(c.sampleType=co.UnfilterableFloat)),o.texture.isDepthTexture)t.compatibilityMode&&o.texture.compareFunction===null?c.sampleType=co.UnfilterableFloat:c.sampleType=co.Depth;else if(o.texture.isDataTexture||o.texture.isDataArrayTexture||o.texture.isData3DTexture){const u=o.texture.type;u===On?c.sampleType=co.SInt:u===Kt?c.sampleType=co.UInt:u===Sn&&(this.backend.hasFeature("float32-filterable")?c.sampleType=co.Float:c.sampleType=co.UnfilterableFloat)}o.isSampledCubeTexture?c.viewDimension=An.Cube:o.texture.isArrayTexture||o.texture.isDataArrayTexture||o.texture.isCompressedArrayTexture?c.viewDimension=An.TwoDArray:o.isSampledTexture3D&&(c.viewDimension=An.ThreeD),a.texture=c}else if(o.isSampler){const c={};o.texture.isDepthTexture&&(o.texture.compareFunction!==null?c.type=b_.Comparison:t.compatibilityMode&&(c.type=b_.NonFiltering)),a.sampler=c}else ge(`WebGPUBindingUtils: Unsupported binding "${o}".`);i.push(a)}return n.createBindGroupLayout({entries:i})}createBindings(e,t,n,i=0){const{backend:r,bindGroupLayoutCache:o}=this,a=r.get(e);let c=o.get(e.bindingsReference);c===void 0&&(c=this.createBindingsLayout(e),o.set(e.bindingsReference,c));let l;n>0&&(a.groups===void 0&&(a.groups=[],a.versions=[]),a.versions[n]===i&&(l=a.groups[n])),l===void 0&&(l=this.createBindGroup(e,c),n>0&&(a.groups[n]=l,a.versions[n]=i)),a.group=l,a.layout=c}updateBinding(e){const t=this.backend,n=t.device,i=e.buffer,r=t.get(e).buffer;n.queue.writeBuffer(r,0,i,0)}createBindGroupIndex(e,t){const i=this.backend.device,r=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,o=e[0],a=i.createBuffer({label:"bindingCameraIndex_"+o,size:16,usage:r});i.queue.writeBuffer(a,0,e,0);const c=[{binding:0,resource:{buffer:a}}];return i.createBindGroup({label:"bindGroupCameraIndex_"+o,layout:t,entries:c})}createBindGroup(e,t){const n=this.backend,i=n.device;let r=0;const o=[];for(const a of e.bindings){if(a.isUniformBuffer){const c=n.get(a);if(c.buffer===void 0){const l=a.byteLength,u=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,h=i.createBuffer({label:"bindingBuffer_"+a.name,size:l,usage:u});c.buffer=h}o.push({binding:r,resource:{buffer:c.buffer}})}else if(a.isStorageBuffer){const c=n.get(a);if(c.buffer===void 0){const l=a.attribute;c.buffer=n.get(l).buffer}o.push({binding:r,resource:{buffer:c.buffer}})}else if(a.isSampledTexture){const c=n.get(a.texture);let l;if(c.externalTexture!==void 0)l=i.importExternalTexture({source:c.externalTexture});else{const u=a.store?1:c.texture.mipLevelCount,h=a.store?a.mipLevel:0;let d=`view-${c.texture.width}-${c.texture.height}`;if(c.texture.depthOrArrayLayers>1&&(d+=`-${c.texture.depthOrArrayLayers}`),d+=`-${u}-${h}`,l=c[d],l===void 0){const f=RV.All;let p;a.isSampledCubeTexture?p=An.Cube:a.isSampledTexture3D?p=An.ThreeD:a.texture.isArrayTexture||a.texture.isDataArrayTexture||a.texture.isCompressedArrayTexture?p=An.TwoDArray:p=An.TwoD,l=c[d]=c.texture.createView({aspect:f,dimension:p,mipLevelCount:u,baseMipLevel:h})}}o.push({binding:r,resource:l})}else if(a.isSampler){const c=n.get(a.texture);o.push({binding:r,resource:c.sampler})}r++}return i.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:o})}}class QV{constructor(e){this.backend=e,this._activePipelines=new WeakMap}setPipeline(e,t){this._activePipelines.get(e)!==t&&(e.setPipeline(t),this._activePipelines.set(e,t))}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:n,material:i,geometry:r,pipeline:o}=e,{vertexProgram:a,fragmentProgram:c}=o,l=this.backend,u=l.device,h=l.utils,d=l.get(o),f=[];for(const z of e.getBindings()){const $=l.get(z);f.push($.layout)}const p=l.attributeUtils.createShaderVertexBuffers(e);let x;i.blending!==ci&&(i.blending!==Ii||i.transparent!==!1)&&(x=this._getBlending(i));let g={};i.stencilWrite===!0&&(g={compare:this._getStencilCompare(i),failOp:this._getStencilOperation(i.stencilFail),depthFailOp:this._getStencilOperation(i.stencilZFail),passOp:this._getStencilOperation(i.stencilZPass)});const m=this._getColorWriteMask(i),b=[];if(e.context.textures!==null){const z=e.context.textures;for(let $=0;$<z.length;$++){const Y=h.getTextureFormatGPU(z[$]);b.push({format:Y,blend:x,writeMask:m})}}else{const z=h.getCurrentColorFormat(e.context);b.push({format:z,blend:x,writeMask:m})}const y=l.get(a).module,v=l.get(c).module,w=this._getPrimitiveState(n,r,i),S=this._getDepthCompare(i),E=h.getCurrentDepthStencilFormat(e.context),C=this._getSampleCount(e.context),T={label:`renderPipeline_${i.name||i.type}_${i.id}`,vertex:Object.assign({},y,{buffers:p}),fragment:Object.assign({},v,{targets:b}),primitive:w,multisample:{count:C,alphaToCoverageEnabled:i.alphaToCoverage&&C>1},layout:u.createPipelineLayout({bindGroupLayouts:f})},M={},I=e.context.depth,G=e.context.stencil;if((I===!0||G===!0)&&(I===!0&&(M.format=E,M.depthWriteEnabled=i.depthWrite,M.depthCompare=S),G===!0&&(M.stencilFront=g,M.stencilBack={},M.stencilReadMask=i.stencilFuncMask,M.stencilWriteMask=i.stencilWriteMask),i.polygonOffset===!0&&(M.depthBias=i.polygonOffsetUnits,M.depthBiasSlopeScale=i.polygonOffsetFactor,M.depthBiasClamp=0),T.depthStencil=M),u.pushErrorScope("validation"),t===null)d.pipeline=u.createRenderPipeline(T),u.popErrorScope().then(z=>{z!==null&&(d.error=!0,ge(z.message))});else{const z=new Promise(async $=>{try{d.pipeline=await u.createRenderPipelineAsync(T)}catch{}const Y=await u.popErrorScope();Y!==null&&(d.error=!0,ge(Y.message)),$()});t.push(z)}}createBundleEncoder(e,t="renderBundleEncoder"){const n=this.backend,{utils:i,device:r}=n,o=i.getCurrentDepthStencilFormat(e),a=i.getCurrentColorFormats(e),c=this._getSampleCount(e),l={label:t,colorFormats:a,depthStencilFormat:o,sampleCount:c};return r.createRenderBundleEncoder(l)}createComputePipeline(e,t){const n=this.backend,i=n.device,r=n.get(e.computeProgram).module,o=n.get(e),a=[];for(const c of t){const l=n.get(c);a.push(l.layout)}o.pipeline=i.createComputePipeline({compute:r,layout:i.createPipelineLayout({bindGroupLayouts:a})})}_getBlending(e){let t,n;const i=e.blending,r=e.blendSrc,o=e.blendDst,a=e.blendEquation;if(i===ya){const c=e.blendSrcAlpha!==null?e.blendSrcAlpha:r,l=e.blendDstAlpha!==null?e.blendDstAlpha:o,u=e.blendEquationAlpha!==null?e.blendEquationAlpha:a;t={srcFactor:this._getBlendFactor(r),dstFactor:this._getBlendFactor(o),operation:this._getBlendOperation(a)},n={srcFactor:this._getBlendFactor(c),dstFactor:this._getBlendFactor(l),operation:this._getBlendOperation(u)}}else{const c=e.premultipliedAlpha,l=(u,h,d,f)=>{t={srcFactor:u,dstFactor:h,operation:ao.Add},n={srcFactor:d,dstFactor:f,operation:ao.Add}};if(c)switch(i){case Ii:l(At.One,At.OneMinusSrcAlpha,At.One,At.OneMinusSrcAlpha);break;case Aa:l(At.One,At.One,At.One,At.One);break;case wa:l(At.Zero,At.OneMinusSrc,At.Zero,At.One);break;case Ra:l(At.Dst,At.OneMinusSrcAlpha,At.Zero,At.One);break}else switch(i){case Ii:l(At.SrcAlpha,At.OneMinusSrcAlpha,At.One,At.OneMinusSrcAlpha);break;case Aa:l(At.SrcAlpha,At.One,At.One,At.One);break;case wa:ge("WebGPURenderer: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Ra:ge("WebGPURenderer: MultiplyBlending requires material.premultipliedAlpha = true");break}}if(t!==void 0&&n!==void 0)return{color:t,alpha:n};ge("WebGPURenderer: Invalid blending: ",i)}_getBlendFactor(e){let t;switch(e){case nr:t=At.Zero;break;case Pp:t=At.One;break;case Lp:t=At.Src;break;case Dp:t=At.OneMinusSrc;break;case rl:t=At.SrcAlpha;break;case ol:t=At.OneMinusSrcAlpha;break;case Fp:t=At.Dst;break;case Bp:t=At.OneMinusDst;break;case Up:t=At.DstAlpha;break;case Ip:t=At.OneMinusDstAlpha;break;case Op:t=At.SrcAlphaSaturated;break;case sD:t=At.Constant;break;case rD:t=At.OneMinusConstant;break;default:ge("WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const n=e.stencilFunc;switch(n){case kM:t=Gn.Never;break;case Kf:t=Gn.Always;break;case HM:t=Gn.Less;break;case $M:t=Gn.LessEqual;break;case WM:t=Gn.Equal;break;case YM:t=Gn.GreaterEqual;break;case XM:t=Gn.Greater;break;case qM:t=Gn.NotEqual;break;default:ge("WebGPURenderer: Invalid stencil function.",n)}return t}_getStencilOperation(e){let t;switch(e){case lo:t=Mr.Keep;break;case IM:t=Mr.Zero;break;case FM:t=Mr.Replace;break;case zM:t=Mr.Invert;break;case BM:t=Mr.IncrementClamp;break;case OM:t=Mr.DecrementClamp;break;case VM:t=Mr.IncrementWrap;break;case GM:t=Mr.DecrementWrap;break;default:ge("WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case Kn:t=ao.Add;break;case Np:t=ao.Subtract;break;case Cp:t=ao.ReverseSubtract;break;case z_:t=ao.Min;break;case k_:t=ao.Max;break;default:ge("WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,n){const i={},r=this.backend.utils;i.topology=r.getPrimitiveTopology(e,n),t.index!==null&&e.isLine===!0&&e.isLineSegments!==!0&&(i.stripIndexFormat=t.index.array instanceof Uint16Array?ac.Uint16:ac.Uint32);let o=n.side===Xt;return e.isMesh&&e.matrixWorld.determinant()<0&&(o=!o),i.frontFace=o===!0?x_.CW:x_.CCW,i.cullMode=n.side===jn?__.None:__.Back,i}_getColorWriteMask(e){return e.colorWrite===!0?y_.All:y_.None}_getDepthCompare(e){let t;if(e.depthTest===!1)t=Gn.Always;else{const n=e.depthFunc;switch(n){case al:t=Gn.Never;break;case cl:t=Gn.Always;break;case ll:t=Gn.Less;break;case Vr:t=Gn.LessEqual;break;case ul:t=Gn.Equal;break;case hl:t=Gn.GreaterEqual;break;case dl:t=Gn.Greater;break;case fl:t=Gn.NotEqual;break;default:ge("WebGPUPipelineUtils: Invalid depth function.",n)}}return t}}class JV extends lM{constructor(e,t,n=2048){super(n),this.device=e,this.type=t,this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxQueries,label:`queryset_global_timestamp_${t}`});const i=this.maxQueries*8;this.resolveBuffer=this.device.createBuffer({label:`buffer_timestamp_resolve_${t}`,size:i,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultBuffer=this.device.createBuffer({label:`buffer_timestamp_result_${t}`,size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})}allocateQueriesForContext(e){if(!this.trackTimestamp||this.isDisposed)return null;if(this.currentQueryIndex+2>this.maxQueries)return Wt(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryOffsets.set(e,t),t}async resolveQueriesAsync(){if(!this.trackTimestamp||this.currentQueryIndex===0||this.isDisposed)return this.lastValue;if(this.pendingResolve)return this.pendingResolve;this.pendingResolve=this._resolveQueries();try{return await this.pendingResolve}finally{this.pendingResolve=null}}async _resolveQueries(){if(this.isDisposed)return this.lastValue;try{if(this.resultBuffer.mapState!=="unmapped")return this.lastValue;const e=new Map(this.queryOffsets),t=this.currentQueryIndex,n=t*8;this.currentQueryIndex=0,this.queryOffsets.clear();const i=this.device.createCommandEncoder();i.resolveQuerySet(this.querySet,0,t,this.resolveBuffer,0),i.copyBufferToBuffer(this.resolveBuffer,0,this.resultBuffer,0,n);const r=i.finish();if(this.device.queue.submit([r]),this.resultBuffer.mapState!=="unmapped")return this.lastValue;if(await this.resultBuffer.mapAsync(GPUMapMode.READ,0,n),this.isDisposed)return this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue;const o=new BigUint64Array(this.resultBuffer.getMappedRange(0,n)),a={},c=[];for(const[u,h]of e){const d=u.match(/^(.*):f(\d+)$/),f=parseInt(d[2]);c.includes(f)===!1&&c.push(f),a[f]===void 0&&(a[f]=0);const p=o[h],x=o[h+1],g=Number(x-p)/1e6;this.timestamps.set(u,g),a[f]+=g}const l=a[c[c.length-1]];return this.resultBuffer.unmap(),this.lastValue=l,this.frames=c,l}catch(e){return e("Error resolving queries:",e),this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue}}async dispose(){if(!this.isDisposed){if(this.isDisposed=!0,this.pendingResolve)try{await this.pendingResolve}catch(e){e("Error waiting for pending resolve:",e)}if(this.resultBuffer&&this.resultBuffer.mapState==="mapped")try{this.resultBuffer.unmap()}catch(e){e("Error unmapping buffer:",e)}this.querySet&&(this.querySet.destroy(),this.querySet=null),this.resolveBuffer&&(this.resolveBuffer.destroy(),this.resolveBuffer=null),this.resultBuffer&&(this.resultBuffer.destroy(),this.resultBuffer=null),this.queryOffsets.clear(),this.pendingResolve=null}}}class e4 extends cM{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=e.alpha===void 0?!0:e.alpha,this.parameters.compatibilityMode=e.compatibilityMode===void 0?!1:e.compatibilityMode,this.parameters.requiredLimits=e.requiredLimits===void 0?{}:e.requiredLimits,this.compatibilityMode=this.parameters.compatibilityMode,this.device=null,this.defaultRenderPassdescriptor=null,this.utils=new qV(this),this.attributeUtils=new KV(this),this.bindingUtils=new ZV(this),this.pipelineUtils=new QV(this),this.textureUtils=new FV(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let n;if(t.device===void 0){const i={powerPreference:t.powerPreference,featureLevel:t.compatibilityMode?"compatibility":void 0},r=typeof navigator<"u"?await navigator.gpu.requestAdapter(i):null;if(r===null)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const o=Object.values(Ap),a=[];for(const l of o)r.features.has(l)&&a.push(l);const c={requiredFeatures:a,requiredLimits:t.requiredLimits};n=await r.requestDevice(c)}else n=t.device;n.lost.then(i=>{const r={api:"WebGPU",message:i.message||"Unknown reason",reason:i.reason||null,originalEvent:i};e.onDeviceLost(r)}),this.device=n,this.trackTimestamp=this.trackTimestamp&&this.hasFeature(Ap.TimestampQuery),this.updateSize()}get context(){const e=this.renderer.getCanvasTarget(),t=this.get(e);let n=t.context;if(n===void 0){const i=this.parameters;e.isDefaultCanvasTarget===!0&&i.context!==void 0?n=i.context:n=e.domElement.getContext("webgpu"),"setAttribute"in e.domElement&&e.domElement.setAttribute("data-engine","three.js r181 webgpu");const r=i.alpha?"premultiplied":"opaque",o=i.outputType===hn?"extended":"standard";n.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:r,toneMapping:{mode:o}}),t.context=n}return n}get coordinateSystem(){return ks}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){const e=this.renderer,t=e.getCanvasTarget(),n=this.get(t),i=e.currentSamples;let r=n.descriptor;if(r===void 0||n.samples!==i){r={colorAttachments:[{view:null}]},(e.depth===!0||e.stencil===!0)&&(r.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(e.depth,e.stencil).createView()});const a=r.colorAttachments[0];i>0?a.view=this.textureUtils.getColorBuffer().createView():a.resolveTarget=void 0,n.descriptor=r,n.samples=i}const o=r.colorAttachments[0];return i>0?o.resolveTarget=this.context.getCurrentTexture().createView():o.view=this.context.getCurrentTexture().createView(),r}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.image.depth>1&&e.camera.isArrayCamera}_getRenderPassDescriptor(e,t={}){const n=e.renderTarget,i=this.get(n);let r=i.descriptors;(r===void 0||i.width!==n.width||i.height!==n.height||i.samples!==n.samples)&&(r={},i.descriptors=r);const o=e.getCacheKey();let a=r[o];if(a===void 0){const l=e.textures,u=[];let h;const d=this._isRenderCameraDepthArray(e);for(let f=0;f<l.length;f++){const p=this.get(l[f]),x={label:`colorAttachment_${f}`,baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,arrayLayerCount:1,dimension:An.TwoD};if(n.isRenderTarget3D)h=e.activeCubeFace,x.baseArrayLayer=0,x.dimension=An.ThreeD,x.depthOrArrayLayers=l[f].image.depth;else if(n.isRenderTarget&&l[f].image.depth>1)if(d===!0){const g=e.camera.cameras;for(let m=0;m<g.length;m++){const b={...x,baseArrayLayer:m,arrayLayerCount:1,dimension:An.TwoD},y=p.texture.createView(b);u.push({view:y,resolveTarget:void 0,depthSlice:void 0})}}else x.dimension=An.TwoDArray,x.depthOrArrayLayers=l[f].image.depth;if(d!==!0){const g=p.texture.createView(x);let m,b;p.msaaTexture!==void 0?(m=p.msaaTexture.createView(),b=g):(m=g,b=void 0),u.push({view:m,resolveTarget:b,depthSlice:h})}}if(a={textureViews:u},e.depth){const f=this.get(e.depthTexture),p={};e.depthTexture.isArrayTexture&&(p.dimension=An.TwoD,p.arrayLayerCount=1,p.baseArrayLayer=e.activeCubeFace),a.depthStencilView=f.texture.createView(p)}r[o]=a,i.width=n.width,i.height=n.height,i.samples=n.samples,i.activeMipmapLevel=e.activeMipmapLevel,i.activeCubeFace=e.activeCubeFace}const c={colorAttachments:[]};for(let l=0;l<a.textureViews.length;l++){const u=a.textureViews[l];let h={r:0,g:0,b:0,a:1};l===0&&t.clearValue&&(h=t.clearValue),c.colorAttachments.push({view:u.view,depthSlice:u.depthSlice,resolveTarget:u.resolveTarget,loadOp:t.loadOp||Ut.Load,storeOp:t.storeOp||si.Store,clearValue:h})}return a.depthStencilView&&(c.depthStencilAttachment={view:a.depthStencilView}),c}beginRender(e){const t=this.get(e),n=this.device,i=e.occlusionQueryCount;let r;i>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,r=n.createQuerySet({type:"occlusion",count:i,label:`occlusionQuerySet_${e.id}`}),t.occlusionQuerySet=r,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(i),t.lastOcclusionObject=null);let o;e.textures===null?o=this._getDefaultRenderPassDescriptor():o=this._getRenderPassDescriptor(e,{loadOp:Ut.Load}),this.initTimestampQuery(Ls.RENDER,this.getTimestampUID(e),o),o.occlusionQuerySet=r;const a=o.depthStencilAttachment;if(e.textures!==null){const l=o.colorAttachments;for(let u=0;u<l.length;u++){const h=l[u];e.clearColor?(h.clearValue=u===0?e.clearColorValue:{r:0,g:0,b:0,a:1},h.loadOp=Ut.Clear):h.loadOp=Ut.Load,h.storeOp=si.Store}}else{const l=o.colorAttachments[0];e.clearColor?(l.clearValue=e.clearColorValue,l.loadOp=Ut.Clear):l.loadOp=Ut.Load,l.storeOp=si.Store}e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=Ut.Clear):a.depthLoadOp=Ut.Load,a.depthStoreOp=si.Store),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=Ut.Clear):a.stencilLoadOp=Ut.Load,a.stencilStoreOp=si.Store);const c=n.createCommandEncoder({label:"renderContext_"+e.id});if(this._isRenderCameraDepthArray(e)===!0){const l=e.camera.cameras;!t.layerDescriptors||t.layerDescriptors.length!==l.length?this._createDepthLayerDescriptors(e,t,o,l):this._updateDepthLayerDescriptors(e,t,l),t.bundleEncoders=[],t.bundleSets=[];for(let u=0;u<l.length;u++){const h=this.pipelineUtils.createBundleEncoder(e,"renderBundleArrayCamera_"+u),d={attributes:{},bindingGroups:[],pipeline:null,index:null};t.bundleEncoders.push(h),t.bundleSets.push(d)}t.currentPass=null}else{const l=c.beginRenderPass(o);t.currentPass=l,e.viewport&&this.updateViewport(e),e.scissor&&this.updateScissor(e)}t.descriptor=o,t.encoder=c,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[]}_createDepthLayerDescriptors(e,t,n,i){const r=n.depthStencilAttachment;t.layerDescriptors=[];const o=this.get(e.depthTexture);o.viewCache||(o.viewCache=[]);for(let a=0;a<i.length;a++){const c={...n,colorAttachments:[{...n.colorAttachments[0],view:n.colorAttachments[a].view}]};if(n.depthStencilAttachment){const l=a;o.viewCache[l]||(o.viewCache[l]=o.texture.createView({dimension:An.TwoD,baseArrayLayer:a,arrayLayerCount:1})),c.depthStencilAttachment={view:o.viewCache[l],depthLoadOp:r.depthLoadOp||Ut.Clear,depthStoreOp:r.depthStoreOp||si.Store,depthClearValue:r.depthClearValue||1},e.stencil&&(c.depthStencilAttachment.stencilLoadOp=r.stencilLoadOp,c.depthStencilAttachment.stencilStoreOp=r.stencilStoreOp,c.depthStencilAttachment.stencilClearValue=r.stencilClearValue)}else c.depthStencilAttachment={...r};t.layerDescriptors.push(c)}}_updateDepthLayerDescriptors(e,t,n){for(let i=0;i<n.length;i++){const r=t.layerDescriptors[i];if(r.depthStencilAttachment){const o=r.depthStencilAttachment;e.depth&&(e.clearDepth?(o.depthClearValue=e.clearDepthValue,o.depthLoadOp=Ut.Clear):o.depthLoadOp=Ut.Load),e.stencil&&(e.clearStencil?(o.stencilClearValue=e.clearStencilValue,o.stencilLoadOp=Ut.Clear):o.stencilLoadOp=Ut.Load)}}}finishRender(e){const t=this.get(e),n=e.occlusionQueryCount;t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),n>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery();const i=t.encoder;if(this._isRenderCameraDepthArray(e)===!0){const r=[];for(let o=0;o<t.bundleEncoders.length;o++){const a=t.bundleEncoders[o];r.push(a.finish())}for(let o=0;o<t.layerDescriptors.length;o++)if(o<r.length){const a=t.layerDescriptors[o],c=i.beginRenderPass(a);if(e.viewport){const{x:l,y:u,width:h,height:d,minDepth:f,maxDepth:p}=e.viewportValue;c.setViewport(l,u,h,d,f,p)}if(e.scissor){const{x:l,y:u,width:h,height:d}=e.scissorValue;c.setScissorRect(l,u,h,d)}c.executeBundles([r[o]]),c.end()}}else t.currentPass&&t.currentPass.end();if(n>0){const r=n*8;let o=this.occludedResolveCache.get(r);o===void 0&&(o=this.device.createBuffer({size:r,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(r,o));const a=this.device.createBuffer({size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,n,o,0),t.encoder.copyBufferToBuffer(o,0,a,0,r),t.occlusionQueryBuffer=a,this.resolveOccludedAsync(e)}if(this.device.queue.submit([t.encoder.finish()]),e.textures!==null){const r=e.textures;for(let o=0;o<r.length;o++){const a=r[o];a.generateMipmaps===!0&&this.textureUtils.generateMipmaps(a)}}}isOccluded(e,t){const n=this.get(e);return n.occluded&&n.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:n,currentOcclusionQueryObjects:i}=t;if(n&&i){const r=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await n.mapAsync(GPUMapMode.READ);const o=n.getMappedRange(),a=new BigUint64Array(o);for(let c=0;c<i.length;c++)a[c]===BigInt(0)&&r.add(i[c]);n.destroy(),t.occluded=r}}updateViewport(e){const{currentPass:t}=this.get(e),{x:n,y:i,width:r,height:o,minDepth:a,maxDepth:c}=e.viewportValue;t.setViewport(n,i,r,o,a,c)}updateScissor(e){const{currentPass:t}=this.get(e),{x:n,y:i,width:r,height:o}=e.scissorValue;t.setScissorRect(n,i,r,o)}getClearColor(){const e=super.getClearColor();return this.renderer.alpha===!0&&(e.r*=e.a,e.g*=e.a,e.b*=e.a),e}clear(e,t,n,i=null){const r=this.device,o=this.renderer;let a=[],c,l,u,h;if(e){const p=this.getClearColor();l={r:p.r,g:p.g,b:p.b,a:p.a}}if(i===null){u=o.depth,h=o.stencil;const p=this._getDefaultRenderPassDescriptor();if(e){a=p.colorAttachments;const x=a[0];x.clearValue=l,x.loadOp=Ut.Clear,x.storeOp=si.Store}(u||h)&&(c=p.depthStencilAttachment)}else{u=i.depth,h=i.stencil;const p={loadOp:e?Ut.Clear:Ut.Load,clearValue:e?l:void 0};u&&(p.depthLoadOp=t?Ut.Clear:Ut.Load,p.depthClearValue=t?o.getClearDepth():void 0,p.depthStoreOp=si.Store),h&&(p.stencilLoadOp=n?Ut.Clear:Ut.Load,p.stencilClearValue=n?o.getClearStencil():void 0,p.stencilStoreOp=si.Store);const x=this._getRenderPassDescriptor(i,p);a=x.colorAttachments,c=x.depthStencilAttachment}u&&c&&(t?(c.depthLoadOp=Ut.Clear,c.depthClearValue=o.getClearDepth(),c.depthStoreOp=si.Store):(c.depthLoadOp=Ut.Load,c.depthStoreOp=si.Store)),h&&c&&(n?(c.stencilLoadOp=Ut.Clear,c.stencilClearValue=o.getClearStencil(),c.stencilStoreOp=si.Store):(c.stencilLoadOp=Ut.Load,c.stencilStoreOp=si.Store));const d=r.createCommandEncoder({label:"clear"});d.beginRenderPass({colorAttachments:a,depthStencilAttachment:c}).end(),r.queue.submit([d.finish()])}beginCompute(e){const t=this.get(e),n={label:"computeGroup_"+e.id};this.initTimestampQuery(Ls.COMPUTE,this.getTimestampUID(e),n),t.cmdEncoderGPU=this.device.createCommandEncoder({label:"computeGroup_"+e.id}),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(n)}compute(e,t,n,i,r=null){const o=this.get(t),{passEncoderGPU:a}=this.get(e),c=this.get(i).pipeline;this.pipelineUtils.setPipeline(a,c);for(let l=0,u=n.length;l<u;l++){const h=n[l],d=this.get(h);a.setBindGroup(l,d.group)}if(r===null&&(r=t.count),r&&typeof r=="object"&&r.isIndirectStorageBufferAttribute){const l=this.get(r).buffer;a.dispatchWorkgroupsIndirect(l,0);return}if(typeof r=="number"){const l=r;if(o.dispatchSize===void 0||o.count!==l){o.dispatchSize=[0,1,1],o.count=l;const u=t.workgroupSize;let h=u[0];for(let p=1;p<u.length;p++)h*=u[p];const d=Math.ceil(l/h),f=this.device.limits.maxComputeWorkgroupsPerDimension;r=[d,1,1],d>f&&(r[0]=Math.min(d,f),r[1]=Math.ceil(d/f)),o.dispatchSize=r}r=o.dispatchSize}a.dispatchWorkgroups(r[0],r[1]||1,r[2]||1)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.device.queue.submit([t.cmdEncoderGPU.finish()])}draw(e,t){const{object:n,material:i,context:r,pipeline:o}=e,a=e.getBindings(),c=this.get(r),l=this.get(o),u=l.pipeline;if(l.error===!0)return;const h=e.getIndex(),d=h!==null,f=e.getDrawParameters();if(f===null)return;const p=(g,m)=>{this.pipelineUtils.setPipeline(g,u),m.pipeline=u;const b=m.bindingGroups;for(let v=0,w=a.length;v<w;v++){const S=a[v],E=this.get(S);b[S.index]!==S.id&&(g.setBindGroup(S.index,E.group),b[S.index]=S.id)}if(d===!0&&m.index!==h){const v=this.get(h).buffer,w=h.array instanceof Uint16Array?ac.Uint16:ac.Uint32;g.setIndexBuffer(v,w),m.index=h}const y=e.getVertexBuffers();for(let v=0,w=y.length;v<w;v++){const S=y[v];if(m.attributes[v]!==S){const E=this.get(S).buffer;g.setVertexBuffer(v,E),m.attributes[v]=S}}r.stencil===!0&&i.stencilWrite===!0&&c.currentStencilRef!==i.stencilRef&&(g.setStencilReference(i.stencilRef),c.currentStencilRef=i.stencilRef)},x=(g,m)=>{if(p(g,m),n.isBatchedMesh===!0){const b=n._multiDrawStarts,y=n._multiDrawCounts,v=n._multiDrawCount,w=n._multiDrawInstances;w!==null&&Wt("WebGPUBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection.");for(let S=0;S<v;S++){const E=w?w[S]:1,C=E>1?0:S;d===!0?g.drawIndexed(y[S],E,b[S]/h.array.BYTES_PER_ELEMENT,0,C):g.draw(y[S],E,b[S],C),t.update(n,y[S],E)}}else if(d===!0){const{vertexCount:b,instanceCount:y,firstVertex:v}=f,w=e.getIndirect();if(w!==null){const S=this.get(w).buffer;g.drawIndexedIndirect(S,0)}else g.drawIndexed(b,y,v,0,0);t.update(n,b,y)}else{const{vertexCount:b,instanceCount:y,firstVertex:v}=f,w=e.getIndirect();if(w!==null){const S=this.get(w).buffer;g.drawIndirect(S,0)}else g.draw(b,y,v,0);t.update(n,b,y)}};if(e.camera.isArrayCamera&&e.camera.cameras.length>0){const g=this.get(e.camera),m=e.camera.cameras,b=e.getBindingGroup("cameraIndex");if(g.indexesGPU===void 0||g.indexesGPU.length!==m.length){const v=this.get(b),w=[],S=new Uint32Array([0,0,0,0]);for(let E=0,C=m.length;E<C;E++){S[0]=E;const T=this.bindingUtils.createBindGroupIndex(S,v.layout);w.push(T)}g.indexesGPU=w}const y=this.renderer.getPixelRatio();for(let v=0,w=m.length;v<w;v++){const S=m[v];if(n.layers.test(S.layers)){const E=S.viewport;let C=c.currentPass,T=c.currentSets;if(c.bundleEncoders){const M=c.bundleEncoders[v],I=c.bundleSets[v];C=M,T=I}E&&C.setViewport(Math.floor(E.x*y),Math.floor(E.y*y),Math.floor(E.width*y),Math.floor(E.height*y),r.viewportValue.minDepth,r.viewportValue.maxDepth),b&&g.indexesGPU&&(C.setBindGroup(b.index,g.indexesGPU[v]),T.bindingGroups[b.index]=b.id),x(C,T)}}}else if(c.currentPass){if(c.occlusionQuerySet!==void 0){const g=c.lastOcclusionObject;g!==n&&(g!==null&&g.occlusionTest===!0&&(c.currentPass.endOcclusionQuery(),c.occlusionQueryIndex++),n.occlusionTest===!0&&(c.currentPass.beginOcclusionQuery(c.occlusionQueryIndex),c.occlusionQueryObjects[c.occlusionQueryIndex]=n),c.lastOcclusionObject=n)}x(c.currentPass,c.currentSets)}}needsRenderUpdate(e){const t=this.get(e),{object:n,material:i}=e,r=this.utils,o=r.getSampleCountRenderContext(e.context),a=r.getCurrentColorSpace(e.context),c=r.getCurrentColorFormat(e.context),l=r.getCurrentDepthStencilFormat(e.context),u=r.getPrimitiveTopology(n,i);let h=!1;return(t.material!==i||t.materialVersion!==i.version||t.transparent!==i.transparent||t.blending!==i.blending||t.premultipliedAlpha!==i.premultipliedAlpha||t.blendSrc!==i.blendSrc||t.blendDst!==i.blendDst||t.blendEquation!==i.blendEquation||t.blendSrcAlpha!==i.blendSrcAlpha||t.blendDstAlpha!==i.blendDstAlpha||t.blendEquationAlpha!==i.blendEquationAlpha||t.colorWrite!==i.colorWrite||t.depthWrite!==i.depthWrite||t.depthTest!==i.depthTest||t.depthFunc!==i.depthFunc||t.stencilWrite!==i.stencilWrite||t.stencilFunc!==i.stencilFunc||t.stencilFail!==i.stencilFail||t.stencilZFail!==i.stencilZFail||t.stencilZPass!==i.stencilZPass||t.stencilFuncMask!==i.stencilFuncMask||t.stencilWriteMask!==i.stencilWriteMask||t.side!==i.side||t.alphaToCoverage!==i.alphaToCoverage||t.sampleCount!==o||t.colorSpace!==a||t.colorFormat!==c||t.depthStencilFormat!==l||t.primitiveTopology!==u||t.clippingContextCacheKey!==e.clippingContextCacheKey)&&(t.material=i,t.materialVersion=i.version,t.transparent=i.transparent,t.blending=i.blending,t.premultipliedAlpha=i.premultipliedAlpha,t.blendSrc=i.blendSrc,t.blendDst=i.blendDst,t.blendEquation=i.blendEquation,t.blendSrcAlpha=i.blendSrcAlpha,t.blendDstAlpha=i.blendDstAlpha,t.blendEquationAlpha=i.blendEquationAlpha,t.colorWrite=i.colorWrite,t.depthWrite=i.depthWrite,t.depthTest=i.depthTest,t.depthFunc=i.depthFunc,t.stencilWrite=i.stencilWrite,t.stencilFunc=i.stencilFunc,t.stencilFail=i.stencilFail,t.stencilZFail=i.stencilZFail,t.stencilZPass=i.stencilZPass,t.stencilFuncMask=i.stencilFuncMask,t.stencilWriteMask=i.stencilWriteMask,t.side=i.side,t.alphaToCoverage=i.alphaToCoverage,t.sampleCount=o,t.colorSpace=a,t.colorFormat=c,t.depthStencilFormat=l,t.primitiveTopology=u,t.clippingContextCacheKey=e.clippingContextCacheKey,h=!0),h}getRenderCacheKey(e){const{object:t,material:n}=e,i=this.utils,r=e.context,o=t.isMesh&&t.matrixWorld.determinant()<0;return[n.transparent,n.blending,n.premultipliedAlpha,n.blendSrc,n.blendDst,n.blendEquation,n.blendSrcAlpha,n.blendDstAlpha,n.blendEquationAlpha,n.colorWrite,n.depthWrite,n.depthTest,n.depthFunc,n.stencilWrite,n.stencilFunc,n.stencilFail,n.stencilZFail,n.stencilZPass,n.stencilFuncMask,n.stencilWriteMask,n.side,o,i.getSampleCountRenderContext(r),i.getCurrentColorSpace(r),i.getCurrentColorFormat(r),i.getCurrentDepthStencilFormat(r),i.getPrimitiveTopology(t,n),e.getGeometryCacheKey(),e.clippingContextCacheKey].join()}updateSampler(e){return this.textureUtils.updateSampler(e)}createDefaultTexture(e){return this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e,t=!1){this.textureUtils.destroyTexture(e,t)}async copyTextureToBuffer(e,t,n,i,r,o){return this.textureUtils.copyTextureToBuffer(e,t,n,i,r,o)}initTimestampQuery(e,t,n){if(!this.trackTimestamp)return;this.timestampQueryPool[e]||(this.timestampQueryPool[e]=new JV(this.device,e,2048));const i=this.timestampQueryPool[e],r=i.allocateQueriesForContext(t);n.timestampWrites={querySet:i.querySet,beginningOfPassWriteIndex:r,endOfPassWriteIndex:r+1}}createNodeBuilder(e,t){return new XV(e,t)}createProgram(e){const t=this.get(e);t.module={module:this.device.createShaderModule({code:e.code,label:e.stage+(e.name!==""?`_${e.name}`:"")}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const n=this.get(e),r=n.currentPass.finish();this.get(t).bundleGPU=r,n.currentSets=n._currentSets,n.currentPass=n._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e,t,n,i){this.bindingUtils.createBindings(e,t,n,i)}updateBindings(e,t,n,i){this.bindingUtils.createBindings(e,t,n,i)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){let t=GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)&&(t|=GPUBufferUsage.STORAGE),this.attributeUtils.createAttribute(e,t)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.delete(this.renderer.getCanvasTarget())}getMaxAnisotropy(){return 16}hasFeature(e){return S_[e]!==void 0&&(e=S_[e]),this.device.features.has(e)}copyTextureToTexture(e,t,n=null,i=null,r=0,o=0){let a=0,c=0,l=0,u=0,h=0,d=0,f=e.image.width,p=e.image.height,x=1;n!==null&&(n.isBox3===!0?(u=n.min.x,h=n.min.y,d=n.min.z,f=n.max.x-n.min.x,p=n.max.y-n.min.y,x=n.max.z-n.min.z):(u=n.min.x,h=n.min.y,f=n.max.x-n.min.x,p=n.max.y-n.min.y,x=1)),i!==null&&(a=i.x,c=i.y,l=i.z||0);const g=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),m=this.get(e).texture,b=this.get(t).texture;g.copyTextureToTexture({texture:m,mipLevel:r,origin:{x:u,y:h,z:d}},{texture:b,mipLevel:o,origin:{x:a,y:c,z:l}},[f,p,x]),this.device.queue.submit([g.finish()]),o===0&&t.generateMipmaps&&this.textureUtils.generateMipmaps(t)}copyFramebufferToTexture(e,t,n){const i=this.get(t);let r=null;t.renderTarget?e.isDepthTexture?r=this.get(t.depthTexture).texture:r=this.get(t.textures[0]).texture:e.isDepthTexture?r=this.textureUtils.getDepthBuffer(t.depth,t.stencil):r=this.context.getCurrentTexture();const o=this.get(e).texture;if(r.format!==o.format){ge("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",r.format,o.format);return}let a;if(i.currentPass?(i.currentPass.end(),a=i.encoder):a=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),a.copyTextureToTexture({texture:r,origin:[n.x,n.y,0]},{texture:o},[n.z,n.w]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e,a),i.currentPass){const{descriptor:c}=i;for(let l=0;l<c.colorAttachments.length;l++)c.colorAttachments[l].loadOp=Ut.Load;t.depth&&(c.depthStencilAttachment.depthLoadOp=Ut.Load),t.stencil&&(c.depthStencilAttachment.stencilLoadOp=Ut.Load),i.currentPass=a.beginRenderPass(c),i.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.viewport&&this.updateViewport(t),t.scissor&&this.updateScissor(t)}else this.device.queue.submit([a.finish()])}dispose(){this.textureUtils.dispose()}}class t4 extends mm{constructor(e,t,n,i,r,o){super(e,t,n,i,r,o),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class n4 extends mm{constructor(e,t,n,i,r,o){super(e,t,n,i,r,o),this.aspect=null}copy(e,t){return super.copy(e,t),this.aspect=e.aspect,this}}class i4 extends eM{constructor(){super(),this.addMaterial(WP,"MeshPhongMaterial"),this.addMaterial(JS,"MeshStandardMaterial"),this.addMaterial(BL,"MeshPhysicalMaterial"),this.addMaterial(zL,"MeshToonMaterial"),this.addMaterial(BP,"MeshBasicMaterial"),this.addMaterial(kP,"MeshLambertMaterial"),this.addMaterial(LP,"MeshNormalMaterial"),this.addMaterial(HL,"MeshMatcapMaterial"),this.addMaterial(EP,"LineBasicMaterial"),this.addMaterial(wP,"LineDashedMaterial"),this.addMaterial(YL,"PointsMaterial"),this.addMaterial(tT,"SpriteMaterial"),this.addMaterial(QL,"ShadowMaterial"),this.addLight(TF,DE),this.addLight(DO,IE),this.addLight(UO,BE),this.addLight(Vg,mm),this.addLight(OO,FE),this.addLight(VO,CE),this.addLight(GO,VE),this.addLight(IO,t4),this.addLight(BO,n4),this.addToneMapping(_T,$_),this.addToneMapping(yT,X_),this.addToneMapping(bT,q_),this.addToneMapping(vT,Y_),this.addToneMapping(ST,j_),this.addToneMapping(TT,K_)}}class uG extends oV{constructor(e={}){let t;e.forceWebGL?t=g_:(t=e4,e.getFallback=()=>(te("WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new g_(e)));const n=new t(e);super(n,e),this.library=new i4,this.isWebGPURenderer=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */_.BRDF_GGX;_.BRDF_Lambert;_.BasicPointShadowFilter;_.BasicShadowFilter;_.Break;_.Const;_.Continue;_.DFGApprox;_.D_GGX;_.Discard;_.EPSILON;_.F_Schlick;const hG=_.Fn;_.INFINITY;const dG=_.If,fG=_.Loop;_.NodeAccess;_.NodeShaderStage;_.NodeType;_.NodeUpdateType;_.PCFShadowFilter;_.PCFSoftShadowFilter;_.PI;_.PI2;_.TWO_PI;_.HALF_PI;_.PointShadowFilter;_.Return;_.Schlick_to_F0;_.ScriptableNodeResources;_.ShaderNode;_.Stack;_.Switch;_.TBNViewMatrix;_.VSMShadowFilter;_.V_GGX_SmithCorrelated;_.Var;_.VarIntent;_.abs;_.acesFilmicToneMapping;_.acos;_.add;_.addMethodChaining;_.addNodeElement;_.agxToneMapping;_.all;_.alphaT;_.and;_.anisotropy;_.anisotropyB;_.anisotropyT;_.any;_.append;_.array;_.arrayBuffer;const pG=_.asin;_.assign;_.atan;_.atan2;_.atomicAdd;_.atomicAnd;_.atomicFunc;_.atomicLoad;_.atomicMax;_.atomicMin;_.atomicOr;_.atomicStore;_.atomicSub;_.atomicXor;_.attenuationColor;_.attenuationDistance;_.attribute;_.attributeArray;_.backgroundBlurriness;_.backgroundIntensity;_.backgroundRotation;_.batch;_.bentNormalView;_.billboarding;_.bitAnd;_.bitNot;_.bitOr;_.bitXor;_.bitangentGeometry;_.bitangentLocal;_.bitangentView;_.bitangentWorld;_.bitcast;_.blendBurn;_.blendColor;_.blendDodge;_.blendOverlay;_.blendScreen;_.blur;_.bool;_.buffer;_.bufferAttribute;_.bumpMap;_.burn;_.builtin;_.bvec2;_.bvec3;_.bvec4;_.bypass;_.cache;_.call;_.cameraFar;_.cameraIndex;_.cameraNear;_.cameraNormalMatrix;_.cameraPosition;_.cameraProjectionMatrix;_.cameraProjectionMatrixInverse;_.cameraViewMatrix;_.cameraViewport;_.cameraWorldMatrix;_.cbrt;_.cdl;_.ceil;_.checker;_.cineonToneMapping;_.clamp;_.clearcoat;_.clearcoatNormalView;_.clearcoatRoughness;_.code;_.color;_.colorSpaceToWorking;_.colorToDirection;_.compute;_.computeKernel;_.computeSkinning;_.context;_.convert;_.convertColorSpace;_.convertToTexture;const mG=_.cos;_.cross;_.cubeTexture;_.cubeTextureBase;_.cubeToUV;_.dFdx;_.dFdy;_.dashSize;_.debug;_.decrement;_.decrementBefore;_.defaultBuildStages;_.defaultShaderStages;_.defined;_.degrees;_.deltaTime;_.densityFog;_.densityFogFactor;_.depth;_.depthPass;_.determinant;_.difference;_.diffuseColor;_.directPointLight;_.directionToColor;_.directionToFaceDirection;_.dispersion;_.distance;_.div;_.dodge;_.dot;_.drawIndex;_.dynamicBufferAttribute;_.element;_.emissive;_.equal;_.equals;_.equirectUV;const gG=_.exp;_.exp2;_.expression;_.faceDirection;_.faceForward;_.faceforward;const xG=_.float;_.floatBitsToInt;_.floatBitsToUint;_.floor;_.fog;_.fract;_.frameGroup;_.frameId;_.frontFacing;_.fwidth;_.gain;_.gapSize;_.getConstNodeType;_.getCurrentStack;_.getDirection;_.getDistanceAttenuation;_.getGeometryRoughness;_.getNormalFromDepth;_.interleavedGradientNoise;_.getParallaxCorrectNormal;_.getRoughness;_.getScreenPosition;_.getShIrradianceAt;_.getShadowMaterial;_.getShadowRenderObjectFunction;_.getTextureIndex;_.getViewPosition;_.globalId;_.glsl;_.glslFn;_.grayscale;_.greaterThan;_.greaterThanEqual;_.hash;_.highpModelNormalViewMatrix;_.highpModelViewMatrix;_.hue;_.increment;_.incrementBefore;_.instance;const _G=_.instanceIndex;_.instancedArray;_.instancedBufferAttribute;_.instancedDynamicBufferAttribute;_.instancedMesh;_.int;_.intBitsToFloat;_.inverse;_.inverseSqrt;_.inversesqrt;_.invocationLocalIndex;_.invocationSubgroupIndex;_.ior;_.iridescence;_.iridescenceIOR;_.iridescenceThickness;_.ivec2;_.ivec3;_.ivec4;_.js;_.label;_.length;_.lengthSq;_.lessThan;_.lessThanEqual;_.lightPosition;_.lightProjectionUV;_.lightShadowMatrix;_.lightTargetDirection;_.lightTargetPosition;_.lightViewPosition;_.lightingContext;_.lights;_.linearDepth;_.linearToneMapping;_.localId;_.log;_.log2;_.logarithmicDepthToViewZ;_.luminance;_.mat2;_.mat3;_.mat4;_.matcapUV;_.materialAO;_.materialAlphaTest;_.materialAnisotropy;_.materialAnisotropyVector;_.materialAttenuationColor;_.materialAttenuationDistance;_.materialClearcoat;_.materialClearcoatNormal;_.materialClearcoatRoughness;_.materialColor;_.materialDispersion;_.materialEmissive;_.materialEnvIntensity;_.materialEnvRotation;_.materialIOR;_.materialIridescence;_.materialIridescenceIOR;_.materialIridescenceThickness;_.materialLightMap;_.materialLineDashOffset;_.materialLineDashSize;_.materialLineGapSize;_.materialLineScale;_.materialLineWidth;_.materialMetalness;_.materialNormal;_.materialOpacity;_.materialPointSize;_.materialReference;_.materialReflectivity;_.materialRefractionRatio;_.materialRotation;_.materialRoughness;_.materialSheen;_.materialSheenRoughness;_.materialShininess;_.materialSpecular;_.materialSpecularColor;_.materialSpecularIntensity;_.materialSpecularStrength;_.materialThickness;_.materialTransmission;_.max;_.maxMipLevel;_.mediumpModelViewMatrix;_.metalness;_.min;_.mix;_.mixElement;_.mod;_.modInt;_.modelDirection;_.modelNormalMatrix;_.modelPosition;_.modelRadius;_.modelScale;_.modelViewMatrix;_.modelViewPosition;_.modelViewProjection;_.modelWorldMatrix;_.modelWorldMatrixInverse;_.morphReference;_.mrt;_.mul;_.mx_aastep;_.mx_add;_.mx_atan2;_.mx_cell_noise_float;_.mx_contrast;_.mx_divide;_.mx_fractal_noise_float;_.mx_fractal_noise_vec2;_.mx_fractal_noise_vec3;_.mx_fractal_noise_vec4;_.mx_frame;_.mx_heighttonormal;_.mx_hsvtorgb;_.mx_ifequal;_.mx_ifgreater;_.mx_ifgreatereq;_.mx_invert;_.mx_modulo;_.mx_multiply;_.mx_noise_float;_.mx_noise_vec3;_.mx_noise_vec4;_.mx_place2d;_.mx_power;_.mx_ramp4;_.mx_ramplr;_.mx_ramptb;_.mx_rgbtohsv;_.mx_rotate2d;_.mx_rotate3d;_.mx_safepower;_.mx_separate;_.mx_splitlr;_.mx_splittb;_.mx_srgb_texture_to_lin_rec709;_.mx_subtract;_.mx_timer;_.mx_transform_uv;_.mx_unifiednoise2d;_.mx_unifiednoise3d;_.mx_worley_noise_float;_.mx_worley_noise_vec2;_.mx_worley_noise_vec3;const yG=_.negate;_.neutralToneMapping;_.nodeArray;_.nodeImmutable;_.nodeObject;_.nodeObjectIntent;_.nodeObjects;_.nodeProxy;_.nodeProxyIntent;_.normalFlat;_.normalGeometry;_.normalLocal;_.normalMap;_.normalView;_.normalViewGeometry;_.normalWorld;_.normalWorldGeometry;_.normalize;_.not;_.notEqual;_.numWorkgroups;_.objectDirection;_.objectGroup;_.objectPosition;_.objectRadius;_.objectScale;_.objectViewPosition;_.objectWorldMatrix;_.OnBeforeObjectUpdate;_.OnBeforeMaterialUpdate;_.OnObjectUpdate;_.OnMaterialUpdate;_.oneMinus;_.or;_.orthographicDepthToViewZ;_.oscSawtooth;_.oscSine;_.oscSquare;_.oscTriangle;_.output;_.outputStruct;_.overlay;_.overloadingFn;_.parabola;_.parallaxDirection;_.parallaxUV;_.parameter;_.pass;_.passTexture;_.pcurve;_.perspectiveDepthToViewZ;_.pmremTexture;_.pointShadow;_.pointUV;_.pointWidth;_.positionGeometry;_.positionLocal;_.positionPrevious;_.positionView;_.positionViewDirection;_.positionWorld;_.positionWorldDirection;_.posterize;_.pow;_.pow2;_.pow3;_.pow4;_.premultiplyAlpha;_.property;_.radians;_.rand;_.range;_.rangeFog;_.rangeFogFactor;_.reciprocal;_.reference;_.referenceBuffer;_.reflect;_.reflectVector;_.reflectView;_.reflector;_.refract;_.refractVector;_.refractView;_.reinhardToneMapping;_.remap;_.remapClamp;_.renderGroup;_.renderOutput;_.rendererReference;_.rotate;_.rotateUV;_.roughness;_.round;_.rtt;_.sRGBTransferEOTF;_.sRGBTransferOETF;_.sample;_.sampler;_.samplerComparison;_.saturate;_.saturation;_.screen;_.screenCoordinate;_.screenDPR;_.screenSize;_.screenUV;_.scriptable;_.scriptableValue;_.select;_.setCurrentStack;_.setName;_.shaderStages;_.shadow;_.shadowPositionWorld;_.shapeCircle;_.sharedUniformGroup;_.sheen;_.sheenRoughness;_.shiftLeft;_.shiftRight;_.shininess;_.sign;const bG=_.sin;_.sinc;_.skinning;_.smoothstep;_.smoothstepElement;_.specularColor;_.specularF90;_.spherizeUV;_.split;_.spritesheetUV;const vG=_.sqrt;_.stack;_.step;_.stepElement;const SG=_.storage;_.storageBarrier;_.storageObject;_.storageTexture;_.string;_.struct;_.sub;_.subgroupAdd;_.subgroupAll;_.subgroupAnd;_.subgroupAny;_.subgroupBallot;_.subgroupBroadcast;_.subgroupBroadcastFirst;_.subBuild;_.subgroupElect;_.subgroupExclusiveAdd;_.subgroupExclusiveMul;_.subgroupInclusiveAdd;_.subgroupInclusiveMul;_.subgroupIndex;_.subgroupMax;_.subgroupMin;_.subgroupMul;_.subgroupOr;_.subgroupShuffle;_.subgroupShuffleDown;_.subgroupShuffleUp;_.subgroupShuffleXor;_.subgroupSize;_.subgroupXor;_.tan;_.tangentGeometry;_.tangentLocal;_.tangentView;_.tangentWorld;_.texture;_.texture3D;_.textureBarrier;_.textureBicubic;_.textureBicubicLevel;_.textureCubeUV;_.textureLoad;_.textureSize;_.textureLevel;_.textureStore;_.thickness;_.time;_.toneMapping;_.toneMappingExposure;_.toonOutlinePass;_.transformDirection;_.transformNormal;_.transformNormalToView;_.transformedClearcoatNormalView;_.transformedNormalView;_.transformedNormalWorld;_.transmission;_.transpose;_.triNoise3D;_.triplanarTexture;_.triplanarTextures;_.trunc;_.uint;_.uintBitsToFloat;const TG=_.uniform;_.uniformArray;_.uniformCubeTexture;_.uniformGroup;_.uniformFlow;_.uniformTexture;_.unpremultiplyAlpha;_.userData;_.uv;_.uvec2;_.uvec3;_.uvec4;_.varying;_.varyingProperty;_.vec2;_.vec3;_.vec4;_.vectorComponents;_.velocity;_.vertexColor;_.vertexIndex;_.vertexStage;_.vibrance;_.viewZToLogarithmicDepth;_.viewZToOrthographicDepth;_.viewZToPerspectiveDepth;_.viewport;_.viewportCoordinate;_.viewportDepthTexture;_.viewportLinearDepth;_.viewportMipTexture;_.viewportResolution;_.viewportSafeUV;_.viewportSharedTexture;_.viewportSize;_.viewportTexture;_.viewportUV;_.wgsl;_.wgslFn;_.workgroupArray;_.workgroupBarrier;_.workgroupId;_.workingToColorSpace;_.xor;const w_=new Hr,Ju=new P;class dM extends GE{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";const e=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],t=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],n=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(n),this.setAttribute("position",new Dt(e,3)),this.setAttribute("uv",new Dt(t,2))}applyMatrix4(e){const t=this.attributes.instanceStart,n=this.attributes.instanceEnd;return t!==void 0&&(t.applyMatrix4(e),n.applyMatrix4(e),t.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const n=new Sh(t,6,1);return this.setAttribute("instanceStart",new Ds(n,3,0)),this.setAttribute("instanceEnd",new Ds(n,3,3)),this.instanceCount=this.attributes.instanceStart.count,this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const n=new Sh(t,6,1);return this.setAttribute("instanceColorStart",new Ds(n,3,0)),this.setAttribute("instanceColorEnd",new Ds(n,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new gE(e.geometry)),this}fromLineSegments(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Hr);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;e!==void 0&&t!==void 0&&(this.boundingBox.setFromBufferAttribute(e),w_.setFromBufferAttribute(t),this.boundingBox.union(w_))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Wr),this.boundingBox===null&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(e!==void 0&&t!==void 0){const n=this.boundingSphere.center;this.boundingBox.getCenter(n);let i=0;for(let r=0,o=e.count;r<o;r++)Ju.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(Ju)),Ju.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(Ju));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}}Ne.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new oe(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}};fi.line={uniforms:Wh.merge([Ne.common,Ne.fog,Ne.line]),vertexShader:`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
				vUv = uv;

			#endif

			float aspect = resolution.x / resolution.y;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			#ifdef WORLD_UNITS

				worldStart = start.xyz;
				worldEnd = end.xyz;

			#else

				vUv = uv;

			#endif

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );
				vec3 worldUp = normalize( cross( worldDir, tmpFwd ) );
				vec3 worldFwd = cross( worldDir, worldUp );
				worldPos = position.y < 0.5 ? start: end;

				// height offset
				float hw = linewidth * 0.5;
				worldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// cap extension
					worldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;

					// add width to the box
					worldPos.xyz += worldFwd * hw;

					// endcaps
					if ( position.y > 1.0 || position.y < 0.0 ) {

						worldPos.xyz -= worldFwd * 2.0 * hw;

					}

				#endif

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segments overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

				vec2 offset = vec2( dir.y, - dir.x );
				// undo aspect ratio adjustment
				dir.x /= aspect;
				offset.x /= aspect;

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				// endcaps
				if ( position.y < 0.0 ) {

					offset += - dir;

				} else if ( position.y > 1.0 ) {

					offset += dir;

				}

				// adjust for linewidth
				offset *= linewidth;

				// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
				offset /= resolution.y;

				// select end
				vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

				// back to clip space
				offset *= clip.w;

				clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			float alpha = opacity;
			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef USE_ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

				#endif

			#else

				#ifdef USE_ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

					if ( abs( vUv.y ) > 1.0 ) {

						float a = vUv.x;
						float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
						float len2 = a * a + b * b;

						if ( len2 > 1.0 ) discard;

					}

				#endif

			#endif

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};class fM extends Zi{constructor(e){super({type:"LineMaterial",uniforms:Wh.clone(fi.line.uniforms),vertexShader:fi.line.vertexShader,fragmentShader:fi.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,this.setValues(e)}get color(){return this.uniforms.diffuse.value}set color(e){this.uniforms.diffuse.value=e}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(e){e===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(e){this.uniforms.linewidth&&(this.uniforms.linewidth.value=e)}get dashed(){return"USE_DASH"in this.defines}set dashed(e){e===!0!==this.dashed&&(this.needsUpdate=!0),e===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(e){this.uniforms.dashScale.value=e}get dashSize(){return this.uniforms.dashSize.value}set dashSize(e){this.uniforms.dashSize.value=e}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(e){this.uniforms.dashOffset.value=e}get gapSize(){return this.uniforms.gapSize.value}set gapSize(e){this.uniforms.gapSize.value=e}get opacity(){return this.uniforms.opacity.value}set opacity(e){this.uniforms&&(this.uniforms.opacity.value=e)}get resolution(){return this.uniforms.resolution.value}set resolution(e){this.uniforms.resolution.value.copy(e)}get alphaToCoverage(){return"USE_ALPHA_TO_COVERAGE"in this.defines}set alphaToCoverage(e){this.defines&&(e===!0!==this.alphaToCoverage&&(this.needsUpdate=!0),e===!0?this.defines.USE_ALPHA_TO_COVERAGE="":delete this.defines.USE_ALPHA_TO_COVERAGE)}}const Gf=new Ke,R_=new P,N_=new P,zn=new Ke,kn=new Ke,As=new Ke,zf=new P,kf=new ht,Hn=new WE,C_=new P,eh=new Hr,th=new Wr,ws=new Ke;let Ps,Mo;function P_(s,e,t){return ws.set(0,0,-e,1).applyMatrix4(s.projectionMatrix),ws.multiplyScalar(1/ws.w),ws.x=Mo/t.width,ws.y=Mo/t.height,ws.applyMatrix4(s.projectionMatrixInverse),ws.multiplyScalar(1/ws.w),Math.abs(Math.max(ws.x,ws.y))}function s4(s,e){const t=s.matrixWorld,n=s.geometry,i=n.attributes.instanceStart,r=n.attributes.instanceEnd,o=Math.min(n.instanceCount,i.count);for(let a=0,c=o;a<c;a++){Hn.start.fromBufferAttribute(i,a),Hn.end.fromBufferAttribute(r,a),Hn.applyMatrix4(t);const l=new P,u=new P;Ps.distanceSqToSegment(Hn.start,Hn.end,u,l),u.distanceTo(l)<Mo*.5&&e.push({point:u,pointOnLine:l,distance:Ps.origin.distanceTo(u),object:s,face:null,faceIndex:a,uv:null,uv1:null})}}function r4(s,e,t){const n=e.projectionMatrix,r=s.material.resolution,o=s.matrixWorld,a=s.geometry,c=a.attributes.instanceStart,l=a.attributes.instanceEnd,u=Math.min(a.instanceCount,c.count),h=-e.near;Ps.at(1,As),As.w=1,As.applyMatrix4(e.matrixWorldInverse),As.applyMatrix4(n),As.multiplyScalar(1/As.w),As.x*=r.x/2,As.y*=r.y/2,As.z=0,zf.copy(As),kf.multiplyMatrices(e.matrixWorldInverse,o);for(let d=0,f=u;d<f;d++){if(zn.fromBufferAttribute(c,d),kn.fromBufferAttribute(l,d),zn.w=1,kn.w=1,zn.applyMatrix4(kf),kn.applyMatrix4(kf),zn.z>h&&kn.z>h)continue;if(zn.z>h){const y=zn.z-kn.z,v=(zn.z-h)/y;zn.lerp(kn,v)}else if(kn.z>h){const y=kn.z-zn.z,v=(kn.z-h)/y;kn.lerp(zn,v)}zn.applyMatrix4(n),kn.applyMatrix4(n),zn.multiplyScalar(1/zn.w),kn.multiplyScalar(1/kn.w),zn.x*=r.x/2,zn.y*=r.y/2,kn.x*=r.x/2,kn.y*=r.y/2,Hn.start.copy(zn),Hn.start.z=0,Hn.end.copy(kn),Hn.end.z=0;const x=Hn.closestPointToPointParameter(zf,!0);Hn.at(x,C_);const g=ec.lerp(zn.z,kn.z,x),m=g>=-1&&g<=1,b=zf.distanceTo(C_)<Mo*.5;if(m&&b){Hn.start.fromBufferAttribute(c,d),Hn.end.fromBufferAttribute(l,d),Hn.start.applyMatrix4(o),Hn.end.applyMatrix4(o);const y=new P,v=new P;Ps.distanceSqToSegment(Hn.start,Hn.end,v,y),t.push({point:v,pointOnLine:y,distance:Ps.origin.distanceTo(v),object:s,face:null,faceIndex:d,uv:null,uv1:null})}}}class o4 extends Vn{constructor(e=new dM,t=new fM({color:Math.random()*16777215})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,n=e.attributes.instanceEnd,i=new Float32Array(2*t.count);for(let o=0,a=0,c=t.count;o<c;o++,a+=2)R_.fromBufferAttribute(t,o),N_.fromBufferAttribute(n,o),i[a]=a===0?0:i[a-1],i[a+1]=i[a]+R_.distanceTo(N_);const r=new Sh(i,2,1);return e.setAttribute("instanceDistanceStart",new Ds(r,1,0)),e.setAttribute("instanceDistanceEnd",new Ds(r,1,1)),this}raycast(e,t){const n=this.material.worldUnits,i=e.camera;i===null&&!n&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const r=e.params.Line2!==void 0&&e.params.Line2.threshold||0;Ps=e.ray;const o=this.matrixWorld,a=this.geometry,c=this.material;Mo=c.linewidth+r,a.boundingSphere===null&&a.computeBoundingSphere(),th.copy(a.boundingSphere).applyMatrix4(o);let l;if(n)l=Mo*.5;else{const h=Math.max(i.near,th.distanceToPoint(Ps.origin));l=P_(i,h,c.resolution)}if(th.radius+=l,Ps.intersectsSphere(th)===!1)return;a.boundingBox===null&&a.computeBoundingBox(),eh.copy(a.boundingBox).applyMatrix4(o);let u;if(n)u=Mo*.5;else{const h=Math.max(i.near,eh.distanceToPoint(Ps.origin));u=P_(i,h,c.resolution)}eh.expandByScalar(u),Ps.intersectsBox(eh)!==!1&&(n?s4(this,t):r4(this,i,t))}onBeforeRender(e){const t=this.material.uniforms;t&&t.resolution&&(e.getViewport(Gf),this.material.uniforms.resolution.value.set(Gf.z,Gf.w))}}class a4 extends dM{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){const t=e.length-3,n=new Float32Array(2*t);for(let i=0;i<t;i+=3)n[2*i]=e[i],n[2*i+1]=e[i+1],n[2*i+2]=e[i+2],n[2*i+3]=e[i+3],n[2*i+4]=e[i+4],n[2*i+5]=e[i+5];return super.setPositions(n),this}setColors(e){const t=e.length-3,n=new Float32Array(2*t);for(let i=0;i<t;i+=3)n[2*i]=e[i],n[2*i+1]=e[i+1],n[2*i+2]=e[i+2],n[2*i+3]=e[i+3],n[2*i+4]=e[i+4],n[2*i+5]=e[i+5];return super.setColors(n),this}setFromPoints(e){const t=e.length-1,n=new Float32Array(6*t);for(let i=0;i<t;i++)n[6*i]=e[i].x,n[6*i+1]=e[i].y,n[6*i+2]=e[i].z||0,n[6*i+3]=e[i+1].x,n[6*i+4]=e[i+1].y,n[6*i+5]=e[i+1].z||0;return super.setPositions(n),this}fromLine(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}}class MG extends o4{constructor(e=new a4,t=new fM({color:Math.random()*16777215})){super(e,t),this.isLine2=!0,this.type="Line2"}}class EG extends hm{constructor(e,t={}){const n=t.font;if(n===void 0)super();else{const i=n.generateShapes(e,t.size,t.direction);t.depth===void 0&&(t.depth=50),t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),super(i,t)}this.type="TextGeometry"}}class AG{constructor(e){this.isFont=!0,this.type="Font",this.data=e}generateShapes(e,t=100,n="ltr"){const i=[],r=c4(e,t,this.data,n);for(let o=0,a=r.length;o<a;o++)i.push(...r[o].toShapes());return i}}function c4(s,e,t,n){const i=Array.from(s),r=e/t.resolution,o=(t.boundingBox.yMax-t.boundingBox.yMin+t.underlineThickness)*r,a=[];let c=0,l=0;(n=="rtl"||n=="tb")&&i.reverse();for(let u=0;u<i.length;u++){const h=i[u];if(h===`
`)c=0,l-=o;else{const d=l4(h,r,c,l,t);n=="tb"?(c=0,l+=t.ascender*r):c+=d.offsetX,a.push(d.path)}}return a}function l4(s,e,t,n,i){const r=i.glyphs[s]||i.glyphs["?"];if(!r){console.error('THREE.Font: character "'+s+'" does not exists in font family '+i.familyName+".");return}const o=new $E;let a,c,l,u,h,d,f,p;if(r.o){const x=r._cachedOutline||(r._cachedOutline=r.o.split(" "));for(let g=0,m=x.length;g<m;)switch(x[g++]){case"m":a=x[g++]*e+t,c=x[g++]*e+n,o.moveTo(a,c);break;case"l":a=x[g++]*e+t,c=x[g++]*e+n,o.lineTo(a,c);break;case"q":l=x[g++]*e+t,u=x[g++]*e+n,h=x[g++]*e+t,d=x[g++]*e+n,o.quadraticCurveTo(h,d,l,u);break;case"b":l=x[g++]*e+t,u=x[g++]*e+n,h=x[g++]*e+t,d=x[g++]*e+n,f=x[g++]*e+t,p=x[g++]*e+n,o.bezierCurveTo(h,d,f,p,l,u);break}}return{offsetX:r.ha*e,path:o}}const Hf={type:"change"},zg={type:"start"},kg={type:"end"},L_=1e-6,It={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4},nh=new oe,Er=new oe,u4=new P,ih=new P,Wf=new P,da=new ds,D_=new P,sh=new P,$f=new P,rh=new P;class wG extends gm{constructor(e,t=null){super(e,t),this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:ji.ROTATE,MIDDLE:ji.DOLLY,RIGHT:ji.PAN},this.target=new P,this.state=It.NONE,this.keyState=It.NONE,this._lastPosition=new P,this._lastZoom=1,this._touchZoomDistanceStart=0,this._touchZoomDistanceEnd=0,this._lastAngle=0,this._eye=new P,this._movePrev=new oe,this._moveCurr=new oe,this._lastAxis=new P,this._zoomStart=new oe,this._zoomEnd=new oe,this._panStart=new oe,this._panEnd=new oe,this._pointers=[],this._pointerPositions={},this._onPointerMove=d4.bind(this),this._onPointerDown=h4.bind(this),this._onPointerUp=f4.bind(this),this._onPointerCancel=p4.bind(this),this._onContextMenu=v4.bind(this),this._onMouseWheel=b4.bind(this),this._onKeyDown=g4.bind(this),this._onKeyUp=m4.bind(this),this._onTouchStart=S4.bind(this),this._onTouchMove=T4.bind(this),this._onTouchEnd=M4.bind(this),this._onMouseDown=x4.bind(this),this._onMouseMove=_4.bind(this),this._onMouseUp=y4.bind(this),this._target0=this.target.clone(),this._position0=this.object.position.clone(),this._up0=this.object.up.clone(),this._zoom0=this.object.zoom,t!==null&&(this.connect(t),this.handleResize()),this.update()}connect(e){super.connect(e),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}handleResize(){const e=this.domElement.getBoundingClientRect(),t=this.domElement.ownerDocument.documentElement;this.screen.left=e.left+window.pageXOffset-t.clientLeft,this.screen.top=e.top+window.pageYOffset-t.clientTop,this.screen.width=e.width,this.screen.height=e.height}update(){this._eye.subVectors(this.object.position,this.target),this.noRotate||this._rotateCamera(),this.noZoom||this._zoomCamera(),this.noPan||this._panCamera(),this.object.position.addVectors(this.target,this._eye),this.object.isPerspectiveCamera?(this._checkDistances(),this.object.lookAt(this.target),this._lastPosition.distanceToSquared(this.object.position)>L_&&(this.dispatchEvent(Hf),this._lastPosition.copy(this.object.position))):this.object.isOrthographicCamera?(this.object.lookAt(this.target),(this._lastPosition.distanceToSquared(this.object.position)>L_||this._lastZoom!==this.object.zoom)&&(this.dispatchEvent(Hf),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type.")}reset(){this.state=It.NONE,this.keyState=It.NONE,this.target.copy(this._target0),this.object.position.copy(this._position0),this.object.up.copy(this._up0),this.object.zoom=this._zoom0,this.object.updateProjectionMatrix(),this._eye.subVectors(this.object.position,this.target),this.object.lookAt(this.target),this.dispatchEvent(Hf),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom}_panCamera(){if(Er.copy(this._panEnd).sub(this._panStart),Er.lengthSq()){if(this.object.isOrthographicCamera){const e=(this.object.right-this.object.left)/this.object.zoom/this.domElement.clientWidth,t=(this.object.top-this.object.bottom)/this.object.zoom/this.domElement.clientWidth;Er.x*=e,Er.y*=t}Er.multiplyScalar(this._eye.length()*this.panSpeed),ih.copy(this._eye).cross(this.object.up).setLength(Er.x),ih.add(u4.copy(this.object.up).setLength(Er.y)),this.object.position.add(ih),this.target.add(ih),this.staticMoving?this._panStart.copy(this._panEnd):this._panStart.add(Er.subVectors(this._panEnd,this._panStart).multiplyScalar(this.dynamicDampingFactor))}}_rotateCamera(){rh.set(this._moveCurr.x-this._movePrev.x,this._moveCurr.y-this._movePrev.y,0);let e=rh.length();e?(this._eye.copy(this.object.position).sub(this.target),D_.copy(this._eye).normalize(),sh.copy(this.object.up).normalize(),$f.crossVectors(sh,D_).normalize(),sh.setLength(this._moveCurr.y-this._movePrev.y),$f.setLength(this._moveCurr.x-this._movePrev.x),rh.copy(sh.add($f)),Wf.crossVectors(rh,this._eye).normalize(),e*=this.rotateSpeed,da.setFromAxisAngle(Wf,e),this._eye.applyQuaternion(da),this.object.up.applyQuaternion(da),this._lastAxis.copy(Wf),this._lastAngle=e):!this.staticMoving&&this._lastAngle&&(this._lastAngle*=Math.sqrt(1-this.dynamicDampingFactor),this._eye.copy(this.object.position).sub(this.target),da.setFromAxisAngle(this._lastAxis,this._lastAngle),this._eye.applyQuaternion(da),this.object.up.applyQuaternion(da)),this._movePrev.copy(this._moveCurr)}_zoomCamera(){let e;this.state===It.TOUCH_ZOOM_PAN?(e=this._touchZoomDistanceStart/this._touchZoomDistanceEnd,this._touchZoomDistanceStart=this._touchZoomDistanceEnd,this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=ec.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(e=1+(this._zoomEnd.y-this._zoomStart.y)*this.zoomSpeed,e!==1&&e>0&&(this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=ec.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),this.staticMoving?this._zoomStart.copy(this._zoomEnd):this._zoomStart.y+=(this._zoomEnd.y-this._zoomStart.y)*this.dynamicDampingFactor)}_getMouseOnScreen(e,t){return nh.set((e-this.screen.left)/this.screen.width,(t-this.screen.top)/this.screen.height),nh}_getMouseOnCircle(e,t){return nh.set((e-this.screen.width*.5-this.screen.left)/(this.screen.width*.5),(this.screen.height+2*(this.screen.top-t))/this.screen.width),nh}_addPointer(e){this._pointers.push(e)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t].pointerId==e.pointerId){this._pointers.splice(t,1);return}}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new oe,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0].pointerId?this._pointers[1]:this._pointers[0];return this._pointerPositions[t.pointerId]}_checkDistances(){(!this.noZoom||!this.noPan)&&(this._eye.lengthSq()>this.maxDistance*this.maxDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.maxDistance)),this._zoomStart.copy(this._zoomEnd)),this._eye.lengthSq()<this.minDistance*this.minDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.minDistance)),this._zoomStart.copy(this._zoomEnd)))}}function h4(s){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._addPointer(s),s.pointerType==="touch"?this._onTouchStart(s):this._onMouseDown(s))}function d4(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchMove(s):this._onMouseMove(s))}function f4(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchEnd(s):this._onMouseUp(),this._removePointer(s),this._pointers.length===0&&(this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp)))}function p4(s){this._removePointer(s)}function m4(){this.enabled!==!1&&(this.keyState=It.NONE,window.addEventListener("keydown",this._onKeyDown))}function g4(s){this.enabled!==!1&&(window.removeEventListener("keydown",this._onKeyDown),this.keyState===It.NONE&&(s.code===this.keys[It.ROTATE]&&!this.noRotate?this.keyState=It.ROTATE:s.code===this.keys[It.ZOOM]&&!this.noZoom?this.keyState=It.ZOOM:s.code===this.keys[It.PAN]&&!this.noPan&&(this.keyState=It.PAN)))}function x4(s){let e;switch(s.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case ji.DOLLY:this.state=It.ZOOM;break;case ji.ROTATE:this.state=It.ROTATE;break;case ji.PAN:this.state=It.PAN;break;default:this.state=It.NONE}const t=this.keyState!==It.NONE?this.keyState:this.state;t===It.ROTATE&&!this.noRotate?(this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY)),this._movePrev.copy(this._moveCurr)):t===It.ZOOM&&!this.noZoom?(this._zoomStart.copy(this._getMouseOnScreen(s.pageX,s.pageY)),this._zoomEnd.copy(this._zoomStart)):t===It.PAN&&!this.noPan&&(this._panStart.copy(this._getMouseOnScreen(s.pageX,s.pageY)),this._panEnd.copy(this._panStart)),this.dispatchEvent(zg)}function _4(s){const e=this.keyState!==It.NONE?this.keyState:this.state;e===It.ROTATE&&!this.noRotate?(this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY))):e===It.ZOOM&&!this.noZoom?this._zoomEnd.copy(this._getMouseOnScreen(s.pageX,s.pageY)):e===It.PAN&&!this.noPan&&this._panEnd.copy(this._getMouseOnScreen(s.pageX,s.pageY))}function y4(){this.state=It.NONE,this.dispatchEvent(kg)}function b4(s){if(this.enabled!==!1&&this.noZoom!==!0){switch(s.preventDefault(),s.deltaMode){case 2:this._zoomStart.y-=s.deltaY*.025;break;case 1:this._zoomStart.y-=s.deltaY*.01;break;default:this._zoomStart.y-=s.deltaY*25e-5;break}this.dispatchEvent(zg),this.dispatchEvent(kg)}}function v4(s){this.enabled!==!1&&s.preventDefault()}function S4(s){switch(this._trackPointer(s),this._pointers.length){case 1:this.state=It.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(this._pointers[0].pageX,this._pointers[0].pageY)),this._movePrev.copy(this._moveCurr);break;default:this.state=It.TOUCH_ZOOM_PAN;const e=this._pointers[0].pageX-this._pointers[1].pageX,t=this._pointers[0].pageY-this._pointers[1].pageY;this._touchZoomDistanceEnd=this._touchZoomDistanceStart=Math.sqrt(e*e+t*t);const n=(this._pointers[0].pageX+this._pointers[1].pageX)/2,i=(this._pointers[0].pageY+this._pointers[1].pageY)/2;this._panStart.copy(this._getMouseOnScreen(n,i)),this._panEnd.copy(this._panStart);break}this.dispatchEvent(zg)}function T4(s){switch(this._trackPointer(s),this._pointers.length){case 1:this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY));break;default:const e=this._getSecondPointerPosition(s),t=s.pageX-e.x,n=s.pageY-e.y;this._touchZoomDistanceEnd=Math.sqrt(t*t+n*n);const i=(s.pageX+e.x)/2,r=(s.pageY+e.y)/2;this._panEnd.copy(this._getMouseOnScreen(i,r));break}}function M4(s){switch(this._pointers.length){case 0:this.state=It.NONE;break;case 1:this.state=It.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY)),this._movePrev.copy(this._moveCurr);break;case 2:this.state=It.TOUCH_ZOOM_PAN;for(let e=0;e<this._pointers.length;e++)if(this._pointers[e].pointerId!==s.pointerId){const t=this._pointerPositions[this._pointers[e].pointerId];this._moveCurr.copy(this._getMouseOnCircle(t.x,t.y)),this._movePrev.copy(this._moveCurr);break}break}this.dispatchEvent(kg)}const U_={type:"change"},Hg={type:"start"},pM={type:"end"},oh=new Fl,I_=new Rs,E4=Math.cos(70*ec.DEG2RAD),Cn=new P,hi=2*Math.PI,Ht={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},Xf=1e-6;class RG extends gm{constructor(e,t=null){super(e,t),this.state=Ht.NONE,this.target=new P,this.cursor=new P,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:ji.ROTATE,MIDDLE:ji.DOLLY,RIGHT:ji.PAN},this.touches={ONE:ma.ROTATE,TWO:ma.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new P,this._lastQuaternion=new ds,this._lastTargetPosition=new P,this._quat=new ds().setFromUnitVectors(e.up,new P(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new D0,this._sphericalDelta=new D0,this._scale=1,this._panOffset=new P,this._rotateStart=new oe,this._rotateEnd=new oe,this._rotateDelta=new oe,this._panStart=new oe,this._panEnd=new oe,this._panDelta=new oe,this._dollyStart=new oe,this._dollyEnd=new oe,this._dollyDelta=new oe,this._dollyDirection=new P,this._mouse=new oe,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=w4.bind(this),this._onPointerDown=A4.bind(this),this._onPointerUp=R4.bind(this),this._onContextMenu=I4.bind(this),this._onMouseWheel=P4.bind(this),this._onKeyDown=L4.bind(this),this._onTouchStart=D4.bind(this),this._onTouchMove=U4.bind(this),this._onMouseDown=N4.bind(this),this._onMouseMove=C4.bind(this),this._interceptControlDown=F4.bind(this),this._interceptControlUp=B4.bind(this),this.domElement!==null&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(U_),this.update(),this.state=Ht.NONE}update(e=null){const t=this.object.position;Cn.copy(t).sub(this.target),Cn.applyQuaternion(this._quat),this._spherical.setFromVector3(Cn),this.autoRotate&&this.state===Ht.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,i=this.maxAzimuthAngle;isFinite(n)&&isFinite(i)&&(n<-Math.PI?n+=hi:n>Math.PI&&(n-=hi),i<-Math.PI?i+=hi:i>Math.PI&&(i-=hi),n<=i?this._spherical.theta=Math.max(n,Math.min(i,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(n+i)/2?Math.max(n,this._spherical.theta):Math.min(i,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let r=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const o=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),r=o!=this._spherical.radius}if(Cn.setFromSpherical(this._spherical),Cn.applyQuaternion(this._quatInverse),t.copy(this.target).add(Cn),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let o=null;if(this.object.isPerspectiveCamera){const a=Cn.length();o=this._clampDistance(a*this._scale);const c=a-o;this.object.position.addScaledVector(this._dollyDirection,c),this.object.updateMatrixWorld(),r=!!c}else if(this.object.isOrthographicCamera){const a=new P(this._mouse.x,this._mouse.y,0);a.unproject(this.object);const c=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),r=c!==this.object.zoom;const l=new P(this._mouse.x,this._mouse.y,0);l.unproject(this.object),this.object.position.sub(l).add(a),this.object.updateMatrixWorld(),o=Cn.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;o!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(o).add(this.object.position):(oh.origin.copy(this.object.position),oh.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(oh.direction))<E4?this.object.lookAt(this.target):(I_.setFromNormalAndCoplanarPoint(this.object.up,this.target),oh.intersectPlane(I_,this.target))))}else if(this.object.isOrthographicCamera){const o=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),o!==this.object.zoom&&(this.object.updateProjectionMatrix(),r=!0)}return this._scale=1,this._performCursorZoom=!1,r||this._lastPosition.distanceToSquared(this.object.position)>Xf||8*(1-this._lastQuaternion.dot(this.object.quaternion))>Xf||this._lastTargetPosition.distanceToSquared(this.target)>Xf?(this.dispatchEvent(U_),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?hi/60*this.autoRotateSpeed*e:hi/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){Cn.setFromMatrixColumn(t,0),Cn.multiplyScalar(-e),this._panOffset.add(Cn)}_panUp(e,t){this.screenSpacePanning===!0?Cn.setFromMatrixColumn(t,1):(Cn.setFromMatrixColumn(t,0),Cn.crossVectors(this.object.up,Cn)),Cn.multiplyScalar(e),this._panOffset.add(Cn)}_pan(e,t){const n=this.domElement;if(this.object.isPerspectiveCamera){const i=this.object.position;Cn.copy(i).sub(this.target);let r=Cn.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*r/n.clientHeight,this.object.matrix),this._panUp(2*t*r/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const n=this.domElement.getBoundingClientRect(),i=e-n.left,r=t-n.top,o=n.width,a=n.height;this._mouse.x=i/o*2-1,this._mouse.y=-(r/a)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(hi*this._rotateDelta.x/t.clientHeight),this._rotateUp(hi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(hi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-hi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(hi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-hi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._rotateStart.set(n,i)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._panStart.set(n,i)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,i=e.pageY-t.y,r=Math.sqrt(n*n+i*i);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),i=.5*(e.pageX+n.x),r=.5*(e.pageY+n.y);this._rotateEnd.set(i,r)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(hi*this._rotateDelta.x/t.clientHeight),this._rotateUp(hi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._panEnd.set(n,i)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,i=e.pageY-t.y,r=Math.sqrt(n*n+i*i);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const o=(e.pageX+t.x)*.5,a=(e.pageY+t.y)*.5;this._updateZoomParameters(o,a)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new oe,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,n={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}}function A4(s){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(s)&&(this._addPointer(s),s.pointerType==="touch"?this._onTouchStart(s):this._onMouseDown(s)))}function w4(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchMove(s):this._onMouseMove(s))}function R4(s){switch(this._removePointer(s),this._pointers.length){case 0:this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(pM),this.state=Ht.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function N4(s){let e;switch(s.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case ji.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(s),this.state=Ht.DOLLY;break;case ji.ROTATE:if(s.ctrlKey||s.metaKey||s.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(s),this.state=Ht.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(s),this.state=Ht.ROTATE}break;case ji.PAN:if(s.ctrlKey||s.metaKey||s.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(s),this.state=Ht.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(s),this.state=Ht.PAN}break;default:this.state=Ht.NONE}this.state!==Ht.NONE&&this.dispatchEvent(Hg)}function C4(s){switch(this.state){case Ht.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(s);break;case Ht.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(s);break;case Ht.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(s);break}}function P4(s){this.enabled===!1||this.enableZoom===!1||this.state!==Ht.NONE||(s.preventDefault(),this.dispatchEvent(Hg),this._handleMouseWheel(this._customWheelEvent(s)),this.dispatchEvent(pM))}function L4(s){this.enabled!==!1&&this._handleKeyDown(s)}function D4(s){switch(this._trackPointer(s),this._pointers.length){case 1:switch(this.touches.ONE){case ma.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(s),this.state=Ht.TOUCH_ROTATE;break;case ma.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(s),this.state=Ht.TOUCH_PAN;break;default:this.state=Ht.NONE}break;case 2:switch(this.touches.TWO){case ma.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(s),this.state=Ht.TOUCH_DOLLY_PAN;break;case ma.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(s),this.state=Ht.TOUCH_DOLLY_ROTATE;break;default:this.state=Ht.NONE}break;default:this.state=Ht.NONE}this.state!==Ht.NONE&&this.dispatchEvent(Hg)}function U4(s){switch(this._trackPointer(s),this.state){case Ht.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(s),this.update();break;case Ht.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(s),this.update();break;case Ht.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(s),this.update();break;case Ht.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(s),this.update();break;default:this.state=Ht.NONE}}function I4(s){this.enabled!==!1&&s.preventDefault()}function F4(s){s.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function B4(s){s.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const O4={type:"change"},F_=1e-6,B_=new ds;class NG extends gm{constructor(e,t=null){super(e,t),this.movementSpeed=1,this.rollSpeed=.005,this.dragToLook=!1,this.autoForward=!1,this._moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},this._moveVector=new P(0,0,0),this._rotationVector=new P(0,0,0),this._lastQuaternion=new ds,this._lastPosition=new P,this._status=0,this._onKeyDown=V4.bind(this),this._onKeyUp=G4.bind(this),this._onPointerMove=k4.bind(this),this._onPointerDown=z4.bind(this),this._onPointerUp=H4.bind(this),this._onPointerCancel=W4.bind(this),this._onContextMenu=$4.bind(this),t!==null&&this.connect(t)}connect(e){super.connect(e),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("contextmenu",this._onContextMenu)}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("contextmenu",this._onContextMenu)}dispose(){this.disconnect()}update(e){if(this.enabled===!1)return;const t=this.object,n=e*this.movementSpeed,i=e*this.rollSpeed;t.translateX(this._moveVector.x*n),t.translateY(this._moveVector.y*n),t.translateZ(this._moveVector.z*n),B_.set(this._rotationVector.x*i,this._rotationVector.y*i,this._rotationVector.z*i,1).normalize(),t.quaternion.multiply(B_),(this._lastPosition.distanceToSquared(t.position)>F_||8*(1-this._lastQuaternion.dot(t.quaternion))>F_)&&(this.dispatchEvent(O4),this._lastQuaternion.copy(t.quaternion),this._lastPosition.copy(t.position))}_updateMovementVector(){const e=this._moveState.forward||this.autoForward&&!this._moveState.back?1:0;this._moveVector.x=-this._moveState.left+this._moveState.right,this._moveVector.y=-this._moveState.down+this._moveState.up,this._moveVector.z=-e+this._moveState.back}_updateRotationVector(){this._rotationVector.x=-this._moveState.pitchDown+this._moveState.pitchUp,this._rotationVector.y=-this._moveState.yawRight+this._moveState.yawLeft,this._rotationVector.z=-this._moveState.rollRight+this._moveState.rollLeft}_getContainerDimensions(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}}}function V4(s){if(!(s.altKey||this.enabled===!1)){switch(s.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=.1;break;case"KeyW":this._moveState.forward=1;break;case"KeyS":this._moveState.back=1;break;case"KeyA":this._moveState.left=1;break;case"KeyD":this._moveState.right=1;break;case"KeyR":this._moveState.up=1;break;case"KeyF":this._moveState.down=1;break;case"ArrowUp":this._moveState.pitchUp=1;break;case"ArrowDown":this._moveState.pitchDown=1;break;case"ArrowLeft":this._moveState.yawLeft=1;break;case"ArrowRight":this._moveState.yawRight=1;break;case"KeyQ":this._moveState.rollLeft=1;break;case"KeyE":this._moveState.rollRight=1;break}this._updateMovementVector(),this._updateRotationVector()}}function G4(s){if(this.enabled!==!1){switch(s.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=1;break;case"KeyW":this._moveState.forward=0;break;case"KeyS":this._moveState.back=0;break;case"KeyA":this._moveState.left=0;break;case"KeyD":this._moveState.right=0;break;case"KeyR":this._moveState.up=0;break;case"KeyF":this._moveState.down=0;break;case"ArrowUp":this._moveState.pitchUp=0;break;case"ArrowDown":this._moveState.pitchDown=0;break;case"ArrowLeft":this._moveState.yawLeft=0;break;case"ArrowRight":this._moveState.yawRight=0;break;case"KeyQ":this._moveState.rollLeft=0;break;case"KeyE":this._moveState.rollRight=0;break}this._updateMovementVector(),this._updateRotationVector()}}function z4(s){if(this.enabled!==!1)if(this.dragToLook)this._status++;else{switch(s.button){case 0:this._moveState.forward=1;break;case 2:this._moveState.back=1;break}this._updateMovementVector()}}function k4(s){if(this.enabled!==!1&&(!this.dragToLook||this._status>0)){const e=this._getContainerDimensions(),t=e.size[0]/2,n=e.size[1]/2;this._moveState.yawLeft=-(s.pageX-e.offset[0]-t)/t,this._moveState.pitchDown=(s.pageY-e.offset[1]-n)/n,this._updateRotationVector()}}function H4(s){if(this.enabled!==!1){if(this.dragToLook)this._status--,this._moveState.yawLeft=this._moveState.pitchDown=0;else{switch(s.button){case 0:this._moveState.forward=0;break;case 2:this._moveState.back=0;break}this._updateMovementVector()}this._updateRotationVector()}}function W4(){this.enabled!==!1&&(this.dragToLook?(this._status=0,this._moveState.yawLeft=this._moveState.pitchDown=0):(this._moveState.forward=0,this._moveState.back=0,this._updateMovementVector()),this._updateRotationVector())}function $4(s){this.enabled!==!1&&s.preventDefault()}const X4={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class Ed{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const q4=new Gl(-1,1,1,-1,0,1);class Y4 extends bn{constructor(){super(),this.setAttribute("position",new Dt([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Dt([0,2,0,0,2,0],2))}}const j4=new Y4;class K4{constructor(e){this._mesh=new Vn(j4,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,q4)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class Z4 extends Ed{constructor(e,t="tDiffuse"){super(),this.textureID=t,this.uniforms=null,this.material=null,e instanceof Zi?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=Wh.clone(e.uniforms),this.material=new Zi({name:e.name!==void 0?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this._fsQuad=new K4(this.material)}render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this._fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this._fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this._fsQuad.render(e))}dispose(){this.material.dispose(),this._fsQuad.dispose()}}class O_ extends Ed{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n){const i=e.getContext(),r=e.state;r.buffers.color.setMask(!1),r.buffers.depth.setMask(!1),r.buffers.color.setLocked(!0),r.buffers.depth.setLocked(!0);let o,a;this.inverse?(o=0,a=1):(o=1,a=0),r.buffers.stencil.setTest(!0),r.buffers.stencil.setOp(i.REPLACE,i.REPLACE,i.REPLACE),r.buffers.stencil.setFunc(i.ALWAYS,o,4294967295),r.buffers.stencil.setClear(a),r.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),r.buffers.color.setLocked(!1),r.buffers.depth.setLocked(!1),r.buffers.color.setMask(!0),r.buffers.depth.setMask(!0),r.buffers.stencil.setLocked(!1),r.buffers.stencil.setFunc(i.EQUAL,1,4294967295),r.buffers.stencil.setOp(i.KEEP,i.KEEP,i.KEEP),r.buffers.stencil.setLocked(!0)}}class Q4 extends Ed{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class CG{constructor(e,t){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),t===void 0){const n=e.getSize(new oe);this._width=n.width,this._height=n.height,t=new zr(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:hn}),t.texture.name="EffectComposer.rt1"}else this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new Z4(X4),this.copyPass.material.blending=ci,this.clock=new zE}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let n=!1;for(let i=0,r=this.passes.length;i<r;i++){const o=this.passes[i];if(o.enabled!==!1){if(o.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),o.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),o.needsSwap){if(n){const a=this.renderer.getContext(),c=this.renderer.state.buffers.stencil;c.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),c.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}O_!==void 0&&(o instanceof O_?n=!0:o instanceof Q4&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new oe);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(n,i),this.renderTarget2.setSize(n,i);for(let r=0;r<this.passes.length;r++)this.passes[r].setSize(n,i)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class PG extends Ed{constructor(e,t,n=null,i=null,r=null){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=i,this.clearAlpha=r,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new Ze}render(e,t,n){const i=e.autoClear;e.autoClear=!1;let r,o;this.overrideMaterial!==null&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor,e.getClearAlpha())),this.clearAlpha!==null&&(r=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear===!0&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor!==null&&e.setClearColor(this._oldClearColor),this.clearAlpha!==null&&e.setClearAlpha(r),this.overrideMaterial!==null&&(this.scene.overrideMaterial=o),e.autoClear=i}}export{vG as $,FE as A,bn as B,aG as C,IE as D,Ti as E,Dt as F,bu as G,Xt as H,bU as I,hG as J,dG as K,B3 as L,Vn as M,Ii as N,dn as O,tG as P,TG as Q,J4 as R,dm as S,gy as T,SG as U,oe as V,uG as W,xG as X,_G as Y,fG as Z,cG as _,P as a,tm as a0,mG as a1,pG as a2,gG as a3,yG as a4,bG as a5,rG as a6,CG as a7,PG as a8,NG as a9,RG as aa,wG as ab,zE as ac,Wn as ad,nm as ae,iG as af,Hr as ag,Ol as ah,SE as b,jn as c,om as d,Ze as e,sy as f,MG as g,a4 as h,fM as i,Zi as j,oy as k,sr as l,eG as m,q3 as n,$s as o,cm as p,ht as q,nG as r,di as s,yE as t,oG as u,EG as v,Do as w,AG as x,yn as y,St as z};
