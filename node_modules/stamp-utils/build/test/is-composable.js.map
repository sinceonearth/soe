{"version":3,"sources":["../../src/test/is-composable.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEA,oBAAK,cAAL,EAAqB,gBAAQ;AAC3B,OAAK,IAAL,CAAU,eAAV,EAA2B,kBAAU;AACnC,QAAM,MAAM,+BAAZ;AACA,QAAM,QAAQ,wBAAd;AACA,QAAM,SAAS,oBAAa,KAAb,CAAf;AACA,QAAM,WAAW,IAAjB;;AAEA,WAAO,KAAP,CAAa,MAAb,EAAqB,QAArB,EAA+B,GAA/B;AACA,WAAO,GAAP;AACD,GARD;;AAUA,OAAK,IAAL,CAAU,oBAAV,EAAgC,kBAAU;AACxC,QAAM,MAAM,oCAAZ;AACA,QAAM,aAAa;AACjB,kBAAY;AACV,aAAK;AADK;AADK,KAAnB;AAKA,QAAM,SAAS,oBAAa,UAAb,CAAf;AACA,QAAM,WAAW,IAAjB;;AAEA,WAAO,KAAP,CAAa,MAAb,EAAqB,QAArB,EAA+B,GAA/B;AACA,WAAO,GAAP;AACD,GAZD;AAaD,CAxBD","file":"is-composable.js","sourcesContent":["import test from 'tape';\nimport compose from 'compose';\nimport {isComposable} from '../';\n\ntest('isComposable', nest => {\n  nest.test('...with stamp', assert => {\n    const msg = 'should return true for stamps';\n    const stamp = compose();\n    const actual = isComposable(stamp);\n    const expected = true;\n\n    assert.equal(actual, expected, msg);\n    assert.end();\n  });\n\n  nest.test('...with descriptor', assert => {\n    const msg = 'should return true for descriptors';\n    const descriptor = {\n      properties: {\n        foo: 'bar'\n      }\n    };\n    const actual = isComposable(descriptor);\n    const expected = true;\n\n    assert.equal(actual, expected, msg);\n    assert.end();\n  });\n});\n"]}